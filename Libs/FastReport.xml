<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FastReport</name>
    </assembly>
    <members>
        <member name="T:FastReport.DigitalSignatureObject">
            <summary>
            The class for representing visible digital signature in the report.
            </summary>
        </member>
        <member name="T:FastReport.Export.Dxf.DxfFillMode">
            <summary>
            Variants of filling
            </summary>
        </member>
        <member name="F:FastReport.Export.Dxf.DxfFillMode.Solid">
            <summary>
            Solid filling of hatch and solid objects
            </summary>
        </member>
        <member name="F:FastReport.Export.Dxf.DxfFillMode.Border">
            <summary>
            Draw only borders of hatch and solid objects
            </summary>
        </member>
        <member name="P:FastReport.Export.Dxf.DxfExport.BarcodesGap">
            <summary>
            Gets or sets lines/polygons gap for barcodes object, in millimeters
            </summary>
        </member>
        <member name="P:FastReport.Export.Dxf.DxfExport.FillMode">
            <summary>
            Gets or sets the dxf objects fill mode
            </summary>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Dxf.DxfExport"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.ExportObj(FastReport.Base)">
            <summary>
            Export all report objects
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.ExportBand(FastReport.Base)">
            <summary>
            Export of Band
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.ExportPageBegin(FastReport.ReportPage)">
            <summary>
            Begin exporting of page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.ExportPageEnd(FastReport.ReportPage)">
            <summary>
            End exporting
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.AddBandObject(FastReport.BandBase)">
            <summary>
            Add BandObject.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.AddTextObject(FastReport.TextObject,System.Boolean)">
            <summary>
            Add TextObject.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.Save(System.String)">
            <summary>
            Save DXF file.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.Save(System.IO.Stream)">
            <summary>
            Save DXF stream.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.AddLine(FastReport.LineObject)">
            <summary>
            Add Line.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dxf.DxfExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Export.Dxf.Groups.GroupDouble">
            <summary>
             Double precision 3D point value
            </summary>
        </member>
        <member name="M:FastReport.Export.Dxf.Groups.GroupString.#ctor(System.Int32,System.String)">
            <summary>
            Code range: 0-9
            String (with the introduction of extended symbol names in AutoCAD 2000, the 255-character
            limit has been increased to 2049 single-byte characters not including the newline at the end
            of the line)
            </summary>
        </member>
        <member name="M:FastReport.Export.Dxf.Groups.GroupUtils.CreateName(System.String)">
            <summary>
            Sets Name group
            </summary>
            <param name="value">Name (attribute tag, block name, and so on)</param>
        </member>
        <member name="M:FastReport.Export.Dxf.Groups.GroupUtils.CreateTypeName(System.String)">
            <summary>
            Sets Name group
            </summary>
            <param name="value">Name (attribute tag, block name, ENDSEC, and so on)</param>
        </member>
        <member name="F:FastReport.Export.Dxf.Utils.ACIDictionary.ACI_RGB">
            <summary>
            AutoCAD Color Index -> RGB Color table
            </summary>
        </member>
        <member name="F:FastReport.Export.Dxf.Utils.ACIDictionary.RGB_ACI">
            <summary>
            RGB Color table -> AutoCAD Color Index
            </summary>
        </member>
        <member name="M:FastReport.Export.Dxf.Utils.ACIDictionary.GetAciColor(System.Drawing.Color)">
            <summary>
            Get AutoCAD Color Index
            </summary>
            <param name="color"></param>
            <returns>AutoCAD Color Index</returns>
        </member>
        <member name="T:FastReport.Export.BIFF8.Excel2003Document">
            <summary>
            Excel 2003 export class
            </summary>
        </member>
        <member name="M:FastReport.Export.BIFF8.Excel2003Document.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.BIFF8.Excel2003Document.Wysiwyg">
            <summary>
            Gets or sets a value that determines whether the wysiwyg mode should be used 
            for better results.
            </summary>
        </member>
        <member name="P:FastReport.Export.BIFF8.Excel2003Document.PageBreaks">
            <summary>
            Gets or sets a value that determines whether to insert page breaks in the output file or not.
            </summary>
        </member>
        <member name="M:FastReport.Export.BIFF8.Excel2003Document.Read(System.String)">
            <summary>
            Read and parse Excel document
            </summary>
        </member>
        <member name="M:FastReport.Export.BIFF8.Excel2003Document.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.BIFF8.Excel2003Document.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.BIFF8.Excel2003Document.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.BIFF8.Excel2003Document.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.BIFF8.Excel2003Document.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.BIFF8.Excel2003Document.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.BIFF8.Excel2003Document.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.BIFF8.Excel2003Document.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Export.BIFF8.BIFF8_ExcelDrawing.csp">
            <summary>
            Related to DRAWING group. Used once
            </summary>
        </member>
        <member name="T:FastReport.Export.BIFF8.StreamHelper">
            <summary>
            Provides API to binary stream
            </summary>
        </member>
        <member name="T:FastReport.Export.BIFF8.BIFF8_Container">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.Export.Csv.CSVExport">
            <summary>
            Represents the CSV export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.Csv.CSVExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.Csv.CSVExport.Encoding">
            <summary>
            Gets or set the resulting file encoding.
            </summary>
        </member>
        <member name="P:FastReport.Export.Csv.CSVExport.Separator">
            <summary>
            Gets or set the separator character used in csv format.
            </summary>
        </member>
        <member name="P:FastReport.Export.Csv.CSVExport.DataOnly">
            <summary>
            Gets or sets a value that determines whether to export the databand rows only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Csv.CSVExport.NoQuotes">
            <summary>
            Gets or sets a value that disable quotation marks for text.
            </summary>
        </member>
        <member name="P:FastReport.Export.Csv.CSVExport.EscapeQuotes">
            <summary>
            Gets or sets a value that disable escaping quotation marks for text.
            </summary>
        </member>
        <member name="M:FastReport.Export.Csv.CSVExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Csv.CSVExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Csv.CSVExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Csv.CSVExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Csv.CSVExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Csv.CSVExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Csv.CSVExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Csv.CSVExport"/> class.
            </summary>       
        </member>
        <member name="T:FastReport.Export.Dbf.DBFExport">
            <summary>
            Represents the export to DBF.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dbf.DBFExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.Dbf.DBFExport.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
        </member>
        <member name="P:FastReport.Export.Dbf.DBFExport.DataOnly">
            <summary>
            Gets or sets a value that determines whether to export the databand rows only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Dbf.DBFExport.FieldNames">
            <summary>
            Gets or sets the list of field names.
            </summary>
            <remarks>
            The field names must be separated by ";" symbol, for example: Column1;Column2;Column3
            </remarks>
        </member>
        <member name="M:FastReport.Export.Dbf.DBFExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Dbf.DBFExport"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dbf.DBFExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Dbf.DBFExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Dbf.DBFExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Dbf.DBFExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Dbf.DBFExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Dbf.DBFExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Dbf.DBFExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Export.Dbf.Record">
            <summary>
            Represents the record.
            </summary>
        </member>
        <member name="P:FastReport.Export.Dbf.Record.Item(System.Int32)">
            <summary>
            Gets or sets the field with a specified index.
            </summary>
        </member>
        <member name="P:FastReport.Export.Dbf.Record.Count">
            <summary>
            Gets the count of a fields.
            </summary>
        </member>
        <member name="P:FastReport.Export.Dbf.Record.Size">
            <summary>
            Gets the size of a fields.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dbf.Record.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Dbf.Record"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dbf.Record.Add(System.Text.StringBuilder)">
            <summary>
            Adds the new item into a list of fields.
            </summary>
        </member>
        <member name="M:FastReport.Export.Dbf.Record.Clear">
            <summary>
            Clears the list of fields.
            </summary>
        </member>
        <member name="T:FastReport.Export.Email.EmailExport">
            <summary>
            Represents the email export.
            </summary>
            <remarks>
            In order to use this class, you need to set up at least the following properties:
            <see cref="P:FastReport.Export.Email.EmailExport.Address"/>, <see cref="P:FastReport.Export.Email.EmailExport.Subject"/>, <see cref="P:FastReport.Export.Email.EmailExport.Account"/>. Use the <see cref="P:FastReport.Export.Email.EmailExport.Export"/>
            property to choose the format of an attachment. If you leave it empty, the attachment will be
            in the .FRP format (FastReport prepared report). When you done with settings, call the
            <see cref="M:FastReport.Export.Email.EmailExport.SendEmail(FastReport.Report[])"/> method to send an email.
            </remarks>
            <example>
            This example demonstrates the bare minimum required to send an email.
            <code>
            EmailExport export = new EmailExport();
            export.Account.Address = "my@address.net";
            export.Account.Host = "myhost";
            export.Address = "recipient@address.net";
            export.Subject = "Re: analysis report";
            // the report1 report must be prepared at this moment
            export.SendEmail(report1);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Export.Email.EmailExport.ShowDialog">
            <summary>
            Displays the dialog box in which you can set up all parameters.
            </summary>
            <returns><b>true</b> if user pressed OK button in the dialog.</returns>
        </member>
        <member name="P:FastReport.Export.Email.EmailExport.Address">
            <summary>
            Gets or sets the recipient's address.
            </summary>
            <remarks>
            This property must contain value in form "john@url.com".
            </remarks>
        </member>
        <member name="P:FastReport.Export.Email.EmailExport.CC">
            <summary>
            Gets or sets the carbon copy adresses.
            </summary>
            <remarks>
            This property must contain an array of values in form "john@url.com".
            </remarks>
        </member>
        <member name="P:FastReport.Export.Email.EmailExport.Subject">
            <summary>
            Gets or sets the subject of the message.
            </summary>
        </member>
        <member name="P:FastReport.Export.Email.EmailExport.MessageBody">
            <summary>
            Gets or sets the message body.
            </summary>
        </member>
        <member name="P:FastReport.Export.Email.EmailExport.Export">
            <summary>
            Gets or sets the export filter which will be used to export a report.
            </summary>
            <remarks>
            Set this property to instance of any export filter. When you send the email, the report
            will be exported using that export filter. 
            <para/>By default, this property is set to <b>null</b>. In this case the report will be send
            in .FRP format.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Email.EmailExport.Account">
            <summary>
            Gets the email account settings such as host, user name, password.
            </summary>
        </member>
        <member name="P:FastReport.Export.Email.EmailExport.Report">
            <summary>
            Gets the parent Report object
            </summary>
        </member>
        <member name="M:FastReport.Export.Email.EmailExport.SendEmail(FastReport.Report[])">
            <summary>
            Sends an email.
            </summary>
            <param name="reports">Reports that will be sent as attachments.</param>
            <remarks>
            Before using this method, set up the following properties (it's a bare minimum):
            <see cref="P:FastReport.Export.Email.EmailExport.Address"/>, <see cref="P:FastReport.Export.Email.EmailExport.Subject"/>, <see cref="P:FastReport.Export.Email.EmailExport.Account"/>.
            <para/>The report that you pass in this method must be prepared using the <b>Prepare</b> method.
            </remarks>
        </member>
        <member name="M:FastReport.Export.Email.EmailExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Email.EmailExport.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Email.EmailExport.#ctor(FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Email.EmailExport"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Export.Email.EmailExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Email.EmailExport"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Export.Email.EmailExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Email.EmailExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Export.Email.EmailExportForm.HideAttachmentSettings">
            <summary>
            Hides attachment settings.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Export.Email.EmailExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Email.EmailExportForm.#ctor(FastReport.Export.Email.EmailExport)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Email.EmailExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Export.Email.EmailExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Export.Email.EmailExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Export.Email.EmailExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Export.Email.MAPI">
            <summary>
            Allows to send message using MAPI interface.
            </summary>
        </member>
        <member name="M:FastReport.Export.Email.MAPI.SendMail(System.IntPtr,System.String[],System.String,System.String,System.String[],System.String[])">
            <summary>
            Sends a message.
            </summary>
            <param name="handle">Parent window handle.</param>
            <param name="files">Files to attach.</param>
            <param name="mailSubject">Email subject.</param>
            <param name="mailBody">Email body.</param>
            <param name="recipentName">Recipient names.</param>
            <param name="recipientAddress">Recipient addresses.</param>
            <returns>Error code. <b>0</b> if operation was completed succesfully.</returns>
        </member>
        <member name="M:FastReport.Export.Email.MAPI.GetErrorText(System.Int32)">
            <summary>
            Returns a text describing an error.
            </summary>
            <param name="error">The error code.</param>
            <returns>The text describing an error.</returns>
        </member>
        <member name="T:FastReport.Export.Email.EmailSettings">
            <summary>
            Contains the email account settings such as host, email address, name.
            </summary>
            <remarks>
            You have to set up at least the <see cref="P:FastReport.Export.Email.EmailSettings.Address"/> and <see cref="P:FastReport.Export.Email.EmailSettings.Host"/> properties. If your
            host requires authentication, provide the <see cref="P:FastReport.Export.Email.EmailSettings.UserName"/> and <see cref="P:FastReport.Export.Email.EmailSettings.Password"/>
            properties as well.
            <para/>Set <see cref="P:FastReport.Export.Email.EmailSettings.UseMAPI"/> property to <b>true</b> if you want to use default email client
            such as Outlook to send an email. In this case, all other properties will be ignored.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Email.EmailSettings.Address">
            <summary>
            Gets or sets the sender's email address.
            </summary>
            <remarks>
            This property contains your email address (for example, "john@site.com").
            </remarks>
        </member>
        <member name="P:FastReport.Export.Email.EmailSettings.Name">
            <summary>
            Gets or sets the sender's name.
            </summary>
            <remarks>
            This property contains your name (for example, "John Smith").
            </remarks>
        </member>
        <member name="P:FastReport.Export.Email.EmailSettings.MessageTemplate">
            <summary>
            Gets or sets the template that will be used to create a new message.
            </summary>
        </member>
        <member name="P:FastReport.Export.Email.EmailSettings.Host">
            <summary>
            Gets or sets the SMTP host name or IP address.
            </summary>
        </member>
        <member name="P:FastReport.Export.Email.EmailSettings.Port">
            <summary>
            Gets or sets the SMTP port.
            </summary>
            <remarks>
            The default value for this property is <b>25</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Email.EmailSettings.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
            <remarks>
            Specify the <see cref="P:FastReport.Export.Email.EmailSettings.UserName"/> and <see cref="P:FastReport.Export.Email.EmailSettings.Password"/> properties if your host requires
            authentication.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Email.EmailSettings.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <remarks>
            Specify the <see cref="P:FastReport.Export.Email.EmailSettings.UserName"/> and <see cref="P:FastReport.Export.Email.EmailSettings.Password"/> properties if your host requires
            authentication.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Email.EmailSettings.EnableSSL">
            <summary>
            Gets or sets a value that determines whether to enable the SSL protocol.
            </summary>
        </member>
        <member name="P:FastReport.Export.Email.EmailSettings.AllowUI">
            <summary>
            Gets or sets a value that determines whether the account setting page 
            in the "Send Email" window is enabled.
            </summary>
        </member>
        <member name="P:FastReport.Export.Email.EmailSettings.UseMAPI">
            <summary>
            Gets or sets a value that determines whether to use MAPI instead of SMTP when sending an email.
            </summary>
        </member>
        <member name="M:FastReport.Export.Email.EmailSettings.Assign(FastReport.Export.Email.EmailSettings)">
            <summary>
            Copies email settings from another source.
            </summary>
            <param name="source">Source to copy settings from.</param>
        </member>
        <member name="M:FastReport.Export.Email.EmailSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Email.EmailSettings"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Export.ExportBase">
            <summary>
            The base class for all export filters.
            </summary>
        </member>
        <member name="M:FastReport.Export.ExportBase.Export(FastReport.Report)">
            <summary>
            Exports the report to a file.
            </summary>
            <param name="report">Report to export.</param>
            <returns><b>true</b> if report was succesfully exported.</returns>
            <remarks>
            This method displays an export options dialog, then prompts a file name using standard "Open file"
            dialog. If both dialogs were closed by OK button, exports the report and returns <b>true</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Export.ExportBase.ShowDialog">
            <summary>
            Displays a dialog with export options.
            </summary>
            <returns><b>true</b> if dialog was closed with OK button.</returns>
        </member>
        <member name="M:FastReport.Export.ExportBase.GetOverlayPage(FastReport.ReportPage)">
            <summary>
            Gets a report page with OverlayBand if it is a Demo or Academic.
            </summary>
            <param name="page">The prepared report page</param>
            <returns>The prepared report page with OverlayBand.</returns>
        </member>
        <member name="P:FastReport.Export.ExportBase.GeneratedStreams">
            <summary>
            Gets list of generated streams.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.Zoom">
            <summary>
            Zoom factor for output file
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.FileFilter">
            <summary>
            File filter that can be used in the "Save file" dialog.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.PageRange">
            <summary>
            Range of pages to export.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.PageNumbers">
            <summary>
            Page numbers to export.
            </summary>
            <remarks>
            Use page numbers separated by comma and/or page ranges, for example: "1,3-5,12". Empty string means 
            that all pages need to be exported.
            </remarks>
        </member>
        <member name="P:FastReport.Export.ExportBase.CurPage">
            <summary>
            Current page number.
            </summary>
            <remarks>
            Page number need to be exported if user selects "Current page" radiobutton in the export options dialog.
            This property is typically set to current page number in the preview window.
            </remarks>
        </member>
        <member name="P:FastReport.Export.ExportBase.OpenAfterExport">
            <summary>
            Open the document after export.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.AllowOpenAfter">
            <summary>
            Allows or disables the OpenAfterExport feature.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.ShowProgress">
            <summary>
            Gets or sets a value that determines whether to show progress window during export or not.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.GeneratedFiles">
            <summary>
            Gets a list of files generated by this export.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.HasMultipleFiles">
            <summary>
            Gets a value indicating that the export may produce multiple output files.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.ShiftNonExportable">
            <summary>
            Gets or sets a value indicating that the report bands should be shifted, if page 
            has any non-exportable bands
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.SaveInitialDirectory">
            <summary>
            Gets or sets the initial directory that is displayed by a save file dialog.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.Stream">
            <summary>
            Stream to export to.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.FileName">
            <summary>
            File name to export to.
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportBase.Pages">
            <summary>
            Array of page numbers to export.
            </summary>
        </member>
        <member name="M:FastReport.Export.ExportBase.GetFileFilter">
            <summary>
            Returns a file filter for a save dialog.
            </summary>
            <returns>String that contains a file filter, for example: "Bitmap image (*.bmp)|*.bmp"</returns>
        </member>
        <member name="M:FastReport.Export.ExportBase.Start">
            <summary>
            This method is called when the export starts.
            </summary>
        </member>
        <member name="M:FastReport.Export.ExportBase.ExportPageBegin(FastReport.ReportPage)">
            <summary>
            This method is called at the start of exports of each page.
            </summary>
            <param name="page">Page for export may be empty in this method.</param>
        </member>
        <member name="M:FastReport.Export.ExportBase.ExportPageEnd(FastReport.ReportPage)">
            <summary>
            This method is called at the end of exports of each page.
            </summary>
            <param name="page">Page for export may be empty in this method.</param>
        </member>
        <member name="M:FastReport.Export.ExportBase.ExportBand(FastReport.Base)">
            <summary>
            This method is called for each band on exported page.
            </summary>
            <param name="band">Band, dispose after method compite.</param>
        </member>
        <member name="M:FastReport.Export.ExportBase.Finish">
            <summary>
            This method is called when the export is finished.
            </summary>
        </member>
        <member name="M:FastReport.Export.ExportBase.GetPage(System.Int32)">
            <summary>
            Gets a report page with specified index.
            </summary>
            <param name="index">Zero-based index of page.</param>
            <returns>The prepared report page.</returns>
        </member>
        <member name="M:FastReport.Export.ExportBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.ExportBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.ExportBase.Export(FastReport.Report,System.IO.Stream)">
            <summary>
            Exports the report to a stream.
            </summary>
            <param name="report">Report to export.</param>
            <param name="stream">Stream to export to.</param>
            <remarks>
            This method does not show an export options dialog. If you want to show it, call <see cref="M:FastReport.Export.ExportBase.ShowDialog"/>
            method prior to calling this method, or use the "Export(Report report)" method instead.
            </remarks>
        </member>
        <member name="M:FastReport.Export.ExportBase.Export(FastReport.Report,System.String)">
            <summary>
            Exports the report to a file.
            </summary>
            <param name="report">Report to export.</param>
            <param name="fileName">File name to export to.</param>
            <remarks>
            This method does not show an export options dialog. If you want to show it, call <see cref="M:FastReport.Export.ExportBase.ShowDialog"/>
            method prior to calling this method, or use the "Export(Report report)" method instead.
            </remarks>
        </member>
        <member name="M:FastReport.Export.ExportBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.ExportBase"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.HTMLExport">
            <summary>
            Represents the HTML export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Export.Html.HTMLExport.CustomDraw">
            <summary>
            Draw any custom controls
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.OnCustomDraw(FastReport.Export.Html.CustomDrawEventArgs)">
            <summary>
            Draw any custom controls.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:FastReport.Export.Html.HTMLExport.ExportType">
            <summary>
            Types of html export
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExport.ExportType.Export">
            <summary>
            Simple export
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExport.ExportType.WebPreview">
            <summary>
            Web preview mode
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExport.ExportType.WebPrint">
            <summary>
            Web print mode
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExport.embeddedImages">
            <summary>
            hash:base64Image
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.EmbeddedImages">
            <summary>
            Gets or sets images, embedded in html (hash:base64Image)
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.ReportID">
            <summary>
            Sets a ID of report
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.OnClickTemplate">
            <summary>
            Sets an onclick template
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Layers">
            <summary>
            Enable or disable layers export mode
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.StylePrefix">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.WebImagePrefix">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.WebImageSuffix">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Count">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.PreparedPages">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Print">
            <summary>
            Enable or disable showing of print dialog in browser when html document is opened
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Preview">
            <summary>
            Enable or disable preview in Web settings
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.PageBreaks">
            <summary>
            Enable or disable the breaks between pages in print preview when single page mode is enabled
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Format">
            <summary>
            Specifies the output format
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.WidthUnits">
            <summary>
            Specifies the width units in HTML export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.HeightUnits">
            <summary>
            Specifies the height units in HTML export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Pictures">
            <summary>
            Enable or disable the pictures in HTML export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.EmbedPictures">
            <summary>
            Enable or disable embedding pictures in HTML export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.WebMode">
            <summary>
            Enable or disable the WEB mode in HTML export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.ExportMode">
            <summary>
            Gets or sets html export mode
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.SinglePage">
            <summary>
            Enable or disable the single HTML page creation
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Navigator">
            <summary>
            Enable or disable the page navigator in html export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.SubFolder">
            <summary>
            Enable or disable the sub-folder for files of export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.Wysiwyg">
            <summary>
             Gets or sets the Wysiwyg quality of export
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.ImageFormat">
            <summary>
            Gets or sets the image format.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.PrintPageData">
            <summary>
            Gets print page data
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.SaveStreams">
            <summary>
            Enable or disable saving streams in GeneratedStreams collection.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.EnableMargins">
            <summary>
            Enable or disable margins for pages. Works only for Layers-mode.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLExport.EnableVectorObjects">
            <summary>
            Enable or disable export of vector objects such as Barcodes in SVG format.
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ProcessPageBegin(System.Int32,System.Int32,FastReport.ReportPage)">
            <summary>
            Process Page with number p and real page ReportPage
            </summary>
            <param name="p"></param>
            <param name="ReportPage"></param>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ProcessPageEnd(System.Int32,System.Int32)">
            <summary>
            Process Page with number p and real page ReportPage
            </summary>
            <param name="p"></param>
            <param name="ReportPage"></param>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.Init_WebMode">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Html.HTMLExport"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Export.Html.CustomDrawEventArgs">
            <summary>
            Event arguments for custom drawing of report objects.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.report">
            <summary>
            Report object
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.reportObject">
            <summary>
            ReportObject.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.done">
            <summary>
            Resulting successfull drawing flag.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.html">
            <summary>
            Resulting HTML string.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.css">
            <summary>
            Resulting CSS string.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.layers">
            <summary>
            Layers mode when true or Table mode when false.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.zoom">
            <summary>
            Zoom value for scale position and sizes.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.left">
            <summary>
            Left position.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.top">
            <summary>
            Top position.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.width">
            <summary>
            Width of object.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.CustomDrawEventArgs.height">
            <summary>
            Height of object.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.HtmlTemplates">
            <summary>
            Represents the HTML export templates.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HtmlTemplates.PageTemplateTitle">
            <summary>
            Page Template Title
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HtmlTemplates.PageTemplateFooter">
            <summary>
            Page Template Footer
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HtmlTemplates.NavigatorTemplate">
            <summary>
            Navigator Template
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HtmlTemplates.OutlineTemplate">
            <summary>
            OutlineTemplate
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HtmlTemplates.IndexTemplate">
            <summary>
            Index Template
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HtmlTemplates.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Html.HtmlTemplates"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.HTMLExportFormat">
            <summary>
            Represents the HTML export format enum
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExportFormat.MessageHTML">
            <summary>
            Represents the message-HTML type
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HTMLExportFormat.HTML">
            <summary>
            Represents the HTML type
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.ImageFormat">
            <summary>
            Specifies the image format in HTML export.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.ImageFormat.Bmp">
            <summary>
            Specifies the .bmp format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.ImageFormat.Png">
            <summary>
            Specifies the .png format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.ImageFormat.Jpeg">
            <summary>
            Specifies the .jpg format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.ImageFormat.Gif">
            <summary>
            Specifies the .gif format.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.HtmlSizeUnits">
            <summary>
            Specifies the units of HTML sizes.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HtmlSizeUnits.Pixel">
            <summary>
            Specifies the pixel units.
            </summary>
        </member>
        <member name="F:FastReport.Export.Html.HtmlSizeUnits.Percent">
            <summary>
            Specifies the percent units.
            </summary>
        </member>
        <member name="T:FastReport.Export.Html.HTMLPageData">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.Width">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.Height">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.CSSText">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.PageText">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.Pictures">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.Guids">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.PageEvent">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Html.HTMLPageData.PageNumber">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Export.Html.HTMLPageData.#ctor">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:FastReport.Export.Mht.MHTExport">
            <summary>
            Represents the MHT export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.Mht.MHTExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.Mht.MHTExport.Pictures">
            <summary>
            Enable or disable the pictures in MHT export
            </summary>
        </member>
        <member name="P:FastReport.Export.Mht.MHTExport.Wysiwyg">
            <summary>
             Gets or sets the Wysiwyg quality of export
            </summary>
        </member>
        <member name="P:FastReport.Export.Mht.MHTExport.ImageFormat">
            <summary>
            Gets or sets the image format.
            </summary>
        </member>
        <member name="M:FastReport.Export.Mht.MHTExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Mht.MHTExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Mht.MHTExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Mht.MHTExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Mht.MHTExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Image.ImageExport">
            <summary>
            Represents the image export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.ImageFormat">
            <summary>
            Gets or sets the image format.
            </summary>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.SeparateFiles">
            <summary>
            Gets or sets a value that determines whether to generate separate image file 
            for each exported page.
            </summary>
            <remarks>
            If this property is set to <b>false</b>, the export filter will produce one big image
            containing all exported pages. Be careful using this property with a big report
            because it may produce out of memory error.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.Resolution">
            <summary>
            Gets or sets image resolution, in dpi.
            </summary>
            <remarks>
            By default this property is set to 96 dpi. Use bigger values (300-600 dpi)
            if you going to print the exported images.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.ResolutionX">
            <summary>
            Gets or sets horizontal image resolution, in dpi.
            </summary>
            <remarks>
            Separate horizontal and vertical resolution is used when exporting to TIFF. In other
            cases, use the <see cref="P:FastReport.Export.Image.ImageExport.Resolution"/> property instead.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.ResolutionY">
            <summary>
            Gets or sets vertical image resolution, in dpi.
            </summary>
            <remarks>
            Separate horizontal and vertical resolution is used when exporting to TIFF. In other
            cases, use the <see cref="P:FastReport.Export.Image.ImageExport.Resolution"/> property instead.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.JpegQuality">
            <summary>
            Gets or sets the jpg image quality.
            </summary>
            <remarks>
            This property is used if <see cref="P:FastReport.Export.Image.ImageExport.ImageFormat"/> is set to <b>Jpeg</b>. By default
            it is set to 100. Use lesser value to decrease the jpg file size.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.MultiFrameTiff">
            <summary>
            Gets or sets the value determines whether to produce multi-frame tiff file.
            </summary>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.MonochromeTiff">
            <summary>
            Gets or sets a value that determines whether the Tiff export must produce monochrome image.
            </summary>
            <remarks>
            Monochrome tiff image is compressed using the compression method specified in the 
            <see cref="P:FastReport.Export.Image.ImageExport.MonochromeTiffCompression"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.MonochromeTiffCompression">
            <summary>
            Gets or sets the compression method for a monochrome TIFF image.
            </summary>
            <remarks>
            This property is used only when exporting to TIFF image, and the <see cref="P:FastReport.Export.Image.ImageExport.MonochromeTiff"/> property
            is set to <b>true</b>. 
            <para/>The valid values for this property are: <b>EncoderValue.CompressionNone</b>, 
            <b>EncoderValue.CompressionLZW</b>, <b>EncoderValue.CompressionRle</b>, 
            <b>EncoderValue.CompressionCCITT3</b>, <b>EncoderValue.CompressionCCITT4</b>. 
            The default compression method is CCITT4.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Image.ImageExport.PaddingNonSeparatePages">
            <summary>
            Sets padding in non separate pages
            </summary>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Image.ImageExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Image.ImageExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Image.ImageExportFormat">
            <summary>
            Specifies the image export format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Bmp">
            <summary>
            Specifies the .bmp format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Png">
            <summary>
            Specifies the .png format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Jpeg">
            <summary>
            Specifies the .jpg format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Gif">
            <summary>
            Specifies the .gif format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Tiff">
            <summary>
            Specifies the .tif format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Image.ImageExportFormat.Metafile">
            <summary>
            Specifies the .emf format.
            </summary>
        </member>
        <member name="T:FastReport.Export.Json.JsonExport">
            <summary>
            Represents the JSON export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.Json.JsonExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Json.JsonExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Json.JsonExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Json.JsonExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Json.JsonExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Json.JsonExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Json.JsonExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Json.JsonExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Json.JsonExport"/> class.
            </summary>       
        </member>
        <member name="T:FastReport.Export.LaTeX.LaTeXExport">
            <summary>
            Represents the LaTeX export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.LaTeX.LaTeXExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.LaTeX.LaTeXExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.LaTeX.LaTeXExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.LaTeX.LaTeXExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.LaTeX.LaTeXExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.LaTeX.LaTeXExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.LaTeX.LaTeXExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.LaTeX.LaTeXExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.LaTeX.LaTeXExport"/> class.
            </summary>       
        </member>
        <member name="T:FastReport.Export.Odf.ODFExport">
            <summary>
            Base class for any ODF exports
            </summary>
        </member>
        <member name="M:FastReport.Export.Odf.ODFExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.Odf.ODFExport.PageBreaks">
            <summary>
            Switch of page breaks
            </summary>
        </member>
        <member name="P:FastReport.Export.Odf.ODFExport.Wysiwyg">
            <summary>
            Wysiwyg mode, set for better results
            </summary>
        </member>
        <member name="P:FastReport.Export.Odf.ODFExport.Creator">
            <summary>
            Creator of the document
            </summary>
        </member>
        <member name="M:FastReport.Export.Odf.ODFExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Odf.ODFExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Odf.ODFExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Odf.ODFExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Odf.ODFExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Odf.ODFExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Odf.ODFExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Odf.ODFExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Odf.ODSExport">
            <summary>
            Open Document Spreadsheet export (Open Office Calc)
            </summary>
        </member>
        <member name="M:FastReport.Export.Odf.ODSExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Odf.ODSExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Odf.ODSExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Odf.ODTExport">
            <summary>
            Open Document Text export (Open Office Writer)
            </summary>
        </member>
        <member name="M:FastReport.Export.Odf.ODTExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Odf.ODTExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Odf.ODTExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.Word2007Export">
            <summary>
            MS Word 2007 export class
            </summary>
        </member>
        <member name="M:FastReport.Export.OoXML.Word2007Export.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Export.OoXML.Word2007Export.RowHeightType">
            <summary>
            Types of table rows height
            </summary>
        </member>
        <member name="F:FastReport.Export.OoXML.Word2007Export.RowHeightType.Exactly">
            <summary>
            Exactly height
            </summary>
        </member>
        <member name="F:FastReport.Export.OoXML.Word2007Export.RowHeightType.Minimum">
            <summary>
            Minimum height
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Word2007Export.MatrixBased">
            <summary>
            Enable or disable matrix view of document
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Word2007Export.ParagraphBased">
            <summary>
            Enable or disable Paragraph view of document
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Word2007Export.Wysiwyg">
            <summary>
            Gets or sets a value that determines whether the wysiwyg mode should be used 
            for better results.
            </summary>
            <remarks>
            Default value is <b>true</b>. In wysiwyg mode, the resulting Excel file will look
            as close as possible to the prepared report. On the other side, it may have a lot 
            of small rows/columns, which will make it less editable. If you set this property
            to <b>false</b>, the number of rows/columns in the resulting file will be decreased.
            You will get less wysiwyg, but more editable file.
            </remarks>
        </member>
        <member name="P:FastReport.Export.OoXML.Word2007Export.RowHeightIs">
            <summary>
            Gets or sets the type of height calculation.
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Word2007Export.RowHeight">
            <summary>
            Gets or sets the type of height calculation.
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Word2007Export.PrintOptimized">
            <summary>
            Enable or disable a resolution optimization.
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Word2007Export.DoNotExpandShiftReturn">
            <summary>
            Enable or disable DoNotExpandShiftReturn.
            </summary>
        </member>
        <member name="M:FastReport.Export.OoXML.Word2007Export.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Word2007Export.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Word2007Export.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Word2007Export.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Word2007Export.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Word2007Export.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Word2007Export.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Word2007Export.#ctor">
            <summary>
            Initializes a new instance of the Word2007Export class.
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.PowerPoint2007Export">
            <summary>
            Represents the PowerPoint 2007 export.
            </summary>
        </member>
        <member name="M:FastReport.Export.OoXML.PowerPoint2007Export.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.OoXML.PowerPoint2007Export.ImageFormat">
            <summary>
            Gets or sets the image format used when exporting.
            </summary>
        </member>
        <member name="M:FastReport.Export.OoXML.PowerPoint2007Export.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.PowerPoint2007Export.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.PowerPoint2007Export.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.PowerPoint2007Export.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.PowerPoint2007Export.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.PowerPoint2007Export.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.PowerPoint2007Export.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.PowerPoint2007Export.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:FastReport.Export.OoXML.PowerPoint2007Export"/> class with the default settings.
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.Excel2007Export">
            <summary>
            Excel 2007 export class
            </summary>
        </member>
        <member name="M:FastReport.Export.OoXML.Excel2007Export.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Export.OoXML.Excel2007Export.PrintFitMode">
            <summary>
            Defines Print Scaling Mode.
            </summary>
        </member>
        <member name="F:FastReport.Export.OoXML.Excel2007Export.PrintFitMode.NoScaling">
            <summary>
            Print sheets at thier actual size.
            </summary>
        </member>
        <member name="F:FastReport.Export.OoXML.Excel2007Export.PrintFitMode.FitSheetOnOnePage">
            <summary>
            Shrink the printout so that it fits on one page.
            </summary>
        </member>
        <member name="F:FastReport.Export.OoXML.Excel2007Export.PrintFitMode.FitAllColumsOnOnePage">
            <summary>
            Shrink the printout so that it is one page wide.
            </summary>
        </member>
        <member name="F:FastReport.Export.OoXML.Excel2007Export.PrintFitMode.FitAllRowsOnOnePage">
            <summary>
            Shrink the printout so that it is one page high.
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Excel2007Export.PrintFit">
            <summary>
            Gets or sets the Print Fit Mode.
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Excel2007Export.FontScale">
            <summary>
            Gets or sets the font scale value.
            <remarks> Default value is <b>1</b></remarks>
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Excel2007Export.PrintOptimized">
            <summary>
            Enable or disable a resolution optimization.
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Excel2007Export.SplitPages">
            <summary>
            Each report page is placed on a new Excel page.
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Excel2007Export.Wysiwyg">
            <summary>
            Gets or sets a value that determines whether the wysiwyg mode should be used
            for better results.
            </summary>
            <remarks>
            Default value is <b>true</b>. In wysiwyg mode, the resulting Excel file will look
            as close as possible to the prepared report. On the other side, it may have a lot
            of small rows/columns, which will make it less editable. If you set this property
            to <b>false</b>, the number of rows/columns in the resulting file will be decreased.
            You will get less wysiwyg, but more editable file.
            </remarks>
        </member>
        <member name="P:FastReport.Export.OoXML.Excel2007Export.PageBreaks">
            <summary>
            Gets or sets a value that determines whether to insert page breaks in the output file or not.
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Excel2007Export.DataOnly">
            <summary>
            Gets or sets a value that determines whether to export the databand rows only.
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.Excel2007Export.Seamless">
            <summary>
            Enable or disable export of page footers and next page headers without table breaks.
            </summary>
        </member>
        <member name="M:FastReport.Export.OoXML.Excel2007Export.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Excel2007Export.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Excel2007Export.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Excel2007Export.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Excel2007Export.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Excel2007Export.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Excel2007Export.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.Excel2007Export.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.XPSExport">
            <summary>
             Main class of XML export
            </summary>
        </member>
        <member name="M:FastReport.Export.OoXML.XPSExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Export.OoXML.XPSExport.picturesCount">
            <summary>
            PicturesCount
            </summary>
        </member>
        <member name="F:FastReport.Export.OoXML.XPSExport.humanReadable">
            <summary>
            HumanReadable
            </summary>
        </member>
        <member name="M:FastReport.Export.OoXML.XPSExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.XPSExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.XPSExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.XPSExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.XPSExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.XPSExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.OoXML.XPSExport.#ctor">
            <summary>
            Constructor of XPSExport
            </summary>
        </member>
        <member name="M:FastReport.Export.OoXML.XPSExport.Dispose">
            <summary>
            Destructor of XPSExport
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.RTF_ToDocX">
            <summary>
            Save 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:FastReport.Export.OoXML.RTF_ToDocX.Dispose" -->
        <!-- Badly formed XML comment ignored for member "M:FastReport.Export.OoXML.RTF_ToDocX.#ctor(FastReport.RichTextParser.RichDocument)" -->
        <member name="P:FastReport.Export.OoXML.RTF_ToDocX.Padding">
            <summary>
            Padding over ridh object
            </summary>
        </member>
        <member name="P:FastReport.Export.OoXML.RTF_ToDocX.DocX">
            <summary>
            This prperty keep RTF to DOC translation result, i.e. DOCX XML fragment
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OOExportBase">
            <summary>
            Base class for Microsoft Office 2007 export objects
            </summary>
        </member>
        <member name="F:FastReport.Export.OoXML.OOExportBase.xml_header">
            <summary>
            Default XML header
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoXMLBase">
            <summary>
            Base class for export Office Open objects
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoXMLCoreDocumentProperties">
            <summary>
            Core document properties
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoXMLApplicationProperties">
            <summary>
            Core document properties
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.PptShape">
            <summary>
            Power point shape
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.PptLayoutDescriptor">
            <summary>
            Power Point Layout Descriptor
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.PptStyleBase">
            <summary>
            Power Point base class for style element
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.PptStyleGroupBase">
            <summary>
            Base class for styles group
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoSlideBase">
            <summary>
            Base class for slides, masters, and layouts
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoPptSlideMaster">
            <summary>
            Slide masters object
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoPptSlide">
            <summary>
            Ordinaty slide 
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoPptSlideLayout">
            <summary>
            Slide layout object
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoPptPresentation">
            <summary>
            Presentation class
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoPptApplicationProperties">
            <summary>
            PPt Application Properties class
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoPptTableStyles">
            <summary>
            Ppt Table styles class
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoPptPresProperties">
            <summary>
            Ppt Presentation properties class
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoPptViewProps">
            <summary>
            Ppt View Properties class
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.PptImageFormat">
            <summary>
            Specifies the image format in PowerPoint export.
            </summary>
        </member>
        <member name="F:FastReport.Export.OoXML.PptImageFormat.Png">
            <summary>
            Specifies the .png format.
            </summary>
        </member>
        <member name="F:FastReport.Export.OoXML.PptImageFormat.Jpeg">
            <summary>
            Specifies the .jpg format.
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoXMLDrawing">
            <summary>
            Drawing class
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoXMLSharedStringTable">
            <summary>
            Share all strings in document
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoXMLSharedURLTable">
            <summary>
            Share all URL in document
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoXMLDocumentStyles">
            <summary>
            Document styles
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoXMLWorkbook">
            <summary>
            Workbook
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.OoXMLSheet">
            <summary>
            OoXMLSheet class
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.XPS_Picture">
            <summary>
             Picture container
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.XPS_FontList">
            <summary>
             List of all document fonts
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.XPS_PageContent">
            <summary>
             Single page export
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.XPS_FixedDocument">
            <summary>
             Document structure descriptor
            </summary>
        </member>
        <member name="T:FastReport.Export.OoXML.XPS_Font">
            <summary>
             Font container
            </summary>
        </member>
        <member name="M:FastReport.Export.OoXML.XPS_Font.Obfuscation(System.Byte[])">
            <summary>
             Font obfuscation procedure
            </summary>
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport">
            <summary>
            PDF export (Adobe Acrobat)
            </summary>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport.EmbeddedFile">
            <summary>
            Embedded File
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.EmbeddedFile.Name">
            <summary>
            Name of embedded file.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.EmbeddedFile.Description">
            <summary>
            Description of embedded file.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.EmbeddedFile.ModDate">
            <summary>
            Modify Date of embedded file.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.EmbeddedFile.Relation">
            <summary>
            Relationship between the embedded document and the PDF part.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.EmbeddedFile.MIME">
            <summary>
            Valid MIME type. 
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.EmbeddedFile.FileStream">
            <summary>
            Stream of embedded file.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.EmbeddedFile.Xref">
            <summary>
            File reference.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.EmbeddedFile.ZUGFeRDConformanceLevel">
            <summary>
            ZUGFeRD Conformance Level.
            </summary>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.EmbeddedFile.#ctor">
            Initializes a new instance of the <see cref="T:FastReport.Export.Pdf.PDFExport.EmbeddedFile"/> class.
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport.MagnificationFactor">
            <summary>
            Default preview size.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.ActualSize">
            <summary>
            Actual size
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.FitPage">
            <summary>
            Fit Page
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.FitWidth">
            <summary>
            Fit Width
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Percent_10">
            <summary>
            10%
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Percent_25">
            <summary>
            25%
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Percent_50">
            <summary>
            50%
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Percent_75">
            <summary>
            75%
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Percent_100">
            <summary>
            100%
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Percent_125">
            <summary>
            125%
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Percent_150">
            <summary>
            150%
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Percent_200">
            <summary>
            200%
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Percent_400">
            <summary>
            400%
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.MagnificationFactor.Percent_800">
            <summary>
            800%
            </summary>
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport.PdfStandard">
            <summary>
            Standard of PDF format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.PdfStandard.None">
            <summary>
            PDF 1.5
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.PdfStandard.PdfA_2a">
            <summary>
            PDF/A-2a
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.PdfStandard.PdfA_2b">
            <summary>
            PDF/A-2b
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.PdfStandard.PdfA_3a">
            <summary>
            PDF/A-3a
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.PdfStandard.PdfA_3b">
            <summary>
            PDF/A-3b
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.PdfStandard.PdfX_3">
            <summary>
            Pdf/X-3
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.PdfStandard.PdfX_4">
            <summary>
            Pdf/X-4
            </summary>
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport.PdfColorSpace">
            <summary>
            Color Space.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.PdfColorSpace.RGB">
            <summary>
            RGB color space
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.PdfColorSpace.CMYK">
            <summary>
            CMYK color space
            </summary>
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport.ExportType">
            <summary>
            Types of pdf export.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.ExportType.Export">
            <summary>
            Simple export
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.ExportType.WebPrint">
            <summary>
            Web print mode
            </summary>
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport.EmbeddedRelation">
            <summary>
            Relationship between the embedded document and the PDF part.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.EmbeddedRelation.Data">
            <summary>
            The embedded file contains data which is used for the visual representation.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.EmbeddedRelation.Source">
            <summary>
            The embedded file contains the source data for the visual representation derived therefrom in the PDF part.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.EmbeddedRelation.Alternative">
            <summary>
            This data relationship should be used if the embedded data are an alternative representation of the PDF contents.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.EmbeddedRelation.Supplement">
            <summary>
            This data relationship is used if the embedded file serves neither as the source nor as the alternative representation, but the file contains additional information.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.EmbeddedRelation.Unspecified">
            <summary>
            If none of the data relationships above apply or there is an unknown data relationship, this data relationship is used.
            </summary>
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport.ZUGFeRD_ConformanceLevel">
            <summary>
            ZUGFeRD Conformance Level.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.ZUGFeRD_ConformanceLevel.BASIC">
            <summary>
            Basic level.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.ZUGFeRD_ConformanceLevel.COMFORT">
            <summary>
            Comfort level.
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.ZUGFeRD_ConformanceLevel.EXTENDED">
            <summary>
            Extended level.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.PdfCompliance">
            <summary>
            Gets or sets PDF Compliance standard.
            After set, do not change other settings, it may lead to fail compliance test.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.EmbeddingFonts">
            <summary>
            Enable or disable of embedding the TrueType fonts.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.Background">
            <summary>
            Enable or disable of exporting the background.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.TextInCurves">
            <summary>
            Enable or disable export text in curves
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.ColorSpace">
            <summary>
            Gets or sets PDF color space
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.ImagesOriginalResolution">
            <summary>
            Enables or disables saving images in their original resolution
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.PrintOptimized">
            <summary>
            Enables or disables optimization of images for printing
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.JpegCompression">
            <summary>
            Enable or disable image jpeg compression
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.JpegQuality">
            <summary>
            Sets the quality of images in the PDF
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.Title">
            <summary>
            Title of the document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.Author">
            <summary>
            Author of the document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.Subject">
            <summary>
            Subject of the document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.Keywords">
            <summary>
            Keywords of the document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.Creator">
            <summary>
            Creator of the document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.Producer">
            <summary>
            Producer of the document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.OwnerPassword">
            <summary>
            Sets the owner password.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.UserPassword">
            <summary>
            Sets the user password.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.AllowPrint">
            <summary>
            Enable or disable printing in protected document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.AllowModify">
            <summary>
            Enable or disable modifying in protected document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.AllowCopy">
            <summary>
            Enable or disable copying in protected document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.AllowAnnotate">
            <summary>
            Enable or disable annotating in protected document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.ShowPrintDialog">
            <summary>
            Enable or disable the print dialog window after opening
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.HideToolbar">
            <summary>
            Enable or disable hide the toolbar.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.HideMenubar">
            <summary>
            Enable or disable hide the menu's bar.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.HideWindowUI">
            <summary>
            Enable or disable hide the Windows UI.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.FitWindow">
            <summary>
            Enable or disable of fitting the window
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.CenterWindow">
            <summary>
            Enable or disable of centering the window.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.PrintScaling">
            <summary>
            Enable or disable of scaling the page for shrink to printable area.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.Outline">
            <summary>
            Enable or disable of document's Outline.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.DefaultZoom">
            <summary>
            Set default zoom on open document
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.RichTextQuality">
            <summary>
            Sets the quality of RichText objects in the PDF
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.Compressed">
            <summary>
            Enable or disable the compression in PDF document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.TransparentImages">
            <summary>
            Enable or disable of images transparency.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.DisplayDocTitle">
            <summary>
            Enable or disable of displaying document's title.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.DefaultPage">
            <summary>
            Set default page on open document
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.ColorProfile">
            <summary>
            Color Profile (ICC file).
            If "null" then default profile will be used
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.ExportMode">
            <summary>
            Gets or sets pdf export mode
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.InteractiveForms">
            <summary>
            Gets pdf AcroForms compatibility, if set then EmbeddingFonts = false and PdfCompliance = PdfStandard.None
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.InteractiveFormsFontSetPattern">
            <summary>
            Set pattern for selection of embedding glyphs for Interactive Forms
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.IsDigitalSignEnable">
            <summary>
            Enable or disable digital sign for pdf document
            </summary>
            <remarks>
            Be sure to specify a valid certificate for signing using the DigitalSignCertificate property.
            Or using the DigitalSignCertificatePath and DigitalSignCertificatePassword properties.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.SaveDigitalSignCertificatePassword">
            <summary>
            Should save and serialize password for digital sign certificate.
            Do not save password unless absolutely necessary!!!
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.DigitalSignCertificate">
            <summary>
            Manualy sets digital sign certificate for exported documents.
            </summary>
            <remarks>
            This property is in priority, i.e. if a certificate is specified,
            the DigitalSignCertificatePath and DigitalSignCertificatePassword properties will not be used.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.DigitalSignCertificatePath">
            <summary>
            The path for load digital sign certificate.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.DigitalSignCertificatePassword">
            <summary>
            Sets digital sign certificate password.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.DigitalSignLocation">
            <summary>
            Gets or sets the cpu host name or physical location of the signing
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.DigitalSignReason">
            <summary>
            The reason for the signing, such as (I agree ...)
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.DigitalSignContactInfo">
            <summary>
            The information to enable the recipient to contact the signer to verify the signature
            </summary>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.ExportPageBegin(FastReport.ReportPage)">
            <summary>
            Begin exporting of page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.ExportPageEnd(FastReport.ReportPage)">
            <summary>
            End exporting
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.ExportBand(FastReport.Base)">
            <summary>
            Export of Band
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.AddEmbeddedXML(System.String,System.String,System.DateTime,System.IO.Stream)">
            <summary>
            Add an embedded XML file (only for PDF/A-3 standard).
            </summary>
            <param name="name">File name</param>
            <param name="description">Description</param>
            <param name="modDate">Modification date</param>
            <param name="fileStream">File stream</param>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.AddEmbeddedXML(System.String,System.String,System.DateTime,System.IO.Stream,FastReport.Export.Pdf.PDFExport.ZUGFeRD_ConformanceLevel)">
            <summary>
            Add an embedded XML file (only for PDF/A-3 standard).
            </summary>
            <param name="name">File name</param>
            <param name="description">Description</param>
            <param name="modDate">Modification date</param>
            <param name="fileStream">File stream</param>
            <param name="ZUGFeRDLevel">ZUGFeRD Conformance Level</param>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.AddEmbeddedFile(System.String,System.String,System.DateTime,FastReport.Export.Pdf.PDFExport.EmbeddedRelation,System.String,System.IO.Stream)">
            <summary>
            Add an embedded file (only for PDF/A-3 standard).
            </summary>
            <param name="name">File name</param>
            <param name="description">Description</param>
            <param name="modDate">Modification date</param>
            <param name="relation">Relation type</param>
            <param name="mime">MIME type</param>
            <param name="fileStream">File stream</param>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Pdf.PDFExport"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.GetMask(System.Int32[])">
            <summary>
            Calculates mask for <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb"/> image.
            </summary>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.CalculateArea(FastReport.PictureObject,System.Int32,System.Int32)">
            <summary>
            Calculates image bounds according to <see cref="T:System.Windows.Forms.PictureBoxSizeMode"/>.
            </summary>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.WritePixelColors(System.Int32[],System.IO.Stream,System.Boolean)">
            <summary>
            Writes pixels' colors without alpha to stream according to CMYK or RGB color space.
            Pixels should be in the <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb"/> format.
            </summary>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.UpdateXRef(System.Int64)">
            <summary>
            Update stream position for object number, only for int value
            </summary>
            <param name="objectNumber">int value</param>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.PDFSVGRenderer.#ctor(FastReport.Export.Pdf.PDFExport,System.Drawing.SizeF)">
             <summary>
            
             </summary>
             <param name="export">The pdf export</param>
             <param name="size">size of place for svg</param>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.CurvesInterpolation">
            <summary>
            The interpolation of curves (svg)
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.CurvesInterpolationText">
            <summary>
            The interpolation of curves (text)
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.SvgAsPicture">
            <summary>
            Export svg object as image, not vector
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.GradientInterpolationPoints">
            <summary>
            Gradient interpolation, high value will lead beautiful the gradient,
            but the file size will increase and the speed of work will decrease.
            </summary>
        </member>
        <member name="P:FastReport.Export.Pdf.PDFExport.GradientQuality">
            <summary>
            The quality of gradient, export as image or export as gradient grid
            </summary>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.FillPDFGraphicsPath(System.Drawing.SizeF,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Brush,System.Text.StringBuilder,FastReport.Export.Pdf.PDFExport.CurvesInterpolationEnum,System.Drawing.Drawing2D.Matrix)">
            <summary>
            Added graphics path to pdf,
            </summary>
            <param name="size">size of rect for gradient filling</param>
            <param name="path">path, with positions in pdf scaling</param>
            <param name="brush">Any brush</param>
            <param name="curvesInterpolation">Interpolation value</param>
            <param name="sb"></param>
            <param name="matrixTransform">matrix for transform to  pdf scale</param>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFExport.IsFillableGradientGrid(FastReport.FillBase)">
            <summary>
            returns true if this gradient is fillable by gradient grid
            </summary>
            <returns></returns>
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport.CurvesInterpolationEnum">
            <summary>
            The enum of curves interpolation
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.CurvesInterpolationEnum.Curves">
            <summary>
            Export as curves, without interpolation
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.CurvesInterpolationEnum.P002">
            <summary>
            Two points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.CurvesInterpolationEnum.P004">
            <summary>
            Four points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.CurvesInterpolationEnum.P008">
            <summary>
            Eight points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.CurvesInterpolationEnum.P016">
            <summary>
            Sixteen points
            </summary>
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport.GradientInterpolationPointsEnum">
            <summary>
            The enum of gradient interpolation points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientInterpolationPointsEnum.P002">
            <summary>
            Two points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientInterpolationPointsEnum.P004">
            <summary>
            Four points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientInterpolationPointsEnum.P008">
            <summary>
            Eight points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientInterpolationPointsEnum.P016">
            <summary>
            Sixteen points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientInterpolationPointsEnum.P032">
            <summary>
            Thirty two points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientInterpolationPointsEnum.P064">
            <summary>
            Sixty four points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientInterpolationPointsEnum.P128">
            <summary>
            One hundred and twenty eight points
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientInterpolationPointsEnum.P256">
            <summary>
            Two hundred and fifty six points
            </summary>
        </member>
        <member name="T:FastReport.Export.Pdf.PDFExport.GradientQualityEnum">
            <summary>
            The quality of gradient export
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientQualityEnum.Image">
            <summary>
            Export as image
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientQualityEnum.Low">
            <summary>
            Export as low quality gradient grid, max size of interpolation points is 32
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientQualityEnum.Medium">
            <summary>
            Export as medium quality gradient grid, max size of interpolation points is 128
            </summary>
        </member>
        <member name="F:FastReport.Export.Pdf.PDFExport.GradientQualityEnum.High">
            <summary>
            Export as high quality gradient grid, max size of interpolation points is 256
            </summary>
        </member>
        <member name="M:FastReport.Export.Pdf.PDFMetaData.#ctor(System.String)">
            
            <param name="filename">File name without extentions, for example "MetaDataX"</param>
        </member>
        <member name="T:FastReport.Export.Ppml.PPMLExport">
            <summary>
            Represents the PPML export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.Ppml.PPMLExport.Pictures">
            <summary>
            Enable or disable the pictures in PPML export
            </summary>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.AddTextObject(FastReport.Export.Ppml.PPMLDocument,FastReport.TextObject,System.Boolean)">
            <summary>
            Add TextObject.
            </summary>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.AddBandObject(FastReport.Export.Ppml.PPMLDocument,FastReport.BandBase)">
            <summary>
            Add BandObject.
            </summary>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.AddLine(FastReport.Export.Ppml.PPMLDocument,FastReport.LineObject)">
            <summary>
            Add Line.
            </summary>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.AddShape(FastReport.Export.Ppml.PPMLDocument,FastReport.ShapeObject)">
            <summary>
            Add Shape.
            </summary>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.ExportPageBegin(FastReport.ReportPage)">
            <summary>
            Begin exporting of page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.ExportBand(FastReport.Base)">
            <summary>
            Export of Band
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.ExportPageEnd(FastReport.ReportPage)">
            <summary>
            End exporting
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Ppml.PPMLExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Ppml.Dashes">
            <summary>
            Contains Dashes enum
            </summary>
        </member>
        <member name="F:FastReport.Export.Ppml.Dashes.Dash">
            <summary>
            Specifies the Dash.
            </summary>
        </member>
        <member name="F:FastReport.Export.Ppml.Dashes.Dot">
            <summary>
            Specifies the Dot.
            </summary>
        </member>
        <member name="F:FastReport.Export.Ppml.Dashes.DashDot">
            <summary>
            Specifies the DashDot.
            </summary>
        </member>
        <member name="F:FastReport.Export.Ppml.Dashes.DashDotDot">
            <summary>
            Specifies the DashDotDot.
            </summary>
        </member>
        <member name="F:FastReport.Export.Ppml.Dashes.Double">
            <summary>
            Specifies the Double line.
            </summary>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLDocument.CreateWindow(System.String,System.Single,System.Single)">
            <summary>
            Create Window.
            </summary>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLDocument.AddImage(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Add image as PPMLObject
            </summary>
            <param name="filename"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLDocument.Save(System.String)">
            <summary>
            Save svg file.
            </summary>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLDocument.Save(System.IO.Stream)">
            <summary>
            Save svg stream.
            </summary>
        </member>
        <member name="M:FastReport.Export.Ppml.PPMLDocument.#ctor(System.String,System.Single,System.Single)">
            <param name="name"></param>
            <param name="Width"></param>
            <param name="Height"></param>
        </member>
        <member name="T:FastReport.Export.PS.PSExport">
            <summary>
            Represents the ps export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.PS.PSExport.Pictures">
            <summary>
            Enable or disable the pictures in PS export
            </summary>
        </member>
        <member name="P:FastReport.Export.PS.PSExport.TextInCurves">
            <summary>
            Enable or disable export text in curves
            </summary>
        </member>
        <member name="P:FastReport.Export.PS.PSExport.PagesInDiffFiles">
            <summary>
            Enable or disable export every page in separate file
            </summary>
        </member>
        <member name="P:FastReport.Export.PS.PSExport.SaveImagesSeparately">
            <summary>
            Enable or disable saving every image in separate file
            </summary>
        </member>
        <member name="P:FastReport.Export.PS.PSExport.Quality">
            <summary>
            Gets or sets quality of JPEG images
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.AddTextObject(FastReport.Export.PS.PSDocument,FastReport.TextObject,System.Boolean)">
            <summary>
            Add TextObject.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.AddBandObject(FastReport.Export.PS.PSDocument,FastReport.BandBase)">
            <summary>
            Add BandObject.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.AddLine(FastReport.Export.PS.PSDocument,FastReport.LineObject)">
            <summary>
            Add Line.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.AddShape(FastReport.Export.PS.PSDocument,FastReport.ShapeObject)">
            <summary>
            Add Shape.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.ExportPageBegin(FastReport.ReportPage)">
            <summary>
            Begin exporting of page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.ExportBand(FastReport.Base)">
            <summary>
            Export of Band
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.ExportPageEnd(FastReport.ReportPage)">
            <summary>
            End exporting
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.PS.PSExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.PS.PSExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.PS.Dashes">
            <summary>
            Contains Dashes enum
            </summary>
        </member>
        <member name="F:FastReport.Export.PS.Dashes.Dash">
            <summary>
            Specifies the Dash.
            </summary>
        </member>
        <member name="F:FastReport.Export.PS.Dashes.Dot">
            <summary>
            Specifies the Dot.
            </summary>
        </member>
        <member name="F:FastReport.Export.PS.Dashes.DashDot">
            <summary>
            Specifies the DashDot.
            </summary>
        </member>
        <member name="F:FastReport.Export.PS.Dashes.DashDotDot">
            <summary>
            Specifies the DashDotDot.
            </summary>
        </member>
        <member name="F:FastReport.Export.PS.Dashes.Double">
            <summary>
            Specifies the Double line.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.CreateWindow">
            <summary>
            Create Window.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.AddCurveTextLine(System.Collections.Generic.List{System.Single},System.Single,System.String,System.String,System.Drawing.Font,System.Single,System.Single,System.Collections.Generic.List{System.String},System.Single)">
            Add TextLine in curves
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.AddTextObject(System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Single,System.String,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Boolean,System.String,System.Drawing.Font)">
            <summary>
            Method for add TextObject.
             </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.AddRectangle(System.Single,System.Single,System.Single,System.Single,System.String,System.Single,System.String,System.Boolean)">
            <summary>
            Method to add rectangle.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.AddEllipse(System.Single,System.Single,System.Single,System.Single,System.String,System.Single,System.String)">
            <summary>
            Method for add ellips.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.AddTriangle(System.Single,System.Single,System.Single,System.Single,System.String,System.Single,System.String)">
            <summary>
            Method for add triangle.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.AddDiamond(System.Single,System.Single,System.Single,System.Single,System.String,System.Single,System.String)">
            <summary>
            Method for add Diamond.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.AddLine(System.Single,System.Single,System.Single,System.Single,System.String,System.Single)">
            <summary>
            Method for add line.
             </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.AddLine(System.Single,System.Single,System.Single,System.Single,System.String,System.Single,FastReport.Export.PS.Dashes)">
            <summary>
            Method for add line with dash.
             </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.AddImage(System.String,System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Add image
            </summary>
            <param name="filename"></param>
            <param name="format"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.AddImage(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Add image as hex code
            </summary>
            <param name="varname"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.Finish">
            <summary>
            End of each page
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.Save(System.String)">
            <summary>
            Save file.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.Save(System.IO.Stream)">
            <summary>
            Save stream.
            </summary>
        </member>
        <member name="M:FastReport.Export.PS.PSDocument.#ctor(System.Single,System.Single)">
            <param name="Width"></param>
            <param name="Height"></param>
        </member>
        <member name="T:FastReport.Export.RichText.RTFExport">
            <summary>
            Represents the RTF export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.RichText.RTFExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.RichText.RTFExport.JpegQuality">
            <summary>
            Gets or sets the quality of Jpeg images in RTF file.
            </summary>
            <remarks>
            Default value is 90. This property will be used if you select Jpeg 
            in the <see cref="P:FastReport.Export.RichText.RTFExport.ImageFormat"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Export.RichText.RTFExport.ImageFormat">
            <summary>
            Gets or sets the image format that will be used to save pictures in RTF file.
            </summary>
            <remarks>
            Default value is <b>Metafile</b>. This format is better for exporting such objects as
            <b>MSChartObject</b> and <b>ShapeObject</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Export.RichText.RTFExport.Pictures">
            <summary>
            Gets or sets a value indicating that pictures are enabled.
            </summary>
        </member>
        <member name="P:FastReport.Export.RichText.RTFExport.PageBreaks">
            <summary>
            Gets or sets a value indicating that page breaks are enabled.
            </summary>
        </member>
        <member name="P:FastReport.Export.RichText.RTFExport.Wysiwyg">
            <summary>
            Gets or sets a value that determines whether the wysiwyg mode should be used 
            for better results.
            </summary>
            <remarks>
            Default value is <b>true</b>. In wysiwyg mode, the resulting rtf file will look
            as close as possible to the prepared report. On the other side, it may have a lot 
            of small rows/columns, which will make it less editable. If you set this property
            to <b>false</b>, the number of rows/columns in the resulting file will be decreased.
            You will get less wysiwyg, but more editable file.
            </remarks>
        </member>
        <member name="P:FastReport.Export.RichText.RTFExport.Creator">
            <summary>
            Gets or sets the creator of the document.
            </summary>
        </member>
        <member name="P:FastReport.Export.RichText.RTFExport.AutoSize">
            <summary>
            Gets or sets a value that determines whether the rows in the resulting table 
            should calculate its height automatically.
            </summary>
            <remarks>
            Default value for this property is <b>false</b>. In this mode, each row in the
            resulting table has fixed height to get maximum wysiwyg. If you set it to <b>true</b>,
            the height of resulting table will be calculated automatically by the Word processor.
            The document will be more editable, but less wysiwyg.
            </remarks>
        </member>
        <member name="P:FastReport.Export.RichText.RTFExport.EmbedRichObject">
            <summary>
            Gets or sets a value that determines whether the repot's RichObject  will be
            translated as picture or joined to generated RTF.
            </summary>
            <remarks>
            Default value for this property is <b>false</b>. In this mode, each RichObject
            will be embedded as a picture. This is default behavior.  If you set it to <b>true</b>,
            the RichObject will be incorporated as a navive part of document. This is experimetal
            feature.
            </remarks>
        </member>
        <member name="M:FastReport.Export.RichText.RTFExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.RichText.RTFExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.RichText.RTFExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.RichText.RTFExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.RichText.RTFExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.RichText.RTFExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.RichText.RTFExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.RichText.RTFExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.RichText.RTFExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.RichText.RTFImageFormat">
            <summary>
            Specifies the image format in RTF export.
            </summary>
        </member>
        <member name="F:FastReport.Export.RichText.RTFImageFormat.Png">
            <summary>
            Specifies the .png format.
            </summary>
        </member>
        <member name="F:FastReport.Export.RichText.RTFImageFormat.Jpeg">
            <summary>
            Specifies the .jpg format.
            </summary>
        </member>
        <member name="F:FastReport.Export.RichText.RTFImageFormat.Metafile">
            <summary>
            Specifies the .emf format.
            </summary>
        </member>
        <member name="T:FastReport.Export.Svg.SVGExport">
            <summary>
            Represents the SVG export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.Svg.SVGExport.Pictures">
            <summary>
            Enable or disable the pictures in SVG export
            </summary>
        </member>
        <member name="P:FastReport.Export.Svg.SVGExport.ImageFormat">
            <summary>
            Gets or sets the image format used when exporting.
            </summary>
        </member>
        <member name="P:FastReport.Export.Svg.SVGExport.EmbedPictures">
            <summary>
            Embed images into svg
            </summary>
        </member>
        <member name="P:FastReport.Export.Svg.SVGExport.Root">
            <summary>
            Returns svg root element
            </summary>
        </member>
        <member name="P:FastReport.Export.Svg.SVGExport.Doc">
            <summary>
            Returns XmlDocument
            </summary>
        </member>
        <member name="P:FastReport.Export.Svg.SVGExport.G">
            <summary>
            Returns svg G element
            </summary>
        </member>
        <member name="P:FastReport.Export.Svg.SVGExport.PreserveAspectRatio">
            <summary>
            Gets or sets value indicating whether or not should to force uniform scaling of SVG document
            </summary>
        </member>
        <member name="P:FastReport.Export.Svg.SVGExport.UseViewBox">
            <summary>
            Gets or sets value indicating whether or not should be added 'viewBox' attribute to the svg tag
            </summary>
        </member>
        <member name="P:FastReport.Export.Svg.SVGExport.UseWidthAndHeight">
            <summary>
            Gets or sets value indicating whether or not should be added 'width' and 'height' attributes to the svg tag
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.AddTextObject(FastReport.TextObject,System.Boolean)">
            <summary>
            Add TextObject.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.AddBandObject(FastReport.BandBase)">
            <summary>
            Add BandObject.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.AddLine(FastReport.LineObject)">
            <summary>
            Add Line.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.AddShape(FastReport.ShapeObject)">
            <summary>
            Add Shape.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.CreateWindow(System.String)">
            <summary>
            Create Window.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.AddPage(FastReport.ReportPage)">
            <summary>
            Add page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.AddSVGObject(FastReport.SVG.SVGObject)">
            <summary>
            Add SVGObject
            </summary>
            <param name="svgObj">SVG object</param>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.Save(System.String)">
            <summary>
            Save svg file.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.Save(System.IO.Stream)">
            <summary>
            Save svg stream.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.ExportPageBegin(FastReport.ReportPage)">
            <summary>
            Begin exporting of page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.ExportBand(FastReport.Base)">
            <summary>
            Export of Band
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.ExportPageEnd(FastReport.ReportPage)">
            <summary>
            End exporting
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.ExportObj(FastReport.Base)">
            <summary>
            Export all report objects
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Svg.SVGExport"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.DrawRectangle(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Single,FastReport.FillBase,System.Boolean,FastReport.LineStyle)">
            <summary>
            Method to add rectangle.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.DrawEllipse(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Single,FastReport.FillBase)">
            <summary>
            Method for add ellips.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.DrawTriangle(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Single,FastReport.FillBase)">
            <summary>
            Method for add triangle.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.DrawDiamond(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Single,FastReport.FillBase)">
            <summary>
            Method for add Diamond.
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.DrawLine(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Single)">
            <summary>
            Method for add line.
             </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.DrawLine(System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Single,FastReport.LineStyle)">
            <summary>
            Method for add line with dash.
             </summary>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.AddImage(System.String,System.String,System.IO.MemoryStream,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Add image in Base64
            </summary>
            <param name="filename"></param>
            <param name="format"></param>
            <param name="imageStream"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.AddImage(System.String,System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Add image
            </summary>
            <param name="filename"></param>
            <param name="format"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:FastReport.Export.Svg.SVGExport.AppndAttr(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Appends attribute to element
            </summary>
            <param name="element"></param>
            <param name="attrName"></param>
            <param name="attrVal"></param>
        </member>
        <member name="T:FastReport.Export.Svg.Align">
            <summary>
            Specifies the alignment methods
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.Align.none">
            <summary>
            Do not force uniform scaling. Scale the graphic content of the given element non-uniformly
            if necessary such that the element's bounding box exactly matches the viewport rectangle.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.Align.xMinYMin">
            <summary>
            Force uniform scaling. Align the min-x of the element's viewBox with the smallest X value
            of the viewport. Align the min-y of the element's viewBox with the smallest Y value of the viewport.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.Align.xMidYMin">
            <summary>
            Force uniform scaling. Align the midpoint X value of the element's viewBox with the midpoint
            X value of the viewport. Align the min-y of the element's viewBox with the smallest Y value
            of the viewport.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.Align.xMaxYMin">
            <summary>
            Force uniform scaling. Align the min-x+width of the element's viewBox with the maximum X value
            of the viewport. Align the min-y of the element's viewBox with the smallest Y value of the viewport.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.Align.xMinYMid">
            <summary>
            Force uniform scaling. Align the min-x of the element's viewBox with the smallest X value of
            the viewport. Align the midpoint Y value of the element's viewBox with the midpoint Y value 
            of the viewport.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.Align.xMidYMid">
            <summary>
            The default. Force uniform scaling. Align the midpoint X value of the element's viewBox 
            with the midpoint X value of the viewport. Align the midpoint Y value of the element's 
            viewBox with the midpoint Y value of the viewport.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.Align.xMaxYMid">
            <summary>
            Force uniform scaling. Align the min-x+width of the element's viewBox with the maximum X
            value of the viewport. Align the midpoint Y value of the element's viewBox with the midpoint 
            Y value of the viewport.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.Align.xMinYMax">
            <summary>
            Force uniform scaling. Align the min-x of the element's viewBox with the smallest X value of 
            the viewport. Align the min-y+height of the element's viewBox with the maximum Y value of the viewport.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.Align.xMidYMax">
            <summary>
            Force uniform scaling. Align the midpoint X value of the element's viewBox with the midpoint X
            value of the viewport. Align the min-y+height of the element's viewBox with the maximum Y value
            of the viewport.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.Align.xMaxYMax">
            <summary>
            Force uniform scaling. Align the min-x+width of the element's viewBox with the maximum X value of
            the viewport. Align the min-y+height of the element's viewBox with the maximum Y value of the viewport.
            </summary>
        </member>
        <member name="T:FastReport.Export.Svg.MeetOrSlice">
            <summary>
            Specifies the svg scale types
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.MeetOrSlice.meet">
            <summary>
             (the default) - Scale the graphic such that:
             - aspect ratio is preserved
             - the entire viewBox is visible within the viewport
             - the viewBox is scaled up as much as possible, while still meeting the other criteria
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.MeetOrSlice.slice">
            <summary>
            Scale the graphic such that:
            - aspect ratio is preserved
            - the entire viewport is covered by the viewBox
            - the viewBox is scaled down as much as possible, while still meeting the other criteria
            </summary>
        </member>
        <member name="T:FastReport.Export.Svg.AspectRatio">
            <summary>
            Describes scaling of a svg documents
            </summary>
        </member>
        <member name="P:FastReport.Export.Svg.AspectRatio.Align">
            <summary>
            Gets the align value
            </summary>
        </member>
        <member name="P:FastReport.Export.Svg.AspectRatio.MeetOrSlice">
            <summary>
            Gets the meetOrSlice value
            </summary>
        </member>
        <member name="M:FastReport.Export.Svg.AspectRatio.#ctor(FastReport.Export.Svg.Align)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Svg.AspectRatio"/> class.
            </summary>
            <param name="align"></param>
        </member>
        <member name="M:FastReport.Export.Svg.AspectRatio.#ctor(FastReport.Export.Svg.Align,FastReport.Export.Svg.MeetOrSlice)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Svg.AspectRatio"/> class.
            </summary>
            <param name="align">Align value</param>
            <param name="meetOrSlice">meetOrSlice value</param>
        </member>
        <member name="T:FastReport.Export.Svg.SVGImageFormat">
            <summary>
            Specifies the image format in SVG export.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.SVGImageFormat.Png">
            <summary>
            Specifies the .png format.
            </summary>
        </member>
        <member name="F:FastReport.Export.Svg.SVGImageFormat.Jpeg">
            <summary>
            Specifies the .jpg format.
            </summary>
        </member>
        <member name="T:FastReport.Export.Text.TextExport">
            <summary>
            Represents the text export.
            </summary>
        </member>
        <member name="M:FastReport.Export.Text.TextExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.AvoidDataLoss">
            <summary>
            Enable or disable the Data loss avoiding. 
            Auto calculation of ScaleX and ScaleY will be launched when dialogue window will be off.        
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.Copies">
            <summary>
            Gets or sets the count of copies for printing of results.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.PrinterName">
            <summary>
            Gets or sets the printer name for printing of results.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.PrintAfterExport">
            <summary>
            Enable or disable the printing results after export.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.PrinterType">
            <summary>
            Gets or sets the active index of registered printer type.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.PrinterTypes">
            <summary>
            Gets or sets the list of printer types. <see cref="T:FastReport.Export.Text.TextExportPrinterType"/>
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.ScaleX">
            <summary>
            Gets or sets the scale by X axis for correct text objects placement.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.ScaleY">
            <summary>
            Gets or sets the scale by Y axis for correct text objects placement.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.Encoding">
            <summary>
            Gets or sets the encoding of resulting document. 
            </summary>
            <example>
            Windows ANSI encoding
            <code>TextExport.Encoding = Encoding.Default;</code>
            Unicode UTF-8 encoding
            <code>TextExport.Encoding = Encoding.UTF8;</code>
            OEM encoding for current system locale sessings
            <code>TextExport.Encoding = Encoding.GetEncoding(CultureInfo.CurrentCulture.TextInfo.OEMCodePage);</code>
            </example>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.DataOnly">
            <summary>
            Enable or disable the data only output without any headers. Default value is false.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.PageBreaks">
            <summary>
            Enable or disable the breaks of pages in resulting document. Default value is true.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.Frames">
            <summary>
            Enable or disable frames in resulting document. Default value is true.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.TextFrames">
            <summary>
            Enable or disable the text (non graphic) frames in resulting document. Default value is false.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.EmptyLines">
            <summary>
            Enable or disable the output of empty lines in resulting document. Default value is false.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.DataSaved">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.DataLossBreak">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.PageHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.PageWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExport.PreviewMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Export.Text.TextExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Text.TextExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Text.TextExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Text.TextExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Text.TextExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Text.TextExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Text.TextExport.ExportPage(System.Int32)">
            <summary>
            Exports the page.
            </summary>
            <param name="pageNo"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.Text.TextExport.CalculateScale(System.Object)">
            <summary>
            Calculates scale.
            </summary>
            <param name="progress"></param>
        </member>
        <member name="M:FastReport.Export.Text.TextExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Text.TextExport"/> class.
            </summary>       
        </member>
        <member name="M:FastReport.Export.Text.TextExportPrintForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Export.Text.TextExportPrintForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Export.Text.TextExportPrintForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Export.Text.TextExportPrintForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Export.Text.TextExportPrinterCommand">
            <summary>
            Represents the printer command class
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExportPrinterCommand.Active">
            <summary>
            Gets or sets the active state of command. Default value is false.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExportPrinterCommand.Name">
            <summary>
            Gets or sets the command name.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExportPrinterCommand.SequenceOn">
            <summary>
            Gets or sets the list of "on sequence". 
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExportPrinterCommand.SequenceOff">
            <summary>
            Gets or sets the list of "off sequence". 
            </summary>
        </member>
        <member name="M:FastReport.Export.Text.TextExportPrinterCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Text.TextExportPrinterCommand"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Text.TextExportPrinterType">
            <summary>
            Represents of the printer type class.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExportPrinterType.Name">
            <summary>
            Gets or sets the printer name.
            </summary>
        </member>
        <member name="P:FastReport.Export.Text.TextExportPrinterType.Commands">
            <summary>
            Gets or sets the list of printer commands. <see cref="T:FastReport.Export.Text.TextExportPrinterCommand"/>
            </summary>
        </member>
        <member name="M:FastReport.Export.Text.TextExportPrinterType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Text.TextExportPrinterType"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.Text.TextExportPrint">
            <summary>
            Represents supplement class for print of any stream directly in printer.
            </summary>
        </member>
        <member name="M:FastReport.Export.Text.TextExportPrint.PrintStream(System.String,System.String,System.Int32,System.IO.Stream)">
            <summary>
            Prints a stream.
            </summary>
            <param name="PrinterName">Printer name on which should be print.</param>
            <param name="DocName">Document title for printer spooler.</param>
            <param name="Copies">Count of copies.</param>
            <param name="Stream">Stream that will be printed.</param>
            <example>This example demonstrates the printing of Stream.
            <code>
            TextExportPrint.PrintStream("EPSON FX-1000", "My Report", 1, txtStream)</code>
            </example>
        </member>
        <member name="T:FastReport.Export.XAML.XAMLExport">
            <summary>
            Represents the XAML export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.XAML.XAMLExport.WPFClassName">
            <summary>
            Gets or sets the class name of XAML document
            </summary>
        </member>
        <member name="P:FastReport.Export.XAML.XAMLExport.Pictures">
            <summary>
            Enable or disable the pictures in XAML export
            </summary>
        </member>
        <member name="P:FastReport.Export.XAML.XAMLExport.ImageFormat">
            <summary>
            Gets or sets the image format used when exporting.
            </summary>
        </member>
        <member name="P:FastReport.Export.XAML.XAMLExport.IsScrolled">
            <summary>
            Get or set scrollbar settings
            </summary>
        </member>
        <member name="P:FastReport.Export.XAML.XAMLExport.Images">
            <summary>
            Get dictionary of saved images
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.AddTextObject(FastReport.Export.XAML.XAMLDocument,FastReport.TextObject,System.Boolean)">
            <summary>
            Add TextObject.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.AddBandObject(FastReport.Export.XAML.XAMLDocument,FastReport.BandBase)">
            <summary>
            Add BandObject.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.AddLine(FastReport.Export.XAML.XAMLDocument,FastReport.LineObject)">
            <summary>
            Add Line.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.AddShape(FastReport.Export.XAML.XAMLDocument,FastReport.ShapeObject)">
            <summary>
            Add Shape.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.ExportPageBegin(FastReport.ReportPage)">
            <summary>
            Begin exporting of page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.ExportBand(FastReport.Base)">
            <summary>
            Export of Band
            </summary>
            <param name="band"></param>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.ExportPageEnd(FastReport.ReportPage)">
            <summary>
            End exporting
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.GetImage(System.String)">
            <summary>
            Gem MemoryStream what contain image
            </summary>
            <param name="image_name"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.XAML.XAMLExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.XAML.Dashes">
            <summary>
            Contains Dashes enum
            </summary>
        </member>
        <member name="F:FastReport.Export.XAML.Dashes.Dash">
            <summary>
            Specifies the Dash.
            </summary>
        </member>
        <member name="F:FastReport.Export.XAML.Dashes.Dot">
            <summary>
            Specifies the Dot.
            </summary>
        </member>
        <member name="F:FastReport.Export.XAML.Dashes.DashDot">
            <summary>
            Specifies the DashDot.
            </summary>
        </member>
        <member name="F:FastReport.Export.XAML.Dashes.DashDotDot">
            <summary>
            Specifies the DashDotDot.
            </summary>
        </member>
        <member name="F:FastReport.Export.XAML.Dashes.Double">
            <summary>
            Specifies the Double line.
            </summary>
        </member>
        <member name="T:FastReport.Export.XAML.XAMLDocument">
            <summary>
            XAML generator
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.CreateWindow(System.String)">
            <summary>
            Create Window.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddGrid">
            <summary>
            Create Grid.
             </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddCanvas(System.Int32)">
            <summary>
            Create Canvas.
             </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddStackPanel(System.Xml.XmlElement)">
            <summary>
            Create StackPanel
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddScrollViewer">
            <summary>
            Create StackPanel
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddResources">
            <summary>
            Create Resources tag
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddResourceTextObject">
            <summary>
            Add resource for TextObject
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddResourceTextObjectAngle">
            <summary>
            Add resource for TextObject with angle
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddResourceLine">
            <summary>
            Add resource for Line
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddResourceRectangle">
            <summary>
            Add resource for Rectangle
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddResourceEllipse">
            <summary>
            Add resource for Ellipse
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddResourcePolygon">
            <summary>
            Add resource for Polygon
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddTextObject(System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Single,System.String,System.String,System.String,System.Single,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.String)">
            <summary>
            Add TextObject.
             </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddTextObject(System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Single,System.String,System.String,System.String,System.Single,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.String,System.Single)">
            <summary>
            Method for add TextObject with angle
             </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddLine(System.Single,System.Single,System.Single,System.Single,System.String,System.Single)">
            <summary>
            Add line.
             </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddLine(System.Single,System.Single,System.Single,System.Single,System.String,System.Single,FastReport.Export.XAML.Dashes)">
            <summary>
            Add line with dash.
             </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddRectangle(System.Single,System.Single,System.Single,System.Single,System.String,System.Single,System.String,System.Boolean)">
            <summary>
            Add rectangle.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddEllipse(System.Single,System.Single,System.Single,System.Single,System.String,System.Single,System.String)">
            <summary>
            Add ellips.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddTriangle(System.Single,System.Single,System.Single,System.Single,System.String,System.Single,System.String)">
            <summary>
            Add triangle.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddDiamond(System.Single,System.Single,System.Single,System.Single,System.String,System.Single,System.String)">
            <summary>
            Add Diamond.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddImage(System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Add image
            </summary>
            <param name="filename"></param>
            <param name="format"></param>
            <param name="name"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddImage(System.String,System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Add image without name
            </summary>
            <param name="filename"></param>
            <param name="format"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.AddPage(System.Int32)">
            <summary>
            Add page to StackPanel
            </summary>
            <param name="PageNum"></param>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.Save(System.String)">
            <summary>
            Save xaml file.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.Save(System.IO.Stream)">
            <summary>
            Save xaml stream.
            </summary>
        </member>
        <member name="M:FastReport.Export.XAML.XAMLDocument.#ctor(System.String,System.Int32,System.String,System.Single,System.Single,System.Boolean)">
            <param name="name"></param>
            <param name="Width"></param>
            <param name="Height"></param>
            <param name="PagesCount"></param>
            <param name="Fill"></param>
            <param name="isScrolled"></param>
        </member>
        <member name="T:FastReport.Export.XAML.XamlImageFormat">
            <summary>
            Specifies the image format in XAML export.
            </summary>
        </member>
        <member name="F:FastReport.Export.XAML.XamlImageFormat.Png">
            <summary>
            Specifies the .png format.
            </summary>
        </member>
        <member name="F:FastReport.Export.XAML.XamlImageFormat.Jpeg">
            <summary>
            Specifies the .jpg format.
            </summary>
        </member>
        <member name="T:FastReport.Export.Xml.XMLExport">
            <summary>
            Represents the Excel 2003 XML export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.Xml.XMLExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Export.Xml.XMLExport.PageBreaks">
            <summary>
            Gets or sets a value that determines whether to insert page breaks in the output file or not.
            </summary>
            
        </member>
        <member name="P:FastReport.Export.Xml.XMLExport.Wysiwyg">
            <summary>
            Gets or sets a value that determines whether the wysiwyg mode should be used 
            for better results.
            </summary>
            <remarks>
            Default value is <b>true</b>. In wysiwyg mode, the resulting Excel file will look
            as close as possible to the prepared report. On the other side, it may have a lot 
            of small rows/columns, which will make it less editable. If you set this property
            to <b>false</b>, the number of rows/columns in the resulting file will be decreased.
            You will get less wysiwyg, but more editable file.
            </remarks>
        </member>
        <member name="P:FastReport.Export.Xml.XMLExport.Creator">
            <summary>
            Gets or sets the name of document creator.
            </summary>
        </member>
        <member name="P:FastReport.Export.Xml.XMLExport.DataOnly">
            <summary>
            Gets or sets a value that determines whether to export the databand rows only.
            </summary>
        </member>
        <member name="P:FastReport.Export.Xml.XMLExport.SplitPages">
            <summary>
            Each report page is placed on a new Excel page.
            </summary>
        </member>
        <member name="M:FastReport.Export.Xml.XMLExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Xml.XMLExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Xml.XMLExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Xml.XMLExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Xml.XMLExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Xml.XMLExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Xml.XMLExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Xml.XMLExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Xml.XMLExport"/> class.
            </summary>       
        </member>
        <member name="T:FastReport.Export.Zpl.ZplExport">
            <summary>
            Represents the Zpl export filter.
            </summary>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.ShowDialog">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Export.Zpl.ZplExport.ZplDensity">
            <summary>
            Enum of densty types of Zebra printers.
            </summary>
        </member>
        <member name="F:FastReport.Export.Zpl.ZplExport.ZplDensity.d6_dpmm_152_dpi">
            <summary>
            6 dpmm(152 dpi)
            </summary>
        </member>
        <member name="F:FastReport.Export.Zpl.ZplExport.ZplDensity.d8_dpmm_203_dpi">
            <summary>
            8 dpmm(203 dpi)
            </summary>
        </member>
        <member name="F:FastReport.Export.Zpl.ZplExport.ZplDensity.d12_dpmm_300_dpi">
            <summary>
            12 dpmm(300 dpi)
            </summary>
        </member>
        <member name="F:FastReport.Export.Zpl.ZplExport.ZplDensity.d24_dpmm_600_dpi">
            <summary>
            24 dpmm(600 dpi)
            </summary>
        </member>
        <member name="P:FastReport.Export.Zpl.ZplExport.Density">
            <summary>
            Sets the density of printer.
            </summary>
        </member>
        <member name="P:FastReport.Export.Zpl.ZplExport.PrinterInit">
            <summary>
            Sets the init string for sending before printing the document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Zpl.ZplExport.CodePage">
            <summary>
            Sets the code page of document. Default is UTF-8 (^CI28).
            </summary>
        </member>
        <member name="P:FastReport.Export.Zpl.ZplExport.PrinterFinish">
            <summary>
            Sets the string for sending after printing the document.
            </summary>
        </member>
        <member name="P:FastReport.Export.Zpl.ZplExport.PageInit">
            <summary>
            Sets the string for sending before printing each page.
            </summary>
        </member>
        <member name="P:FastReport.Export.Zpl.ZplExport.FontScale">
            <summary>
            Sets the scale font size.
            </summary>
        </member>
        <member name="P:FastReport.Export.Zpl.ZplExport.PrinterFont">
            <summary>
            Sets the Printer Font, default value is "A".
            </summary>
        </member>
        <member name="P:FastReport.Export.Zpl.ZplExport.PrintAsBitmap">
            <summary>
            Enable or disable export as bitmap.
            </summary>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.Write(System.IO.Stream,System.String)">
            <summary>
            Writes the string value in  stream.
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.WriteLn(System.IO.Stream,System.String)">
            <summary>
            Writes the string value in stream with CRLF.
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.GetLeft(System.Single)">
            <summary>
            Gets the left position in zpl units.
            </summary>
            <param name="left"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.GetTop(System.Single)">
            <summary>
            Gets the top position in zpl units.
            </summary>
            <param name="top"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.ExportTableObject(FastReport.Table.TableBase)">
            <summary>
            Exports the TableObject.
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.ExportLineObject(FastReport.LineObject)">
            <summary>
            Exports the LineObject.
            </summary>
            <param name="lineObject"></param>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.ExportShapeObject(FastReport.ShapeObject)">
            <summary>
            Exports the ShapeObject.
            </summary>
            <param name="shapeObject"></param>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.ExportTextObject(FastReport.TextObject)">
            <summary>
            Exports the TextObject.
            </summary>
            <param name="textObject"></param>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.SetPosition(System.Int32,System.Int32)">
            <summary>
            Gets the position of object in ZPL code.
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.SetTextAttributes(System.Int32,System.Int32,System.Int32,FastReport.HorzAlign,System.Int32)">
            <summary>
            Gets the text attributes in ZPL code.
            </summary>
            <param name="width"></param>
            <param name="lines"></param>
            <param name="leading"></param>
            <param name="horizAlign"></param>
            <param name="gap"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.DrawText(System.Int32,System.Int32,System.String)">
            <summary>
            Gets the text with font width and height in ZPL code.
            </summary>
            <param name="fontHeight"></param>
            <param name="fontWidth"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.GetHorizAlign(FastReport.HorzAlign)">
            <summary>
            Gets the horiz align in ZPL code.
            </summary>
            <param name="horizAlign"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.DrawRectangle(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the rectangle in ZPL code.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="lineWidth"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.Start">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.Finish">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.GetFileFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.ExportPageBegin(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.ExportPageEnd(FastReport.ReportPage)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.ExportBand(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Export.Zpl.ZplExport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Export.Zpl.ZplExport"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont">
            <summary>
            Specifies the export font class.
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.NeedStyelSimulationList">
            <summary>
            These fonts not support Bold or Itailc styles
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.SCRIPT_STATE">
            <summary>
            Description of SCRIPT_STATE structure
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_STATE.data">
            <summary>
            data
            </summary>
        </member>
        <member name="P:FastReport.Export.TTF.ExportTTFFont.SCRIPT_STATE.uBidiLevel">
            <summary>
            uBidiLevel
            </summary>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.SCRIPT_STATE.SetRtl">
            <summary>
            SetRtl
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.SCRIPT_ANALYSIS">
            <summary>
            Description of SCRIPT_ANALYSIS structure
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_ANALYSIS.data">
            <summary>
            data
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_ANALYSIS.state">
            <summary>
            state
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.SCRIPT_CONTROL">
            <summary>
            Description of SCRIPT_CONTROL structure
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_CONTROL.data">
            <summary>
            data
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.SCRIPT_DIGITSUBSTITUTE">
            <summary>
            Description of SCRIPT_DIGITSUBSTITUTE structure
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_DIGITSUBSTITUTE.NationalDigitLanguage">
            <summary>
            NationalDigitLanguage
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_DIGITSUBSTITUTE.TraditionalDigitLanguage">
            <summary>
            TraditionalDigitLanguage
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_DIGITSUBSTITUTE.DigitSubstitute">
            <summary>
            DigitSubstitute
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_DIGITSUBSTITUTE.dwReserved">
            <summary>
            dwReserved
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.SCRIPT_ITEM">
            <summary>
            Description of SCRIPT_ITEM structure
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_ITEM.iCharPos">
            <summary>
            iCharPos
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_ITEM.analysis">
            <summary>
            analysis
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.SCRIPT_VISATTR">
            <summary>
            Description of SCRIPT_VISATTR structure
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.SCRIPT_VISATTR.data">
            <summary>
            data
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.GOFFSET">
            <summary>
            Description of GOFFSET structure
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.GOFFSET.du">
            <summary>
            du
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.GOFFSET.dv">
            <summary>
            dv
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.ABC">
            <summary>
            Description of ABC structure
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.ABC.abcA">
            <summary>
            abcA
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.ABC.abcB">
            <summary>
            abcB
            </summary>
        </member>
        <member name="F:FastReport.Export.TTF.ExportTTFFont.ABC.abcC">
            <summary>
            abcC
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.FontPanose">
            <summary>
            Description of FontPanose structure
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.FontRect">
            <summary>
            Description of FontRect structure
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.FontPoint">
            <summary>
            Description of FontPoint structure
            </summary>
        </member>
        <member name="T:FastReport.Export.TTF.ExportTTFFont.FontTextMetric">
            <summary>
            Description of FontTextMetric structure
            </summary>
        </member>
        <member name="P:FastReport.Export.TTF.ExportTTFFont.TextMetric">
            <summary>
            Return text metric structure, need to use after FillOutlineTextMetrix()
            </summary>
        </member>
        <member name="P:FastReport.Export.TTF.ExportTTFFont.Name">
            <summary>
            Gets or sets internal font name
            </summary>
        </member>
        <member name="P:FastReport.Export.TTF.ExportTTFFont.SourceFont">
            <summary>
            Return source font used in constructor
            </summary>
        </member>
        <member name="P:FastReport.Export.TTF.ExportTTFFont.SourceFontBoldMultiplier">
            <summary>
            Returns multiplier for stroke bold emulation
            </summary>
        </member>
        <member name="P:FastReport.Export.TTF.ExportTTFFont.Reference">
            <summary>
            Gets or sets internal reference
            </summary>
        </member>
        <member name="P:FastReport.Export.TTF.ExportTTFFont.Saved">
            <summary>
            Gets or sets internal property - save flag 
            </summary>
        </member>
        <member name="P:FastReport.Export.TTF.ExportTTFFont.NeedSimulateBold">
            <summary>
            True if bold style is not supported by font
            </summary>
        </member>
        <member name="P:FastReport.Export.TTF.ExportTTFFont.NeedSimulateItalic">
            <summary>
            True if italic style is not supported by font
            </summary>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.FillOutlineTextMetrix">
            <summary>
            Run fill outline text metric structure
            </summary>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.GetGlyphWidth(System.Char)">
            <summary>
            Return glyph width
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.GetFontData(System.Boolean)">
            <summary>
            Return font file
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.FillEmulate">
            <summary>
            Get font data and set NeedSimulateBold and NeedSimulateItalic properties. Call this method after FillOutlineTextMetrix
            </summary>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.RemapString(System.String,System.Boolean)">
            <summary>
            Remap str in glyph indexes. Return string with glyph indexes.
            </summary>
            <param name="str"></param>
            <param name="rtl"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.SetPattern(System.String,System.Boolean)">
            <summary>
            Set pattern for generation of alphabet's subset
            </summary>
            <param name="pattern">Regular expression with pattern generator</param>
            <param name="rtl">Use left-to-right rules</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.GetEnglishFontName">
            <summary>
            Return english name of source font
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.GetPANOSE">
            <summary>
            Return PANOSE string
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.#ctor(System.Drawing.Font)">
            <summary>
            Create object of ExportTTFFont.
            </summary>
            <param name="font"></param>
        </member>
        <member name="M:FastReport.Export.TTF.ExportTTFFont.Dispose">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:FastReport.Export.ExportIEMObject.HtmlTags">
            <summary>
            This property for internal use only.
            </summary>
        </member>
        <member name="T:FastReport.Export.BinaryTree">
            <summary>
            Binary tree class
            </summary>
        </member>
        <member name="P:FastReport.Export.BinaryTree.MaxDistance">
            <summary>
            Maximal value between child and parent
            </summary>
        </member>
        <member name="P:FastReport.Export.BinaryTree.Count">
            <summary>
            Nodes count
            </summary>
        </member>
        <member name="P:FastReport.Export.BinaryTree.RootNode">
            <summary>
            Root node
            </summary>
        </member>
        <member name="P:FastReport.Export.BinaryTree.Nodes">
            <summary>
            Nodes array. Accending sorting by node value. Available after close of tree.
            </summary>
        </member>
        <member name="P:FastReport.Export.BinaryTree.Inaccuracy">
            <summary>
            Accecptable inaccuracy of new values. 
            </summary>
        </member>
        <member name="M:FastReport.Export.BinaryTree.AddChild(FastReport.Export.BinaryTreeNode@,System.Single)">
            <summary>
            Recursive add value to a node.  
            </summary>
            <param name="node"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.BinaryTree.PollRight(FastReport.Export.BinaryTreeNode@)">
            <summary>
            Poll right child node for correct balance.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FastReport.Export.BinaryTree.PollLeft(FastReport.Export.BinaryTreeNode@)">
            <summary>
            Poll left child for correct balance.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FastReport.Export.BinaryTree.Index(FastReport.Export.BinaryTreeNode)">
            <summary>
            Recursive indexation of node and childs.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:FastReport.Export.BinaryTree.Add(System.Single)">
            <summary>
            Add new value in tree. All equals are skipped.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FastReport.Export.BinaryTree.Close">
            <summary>
            Close the tree and make index array.
            </summary>
        </member>
        <member name="M:FastReport.Export.BinaryTree.IndexOf(System.Single)">
            <summary>
            Seek of value index in the tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.BinaryTree.Find(FastReport.Export.BinaryTreeNode,System.Single)">
            <summary>
            Find of value index in sub-tree of node.
            </summary>
            <param name="node"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.BinaryTree.FromList(System.Collections.Generic.List{System.Single})">
            <summary>
            Borrow values form List in the tree
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:FastReport.Export.BinaryTree.FromArray(System.Single[])">
            <summary>
            Borrow values form array in the tree
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:FastReport.Export.BinaryTree.Clear">
            <summary>
            Clear tree
            </summary>
        </member>
        <member name="M:FastReport.Export.BinaryTree.#ctor">
            <summary>
            Tree constructor
            </summary>
        </member>
        <member name="T:FastReport.Export.BinaryTreeNode">
            <summary>
            Tree node class
            </summary>
        </member>
        <member name="F:FastReport.Export.BinaryTreeNode.left">
            <summary>
            Link to left child
            </summary>
        </member>
        <member name="F:FastReport.Export.BinaryTreeNode.right">
            <summary>
            Link to right child
            </summary>
        </member>
        <member name="F:FastReport.Export.BinaryTreeNode.value">
            <summary>
            Node value
            </summary>
        </member>
        <member name="F:FastReport.Export.BinaryTreeNode.leftCount">
            <summary>
            Count of nodes in left sub-tree
            </summary>
        </member>
        <member name="F:FastReport.Export.BinaryTreeNode.rightCount">
            <summary>
            Count of nodes in right sub-tree
            </summary>
        </member>
        <member name="F:FastReport.Export.BinaryTreeNode.index">
            <summary>
            Node index
            </summary>
        </member>
        <member name="M:FastReport.Export.BinaryTreeNode.#ctor(System.Single)">
            <summary>
            Node constructor
            </summary>
            <param name="nodeValue"></param>
        </member>
        <member name="T:FastReport.Export.ExportUtils">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Export.ExportUtils.GetPageWidth(FastReport.ReportPage)">
            <summary>
            Gets current page width.
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.ExportUtils.GetPageHeight(FastReport.ReportPage)">
            <summary>
            Gets current page height.
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Export.ExportUtils.HtmlURL(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.ExportsOptions">
            <summary>
            Class for handling Exports visibility in the Preview control.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.ExportsMenu">
            <summary>
            All exports available in the Preview control.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.GetInstance">
            <summary>
            Gets an instance of ExportOptions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.ExportsOptions.ExportsTreeNode">
            <summary>
            Exports menu node
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.SaveExportOptions">
            <summary>
            Saves current visible exports in config file.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.RestoreExportOptions">
            <summary>
            Restores visible exports from config file.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.RegisterExports">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.SetExportCategoryEnabled(System.String,System.Boolean)">
            <summary>
            Sets Export category visibility.
            </summary>
            <param name="name">Export category name.</param>
            <param name="enabled">Visibility state.</param>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.SetExportEnabled(System.Type,System.Boolean)">
            <summary>
            Sets Export visibility.
            </summary>
            <param name="exportType">Export type.</param>
            <param name="enabled">Visibility state.</param>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.DefaultExports">
            <summary>
            Default Exports menu
            </summary>
            <returns>Tree that contains default Exports menu</returns>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.CloudMenu">
            <summary>
            All cloud exports available in the preview
            </summary>
        </member>
        <member name="P:FastReport.Utils.ExportsOptions.MessengerMenu">
            <summary>
            All messengers exports available in the preview
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.DefaultCloud">
            <summary>
            Default cloud exports menu
            </summary>
            <returns>Tree that contains default cloud exports menu</returns>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.DefaultMessengers">
            <summary>
            Default messengers
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.RegisterCloud">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Utils.ExportsOptions.RegisterMessengers">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.Utils.Config">
            <summary>
            Contains some configuration properties and settings that will be applied to the FastReport.Net
            environment, including Report, Designer and Preview components.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.AutoSaveFile">
            <summary>
            Gets the autosaved report
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.AutoSaveFileName">
            <summary>
            Gets the atuosaved report path
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.AutoSaveFolder">
            <summary>
            Gets the folder to store auto save files
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.DesignerSettings">
            <summary>
            Gets or sets the settings for the report designer window.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.FullTrust">
            <summary>
            Gets a value indicating that the ASP.NET hosting permission level is set to full trust.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.SplashScreenEnabled">
            <summary>
            Gets or sets a value indicating whether SplashScreen should be displayed while loading designer
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.UIStyle">
            <summary>
            Gets or sets the UI style.
            </summary>
            <remarks>
            This property affects both designer and preview windows.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.Config.UseRibbon">
            <summary>
            Gets or sets a value indicating whether the Ribbon UI should be used
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.WebMode">
            <summary>
            Gets or sets a value that determines whether to disable some functionality to run in web mode.
            </summary>
            <remarks>
            Use this property if you use FastReport in ASP.Net. Set this property to <b>true</b> <b>before</b>
            you access any FastReport.Net objects.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.Config.WelcomeEnabled">
            <summary>
            Gets or sets a value indicating whether Welcome window feature enabled.
            If false, interface elements associated with the Welcome window will not be visible.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.WelcomeShowOnStartup">
            <summary>
            Gets or sets a value indicating whether Welcome window shoud be displayed on startup
            </summary>
        </member>
        <member name="M:FastReport.Utils.Config.RestoreFormState(System.Windows.Forms.Form)">
            <summary>
            Restores the form state from the configuration file.
            </summary>
            <param name="form">The form to restore.</param>
        </member>
        <member name="M:FastReport.Utils.Config.SaveFormState(System.Windows.Forms.Form)">
            <summary>
            Saves the form state to the configuration file.
            </summary>
            <param name="form">The form to save.</param>
        </member>
        <member name="M:FastReport.Utils.Config.SaveFormState(System.String,System.Boolean,System.Boolean,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Saves the form state to the configuration file.
            </summary>
            <param name="formName">The name of the form.</param>
            <param name="isMaximized">True if the form is in maximized state.</param>
            <param name="isMinimized">True if the form is in minimized state.</param>
            <param name="location">The location of the form.</param>
            <param name="size">The size of the form.</param>
        </member>
        <member name="P:FastReport.Utils.Config.ProcessEvents">
            <summary>
            Is necessary to process abort and some other events in parallel 
            </summary>
        </member>
        <member name="M:FastReport.Utils.Config.IsVisibleOnAnyScreen(System.Drawing.Rectangle)">
            <summary>
            Checks the visibility of rectangle area on currently connected screens with small gap.
            </summary>
            <param name="rect">Rectanle area for checking.</param>
            <returns>True for visible rect.</returns>
        </member>
        <member name="P:FastReport.Utils.Config.PreviewSettings">
            <summary>
            Gets or sets the settings for the preview window.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.IsStringOptimization">
            <summary>
            Gets or sets the optimization of strings. Is experimental feature.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.PreparedCompressed">
            <summary>
            Enable or disable the compression in files with prepared reports (fpx).
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.ApplicationFolder">
            <summary>
            Gets the application folder.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.EngCultureInfo">
            <summary>
            Gets an english culture information for localization purposes
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.Folder">
            <summary>
            Gets or sets the path used to load/save the configuration file.
            </summary>
            <remarks>
            By default, the configuration file is saved to the application local data folder
            (C:\Documents and Settings\User_Name\Local Settings\Application Data\FastReport\).
            Set this property to "" if you want to store the configuration file in the application folder.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.Config.FontListFolder">
            <summary>
            Gets or sets the path used to font.list file.
            </summary>
            <remarks>
            By default, the font.list file is saved to the FastReport.config folder
            If WebMode enabled (or config file path is null), then file is saved in the application folder.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.Config.ReportSettings">
            <summary>
            Gets or sets the settings for the Report component.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.RightToLeft">
            <summary>
            Gets or sets a value indicating whether RTL layout should be used.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.DisableHotkeys">
            <summary>
            Gets or sets a value indicating whether hotkeys should be disabled.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.DisableBacklight">
            <summary>
            Gets or sets a value that indicates whether the object that the selected item will sit on should be backlighted.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.Root">
            <summary>
            Gets the root item of config xml.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.TempFolder">
            <summary>
            Gets or sets the path to the temporary folder used to store temporary files.
            </summary>
            <remarks>
            The default value is <b>null</b>, so the system temp folder will be used.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.Config.SystemTempFolder">
            <summary>
            Gets the path to the system temporary folder used to store temporary files.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.Version">
            <summary>
            Gets FastReport version.
            </summary>
        </member>
        <member name="E:FastReport.Utils.Config.ScriptCompile">
            <summary>
            Called on script compile
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.EmailSettings">
            <summary>
            Gets or sets the settings for the "Send Email" window.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Config.FontCollection">
            <summary>
            Get access to font collection
            </summary>
        </member>
        <member name="T:FastReport.Utils.ObjectInfo">
            <summary>
            Holds the information about the registered object.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Image">
            <summary>
            Image.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.ImageIndex">
            <summary>
            Image index.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.ButtonIndex">
            <summary>
            Button index.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Name">
            <summary>
            Name of object or category.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Object">
            <summary>
            The registered object.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Function">
            <summary>
            The registered function.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Text">
            <summary>
            Tooltip text.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Flags">
            <summary>
            Flags that will be used to create an object instance in the designer.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.MultiInsert">
            <summary>
            Indicates whether this object can be inserted several times simultaneously.
            </summary>
            <remarks>
            This is applied to Line object only.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Enabled">
            <summary>
            Gets or sets the enabled flag for the object.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ObjectInfo.Items">
            <summary>
            List of subitems.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ObjectInfo.EnumItems(System.Collections.Generic.List{FastReport.Utils.ObjectInfo})">
            <summary>
            Enumerates all objects.
            </summary>
            <param name="list">List that will contain enumerated items.</param>
        </member>
        <member name="F:FastReport.Utils.ItemWizardEnum.Report">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.Utils.ItemWizardEnum.ReportItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.Utils.ItemWizardEnum.Game">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.Utils.RegisteredObjects">
            <summary>
            Contains all registered report items such as objects, export filters, wizards.
            </summary>
            <remarks>
            Use this class to register own components, wizards, export filters or another items that 
            need to be serialized to/from a report file.
            </remarks>
            <example>
            <code>
            // register own wizard
            RegisteredObjects.AddWizard(typeof(MyWizard), myWizBmp, "My Wizard", true);
            // register own export filter
            RegisteredObjects.AddExport(typeof(MyExport), "My Export");
            // register own report object
            RegisteredObjects.Add(typeof(MyObject), "ReportPage", myObjBmp, "My Object");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddCloud(System.Type,System.String)">
            <summary>
            Registers a new cloud storage client.
            </summary>
            <param name="obj">Type of cloud storage client.</param>
            <param name="text">Text for cloud storage client's menu item.</param>
            <remarks>
            The <b>obj</b> must be of <see cref="T:FastReport.Cloud.StorageClient.CloudStorageClient"/> type.
            </remarks>
            <example>
            <code>
            // register own cloud storage client
            RegisteredObjects.AddCloud(typeof(MyCloud), "My Cloud");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddMessenger(System.Type,System.String)">
            <summary>
            Registers a new messenger.
            </summary>
            <param name="obj">Type of messenger.</param>
            <param name="text">Text messenger's menu item.</param>
            <remarks>
            The <b>obj</b> must be of <see cref="T:FastReport.Messaging.MessengerBase"/> type.
            </remarks>
            <example>
            <code>
            // register own messenger
            RegisteredObjects.AddMessenger(typeof(MyMessenger), "My Messenger");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddWizard(System.Type,System.Drawing.Bitmap,System.String,System.Boolean)">
            <summary>
            Registers a new wizard.
            </summary>
            <param name="obj">Type of wizard.</param>
            <param name="image">Image for wizard item.</param>
            <param name="text">Text for wizard item.</param>
            <param name="isReportItemWizard"><b>true</b> if this wizard creates some items in existing report.</param>
            <remarks>
            The <b>obj</b> must be of <see cref="T:FastReport.Wizards.WizardBase"/> type.
            </remarks>
            <example>This example shows how to register own wizard that is used to create some items in the
            current report. If you want to register a wizard that will be used to create a new report,
            set the <b>isReportItemWizard</b> to <b>false</b>.
            <code>
            // register own wizard
            RegisteredObjects.AddWizard(typeof(MyWizard), myWizBmp, "My Wizard", true);
            </code>
            </example>
        </member>
        <member name="P:FastReport.Utils.RegisteredObjects.Objects">
            <summary>
            Root object for all registered objects.
            </summary>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.IsTypeRegistered(System.Type)">
            <summary>
            Checks whether the specified type is registered already.
            </summary>
            <param name="obj">Type to check.</param>
            <returns><b>true</b> if such type is registered.</returns>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddCategory(System.String,System.Drawing.Bitmap,System.String)">
            <summary>
            Registers a category that may contain several report objects.
            </summary>
            <param name="name">Category name.</param>
            <param name="image">Image for category button.</param>
            <param name="text">Text for category button.</param>
            <remarks>
            <para>Category is a button on the "Objects" toolbar that shows context menu with nested items 
            when you click it. Consider using categories if you register several report objects. It can 
            save space on the "Objects" toolbar. For example, FastReport registers one category called "Shapes"
            that contains the <b>LineObject</b> and different types of <b>ShapeObject</b>.</para>
            <para>The name of category must starts either with "ReportPage," or "DialogPage," depending on
            what kind of controls do you need to regiter in this category: report objects or dialog controls.
            After the comma, specify the category name. So the full category name that you need to specify
            in the <b>name</b> parameter, must be something like this: "ReportPage,Shapes".
            </para>
            <para>When register an object inside a category, you must specify the full category name in the
            <b>category</b> parameter of the <b>Add</b> method. </para>
            </remarks>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddExportCategory(System.String,System.String)">
            <summary>
            Register Export category.
            </summary>
            <param name="name">Category name.</param>
            <param name="text">Category text.</param>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddExport(System.Type,System.String)">
            <summary>
            Registers a new export filter.
            </summary>
            <param name="obj">Type of export filter.</param>
            <param name="text">Text for export filter's menu item.</param>
            <remarks>
            The <b>obj</b> must be of <see cref="T:FastReport.Export.ExportBase"/> type.
            </remarks>
            <example>
            <code>
            // register own export filter
            RegisteredObjects.AddExport(typeof(MyExport), "My Export");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddExport(System.Type,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddConnection(System.Type)">
            <summary>
            Registers data connection.
            </summary>
            <param name="obj">Type of connection.</param>
            <remarks>
            The <b>obj</b> must be of <see cref="T:FastReport.Data.DataConnectionBase"/> type.
            </remarks>
            <example>
            <code>
            // register data connection
            RegisteredObjects.AddConnection(typeof(MsSqlDataConnection));
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddConnection(System.Type,System.String)">
            <summary>
            Registers custom data connection.
            </summary>
            <param name="obj">Type of connection.</param>
            <param name="text">Name of connection.</param>
            <remarks>
            The <b>obj</b> must be of <see cref="T:FastReport.Data.DataConnectionBase"/> type.
            </remarks>
            <example>
            <code>
            // register data connection
            RegisteredObjects.AddConnection(typeof(MyDataConnection), "My Data Connection");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.Add(System.Type,System.String,System.Int32)">
            <summary>
            Registers an object in the specified category.
            </summary>
            <param name="obj">Type of object to register.</param>
            <param name="category">Name of category to register in.</param>
            <param name="imageIndex">Index of image for object's button.</param>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.Add(System.Type,System.String,System.Int32,System.Int32)">
            <summary>
            Registers an object in the specified category.
            </summary>
            <param name="obj">Type of object to register.</param>
            <param name="category">Name of category to register in.</param>
            <param name="imageIndex">Index of image for object's button.</param>
            <param name="buttonIndex">Index of object's button in toolbar.</param>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.Add(System.Type,System.String,System.Drawing.Bitmap,System.String)">
            <summary>
            Registers an object in the specified category with button's image and text.
            </summary>
            <param name="obj">Type of object to register.</param>
            <param name="category">Name of category to register in.</param>
            <param name="image">Image for object's button.</param>
            <param name="text">Text for object's button.</param>
            <remarks>
            <para>You must specify either the page type name or existing category name in the <b>category</b> parameter.
            The report objects must be registered in the "ReportPage" category or custom category that is
            registered in the "ReportPage" as well. The dialog controls must be registered in the "DialogPage"
            category or custom category that is registered in the "DialogPage" as well.</para>
            <para>If you want to register an object that needs to be serialized, but you don't want
            to show it on the toolbar, pass empty string in the <b>category</b> parameter.
            </para>
            </remarks>
            <example>
            <code>
            // register the report object
            RegisteredObjects.Add(typeof(MyReportObject), "ReportPage", myReportObjectBmp, "My Report Object");
            // register the dialog control
            RegisteredObjects.Add(typeof(MyDialogControl), "DialogPage", myDialogControlBmp, "My Dialog Control");
            // add a category and register an object inside it
            RegisteredObjects.AddCategory("ReportPage,MyCategory", myCategoryBmp, "My Category");
            // register another report object in MyCategory
            RegisteredObjects.Add(typeof(MyReportObject), "ReportPage,MyCategory", 
              anotherReportObjectBmp, "Another Report Object");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.Add(System.Type,System.String,System.Drawing.Bitmap,System.String,System.Int32)">
            <summary>
            Registers an object in the specified category with button's image, text and object's flags.
            </summary>
            <param name="obj">Type of object to register.</param>
            <param name="category">Name of category to register in.</param>
            <param name="image">Image for object's button.</param>
            <param name="text">Text for object's button.</param>
            <param name="flags">Integer value that will be passed to object's <b>OnBeforeInsert</b> method.</param>
            <remarks>
            <para>See the <see cref="M:FastReport.Utils.RegisteredObjects.Add(System.Type,System.String,System.Drawing.Bitmap,System.String)"/> method for more details.</para>
            <para>To learn about flags, see the <see cref="M:FastReport.Base.OnBeforeInsert(System.Int32)"/> method.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.Add(System.Type,System.String,System.Drawing.Bitmap,System.String,System.Int32,System.Boolean)">
            <summary>
            Registers an object in the specified category with button's image, text, object's flags and multi-insert flag.
            </summary>
            <param name="obj">Type of object to register.</param>
            <param name="category">Name of category to register in.</param>
            <param name="image">Image for object's button.</param>
            <param name="text">Text for object's button.</param>
            <param name="flags">Integer value that will be passed to object's <b>OnBeforeInsert</b> method.</param>
            <param name="multiInsert">Specifies whether the object may be inserted several times until you
            select the "arrow" button or insert another object.</param>
            <remarks>
            <para>See the <see cref="M:FastReport.Utils.RegisteredObjects.Add(System.Type,System.String,System.Drawing.Bitmap,System.String)"/> method for more details.</para>
            <para>To learn about flags, see the <see cref="M:FastReport.Base.OnBeforeInsert(System.Int32)"/> method.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddFunctionCategory(System.String,System.String)">
            <summary>
            Adds a new function category.
            </summary>
            <param name="category">Short name of category.</param>
            <param name="text">Display name of category.</param>
            <remarks>
            Short name is used to reference the category in the subsequent <see cref="M:FastReport.Utils.RegisteredObjects.AddFunction(System.Reflection.MethodInfo,System.String)"/> 
            method call. It may be any value, for example, "MyFuncs". Display name of category is displayed 
            in the "Data" window. In may be, for example, "My Functions".
            <para/>The following standard categories are registered by default:
            <list type="bullet">
              <item>
                <description>"Math"</description>
              </item>
              <item>
                <description>"Text"</description>
              </item>
              <item>
                <description>"DateTime"</description>
              </item>
              <item>
                <description>"Formatting"</description>
              </item>
              <item>
                <description>"Conversion"</description>
              </item>
              <item>
                <description>"ProgramFlow"</description>
              </item>
            </list>
            </remarks>
            <example>
            This example shows how to register a new category:
            <code>
            RegisteredObjects.AddFunctionCategory("MyFuncs", "My Functions");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.AddFunction(System.Reflection.MethodInfo,System.String)">
             <summary>
             Adds a new function into the specified category.
             </summary>
             <param name="function"><b>MethodInfo</b> containing all necessary information about the function.</param>
             <param name="category">The name of category to register the function in.</param>
             <remarks>
             Your function must be a static, public method of a public class.
             <para/>The following standard categories are registered by default:
             <list type="bullet">
               <item>
                 <description>"Math"</description>
               </item>
               <item>
                 <description>"Text"</description>
               </item>
               <item>
                 <description>"DateTime"</description>
               </item>
               <item>
                 <description>"Formatting"</description>
               </item>
               <item>
                 <description>"Conversion"</description>
               </item>
               <item>
                 <description>"ProgramFlow"</description>
               </item>
             </list>
             You may use one of the standard categories, or create a new category by the
             <see cref="M:FastReport.Utils.RegisteredObjects.AddFunctionCategory(System.String,System.String)"/> method call.
             <para/>FastReport uses XML comments to display your function's description. 
             To generate XML comments, enable it in your project's properties 
             ("Project|Properties..." menu, "Build" tab, enable the "XML documentation file" checkbox).
             </remarks>
             <example>
             The following example shows how to register own functions:
             <code>
             public static class MyFunctions
             {
               /// &lt;summary&gt;
               /// Converts a specified string to uppercase.
               /// &lt;/summary&gt;
               /// &lt;param name="s"&gt;The string to convert.&lt;/param&gt;
               /// &lt;returns&gt;A string in uppercase.&lt;/returns&gt;
               public static string MyUpperCase(string s)
               {
                 return s == null ? "" : s.ToUpper();
               }
            
               /// &lt;summary&gt;
               /// Returns the larger of two 32-bit signed integers. 
               /// &lt;/summary&gt;
               /// &lt;param name="val1"&gt;The first of two values to compare.&lt;/param&gt;
               /// &lt;param name="val2"&gt;The second of two values to compare.&lt;/param&gt;
               /// &lt;returns&gt;Parameter val1 or val2, whichever is larger.&lt;/returns&gt;
               public static int MyMaximum(int val1, int val2)
               {
                 return Math.Max(val1, val2);
               }
            
               /// &lt;summary&gt;
               /// Returns the larger of two 64-bit signed integers. 
               /// &lt;/summary&gt;
               /// &lt;param name="val1"&gt;The first of two values to compare.&lt;/param&gt;
               /// &lt;param name="val2"&gt;The second of two values to compare.&lt;/param&gt;
               /// &lt;returns&gt;Parameter val1 or val2, whichever is larger.&lt;/returns&gt;
               public static long MyMaximum(long val1, long val2)
               {
                 return Math.Max(val1, val2);
               }
             }
             
             // register a category
             RegisteredObjects.AddFunctionCategory("MyFuncs", "My Functions");
              
             // obtain MethodInfo for our functions
             Type myType = typeof(MyFunctions);
             MethodInfo myUpperCaseFunc = myType.GetMethod("MyUpperCase");
             MethodInfo myMaximumIntFunc = myType.GetMethod("MyMaximum", new Type[] { typeof(int), typeof(int) });
             MethodInfo myMaximumLongFunc = myType.GetMethod("MyMaximum", new Type[] { typeof(long), typeof(long) });
                  
             // register simple function
             RegisteredObjects.AddFunction(myUpperCaseFunc, "MyFuncs");
                  
             // register overridden functions
             RegisteredObjects.AddFunction(myMaximumIntFunc, "MyFuncs,MyMaximum");
             RegisteredObjects.AddFunction(myMaximumLongFunc, "MyFuncs,MyMaximum");
             </code>
             </example>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.FindObject(System.Type)">
            <summary>
            Finds the registered object's info.
            </summary>
            <param name="type">The type of object to find.</param>
            <returns>The object's info.</returns>
            <remarks>This method can be used to disable some objects, for example:
            <para/>RegisteredObjects.FindObject(typeof(PDFExport)).Enabled = false;
            </remarks>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.RegisterMethod(System.Type,System.String,System.Delegate)">
            <summary>
            Register and override the method with method name in the type.
            For property use the property name and _Get or _Set suffix.
            </summary>
            <param name="type">Type for registering method</param>
            <param name="methodName">Name of method fir registering</param>
            <param name="method">Method for registering</param>
        </member>
        <member name="M:FastReport.Utils.RegisteredObjects.GetMethod(System.Type,System.String,System.Boolean)">
            <summary>
            Gets the method or null if method is not found
            </summary>
            <param name="type">Type for method finding</param>
            <param name="methodName">Name for method finfing</param>
            <param name="inheritance">Use True value for inheritance the method from base type, use false for get the method only from the this type</param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.Res">
            <summary>
            Used to get localized values from the language resource file.
            </summary>
            <remarks>
            The resource file used by default is english. To load another locale, call 
            the <see cref="M:FastReport.Utils.Res.LoadLocale(System.String)"/> method. It should be done at application start
            before you use any FastReport classes.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Res.GetImages">
            <summary>
            Gets the standard images used in FastReport as an <b>ImageList</b>.
            </summary>
            <returns><b>ImageList</b> object that contains standard images.</returns>
            <remarks>
            FastReport contains about 240 truecolor images of 16x16 size that are stored in one 
            big image side-by-side. This image can be found in FastReport resources (the "buttons.png" resource).
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Res.GetImage(System.Int32)">
            <summary>
            Gets an image with specified index.
            </summary>
            <param name="index">Image index (zero-based).</param>
            <returns>The image with specified index.</returns>
            <remarks>
            FastReport contains about 240 truecolor images of 16x16 size that are stored in one 
            big image side-by-side. This image can be found in FastReport resources (the "buttons.png" resource).
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Res.GetIcon(System.Int32)">
            <summary>
            Gets an image with specified index and converts it to <b>Icon</b>.
            </summary>
            <param name="index">Image index (zero-based).</param>
            <returns>The <b>Icon</b> object.</returns>
        </member>
        <member name="P:FastReport.Utils.Res.LocaleFolder">
            <summary>
            Gets or set the folder that contains localization files (*.frl).
            </summary>
        </member>
        <member name="P:FastReport.Utils.Res.LocaleName">
            <summary>
            Returns the current UI locale name, for example "en".
            </summary>
        </member>
        <member name="M:FastReport.Utils.Res.LoadLocale(System.String)">
            <summary>
            Loads the locale from a file.
            </summary>
            <param name="fileName">The name of the file that contains localized strings.</param>
        </member>
        <member name="M:FastReport.Utils.Res.LoadLocale(System.IO.Stream)">
            <summary>
            Loads the locale from a stream.
            </summary>
            <param name="stream">The stream that contains localized strings.</param>
        </member>
        <member name="M:FastReport.Utils.Res.LoadEnglishLocale">
            <summary>
            Loads the english locale.
            </summary>
        </member>
        <member name="M:FastReport.Utils.Res.Get(System.String)">
            <summary>
            Gets a string with specified ID.
            </summary>
            <param name="id">The resource ID.</param>
            <returns>The localized string.</returns>
            <remarks>
            Since the locale file is xml-based, it may contain several xml node levels. For example, 
            the file contains the following items:
            <code>
            &lt;Objects&gt;
              &lt;Report Text="Report"/&gt;
              &lt;Bands Text="Bands"&gt;
                &lt;ReportTitle Text="Report Title"/&gt;
              &lt;/Bands&gt;
            &lt;/Objects&gt;
            </code>
            To get the localized "ReportTitle" value, you should pass the following ID
            to this method: "Objects,Bands,ReportTitle".
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Res.GetBuiltin(System.String)">
            <summary>
            Get builtin string.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Res.Set(System.String,System.String)">
            <summary>
            Replaces the specified locale string with the new value.
            </summary>
            <param name="id">Comma-separated path to the existing locale string.</param>
            <param name="value">The new string.</param>
            <remarks>
            Use this method if you want to replace some existing locale value with the new one.
            </remarks>
            <example>
            <code>
            Res.Set("Messages,SaveChanges", "My text that will appear when you close the designer");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.Res.TryGet(System.String)">
            <summary>
            Tries to get a string with specified ID.
            </summary>
            <param name="id">The resource ID.</param>
            <returns>The localized value, if specified ID exists; otherwise, the ID itself.</returns>
        </member>
        <member name="M:FastReport.Utils.Res.TryGetBuiltin(System.String)">
            <summary>
            Tries to get builtin string with specified ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Res.StringExists(System.String)">
            <summary>
            Checks if specified ID exists.
            </summary>
            <param name="id">The resource ID.</param>
            <returns><b>true</b> if specified ID exists.</returns>
        </member>
        <member name="T:FastReport.Utils.ResourceLoader">
            <summary>
            Resource loader class.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.GetBitmap(System.String,System.String)">
            <summary>
            Gets a bitmap from specified assembly resource.
            </summary>
            <param name="assembly">Assembly name.</param>
            <param name="resource">Resource name.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.GetBitmap(System.String)">
            <summary>
            Gets a bitmap from specified FastReport assembly resource.
            </summary>
            <param name="resource">Resource name.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.GetCursor(System.String,System.String)">
            <summary>
            Gets a cursor from specified assembly resource.
            </summary>
            <param name="assembly">Assembly name.</param>
            <param name="resource">Resource name.</param>
            <returns>Cursor object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.GetCursor(System.String)">
            <summary>
            Gets a cursor from specified FastReport assembly resource.
            </summary>
            <param name="resource">Resource name.</param>
            <returns>Cursor object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.GetIcon(System.String,System.String)">
            <summary>
            Gets an icon from specified assembly resource.
            </summary>
            <param name="assembly">Assembly name.</param>
            <param name="resource">Resource name.</param>
            <returns>Icon object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.GetIcon(System.String)">
            <summary>
            Gets an icon from specified FastReport assembly resource.
            </summary>
            <param name="resource">Resource name.</param>
            <returns>Icon object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.GetStream(System.String,System.String)">
            <summary>
            Gets a stream from specified assembly resource.
            </summary>
            <param name="assembly">Assembly name.</param>
            <param name="resource">Resource name.</param>
            <returns>Stream object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.GetStream(System.String)">
            <summary>
            Gets a stream from FastReport assembly resource.
            </summary>
            <param name="resource">Resource name.</param>
            <returns>Stream object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.UnpackStream(System.String,System.String)">
            <summary>
            Gets a stream from specified assembly resource and unpacks it.
            </summary>
            <param name="assembly">Assembly name.</param>
            <param name="resource">Resource name.</param>
            <returns>Stream object.</returns>
        </member>
        <member name="M:FastReport.Utils.ResourceLoader.UnpackStream(System.String)">
            <summary>
            Gets a stream from specified FastReport assembly resource and unpacks it.
            </summary>
            <param name="resource">Resource name.</param>
            <returns>Stream object.</returns>
        </member>
        <member name="T:FastReport.Utils.UIStyle">
            <summary>
            The style of FastReport user interface.
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.Office2003">
            <summary>
            Specifies the Microsoft Office 2003 style (blue).
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.Office2007Blue">
            <summary>
            Specifies the Microsoft Office 2007 style (blue).
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.Office2007Silver">
            <summary>
            Specifies the Microsoft Office 2007 style (silver).
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.Office2007Black">
            <summary>
            Specifies the Microsoft Office 2007 style (black).
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.Office2010Blue">
            <summary>
            Specifies the Office 2010 (Blue) style.
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.Office2010Silver">
            <summary>
            Specifies the Office 2010 (Silver) style.
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.Office2010Black">
            <summary>
            Specifies the Office 2010 (Black) style.
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.Office2013">
            <summary>
            Specifies the Office 2013 style.
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.VisualStudio2005">
            <summary>
            Specifies the Microsoft Visual Studio 2005 style.
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.VisualStudio2010">
            <summary>
            Specifies the Visual Studio 2010 style.
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.VisualStudio2012Light">
            <summary>
            Specifies the Visual Studio 2012 (Light) style.
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyle.VistaGlass">
            <summary>
            Specifies the Microsoft Vista style (black).
            </summary>
        </member>
        <member name="T:FastReport.Utils.UIStyleUtils">
            <summary>
            Contains conversion methods between FastReport's UIStyle to various enums.
            </summary>
        </member>
        <member name="F:FastReport.Utils.UIStyleUtils.UIStyleNames">
            <summary>
            Contains visual style names.
            </summary>
        </member>
        <member name="M:FastReport.Utils.UIStyleUtils.GetDotNetBarStyle(FastReport.Utils.UIStyle)">
            <summary>
            Converts FastReport's UIStyle to eDotNetBarStyle.
            </summary>
            <param name="style">Style to convert.</param>
            <returns>Value of eDotNetBarStyle type.</returns>
        </member>
        <member name="M:FastReport.Utils.UIStyleUtils.GetTabStripStyle(FastReport.Utils.UIStyle)">
            <summary>
            Converts FastReport's UIStyle to eTabStripStyle.
            </summary>
            <param name="style">Style to convert.</param>
            <returns>Value of eTabStripStyle type.</returns>
        </member>
        <member name="M:FastReport.Utils.UIStyleUtils.GetTabStripStyle1(FastReport.Utils.UIStyle)">
            <summary>
            Converts FastReport's UIStyle to eTabStripStyle.
            </summary>
            <param name="style">Style to convert.</param>
            <returns>Value of eTabStripStyle type.</returns>
        </member>
        <member name="M:FastReport.Utils.UIStyleUtils.GetOffice2007ColorScheme(FastReport.Utils.UIStyle)">
            <summary>
            Converts FastReport's UIStyle to eOffice2007ColorScheme.
            </summary>
            <param name="style">Style to convert.</param>
            <returns>Value of eOffice2007ColorScheme type.</returns>
        </member>
        <member name="M:FastReport.Utils.UIStyleUtils.GetColorSchemeStyle(FastReport.Utils.UIStyle)">
            <summary>
            Converts FastReport's UIStyle to eColorSchemeStyle.
            </summary>
            <param name="style">Style to convert.</param>
            <returns>Value of eColorSchemeStyle type.</returns>
        </member>
        <member name="M:FastReport.Utils.UIStyleUtils.GetAppWorkspaceColor(FastReport.Utils.UIStyle)">
            <summary>
            Returns app workspace color for the given style.
            </summary>
            <param name="style">UI style.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:FastReport.Utils.UIStyleUtils.GetControlColor(FastReport.Utils.UIStyle)">
            <summary>
            Returns control color for the given style.
            </summary>
            <param name="style">UI style.</param>
            <returns>The color.</returns>
        </member>
        <member name="T:FastReport.Utils.Editors">
            <summary>
            Contains methods to call common editors.
            </summary>
            <remarks>
            Use this class if you are writing a new component for FastReport.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Editors.EditExpression(FastReport.Report,System.String)">
            <summary>
            Invokes the expression editor.
            </summary>
            <param name="report">A reference to the report.</param>
            <param name="expression">The expression to edit.</param>
            <returns>The new expression.</returns>
        </member>
        <member name="M:FastReport.Utils.Editors.EditBorder(FastReport.Border)">
            <summary>
            Invokes the border editor.
            </summary>
            <param name="border">The <b>Border</b> to edit.</param>
            <returns>The new border.</returns>
        </member>
        <member name="M:FastReport.Utils.Editors.EditBandColumns(FastReport.BandColumns)">
            <summary>
            Invokes the data band columns editor.
            </summary>
            <param name="columns">The data band columns to edit.</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Editors.EditFill(FastReport.FillBase)">
            <summary>
            Invokes the fill editor.
            </summary>
            <param name="fill">The fill to edit.</param>
            <returns>The new fill.</returns>
        </member>
        <member name="M:FastReport.Utils.Editors.EditOutline(FastReport.TextOutline)">
            <summary>
            Invokes the outline editor.
            </summary>
            <param name="outline">The outline to edit.</param>
            <returns>The new outline.</returns>
        </member>
        <member name="T:FastReport.Utils.FRMessageBox">
            <summary>
            Provides the message functions. 
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRMessageBox.Error(System.String)">
            <summary>
            Shows the Message Box with error message.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:FastReport.Utils.FRMessageBox.Confirm(System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            Shows Message Box with confirmation.
            </summary>
            <param name="msg"></param>
            <param name="buttons"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.FRMessageBox.Information(System.String)">
            <summary>
            Shows information Message Box.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:FastReport.Utils.Profiler">
            <summary>
            The profiler.
            </summary>
        </member>
        <member name="M:FastReport.Utils.Profiler.Start">
            <summary>
            Starts the profiler.
            </summary>
        </member>
        <member name="M:FastReport.Utils.Profiler.Stop">
            <summary>
            Finishes the profiler and displays results.
            </summary>
        </member>
        <member name="T:FastReport.Utils.ScriptSecurityEventArgs">
            <summary>
            Script security event arguments.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ScriptSecurityEventArgs.ReportLanguage">
            <summary>
            Gets the report language.
            </summary>
            <value>The report language.</value>
        </member>
        <member name="P:FastReport.Utils.ScriptSecurityEventArgs.Report">
            <summary>
            Gets the report.
            </summary>
            <value>The report.</value>
        </member>
        <member name="P:FastReport.Utils.ScriptSecurityEventArgs.ReportScript">
            <summary>
            Gets the report script.
            </summary>
            <value>The report script.</value>
        </member>
        <member name="P:FastReport.Utils.ScriptSecurityEventArgs.References">
            <summary>
            Gets the references of script.
            </summary>
            <value>Script references</value>
        </member>
        <member name="P:FastReport.Utils.ScriptSecurityEventArgs.IsValid">
            <summary>
            Gets or sets value if script is allowed to compile
            </summary>
            <value><c>true</c> if is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:FastReport.Utils.ScriptSecurityEventArgs.#ctor(FastReport.Report,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Utils.ScriptSecurityEventArgs"/> class.
            </summary>
            <param name="report">Report.</param>
            <param name="script">Report's script.</param>
            <param name="refs">Report's references.</param>
        </member>
        <member name="T:FastReport.Utils.AssemblyInitializerBase">
            <summary>
            Base class for plugin's assembly initializer.
            </summary>
            <remarks>
            FastReport has an open architecture. That means you can extend it with own classes
            such as report objects, wizards, export filters. Usually such classes are
            placed in separate dlls (plugins). FastReport has mechanism to load plugin dlls. You can specify 
            which plugins to load at first start, in the FastReport configuration file (by default it is located in the
            C:\Documents and Settings\User_Name\Local Settings\Application Data\FastReport\FastReport.config file).
            To do this, add an xml item with your plugin name inside the &lt;Plugins&gt; item:
            <code>
            &lt;?xml version="1.0" encoding="utf-8"?&gt;
            &lt;Config&gt;
              &lt;Plugins&gt;
                &lt;Plugin Name="c:\Program Files\MyProgram\MyPlugin.dll"/&gt;
              &lt;/Plugins&gt;
            &lt;/Config&gt;
            </code>
            When you run your application and use the <b>Report</b> object first time, all plugins will be loaded. 
            To register objects contained in a plugin, FastReport searches for classes of type 
            <b>AssemblyInitializerBase</b> and instantiates them.
            <para>Use this class to register custom report objects, controls, wizards, exports that
            are contained in the assembly. To do this, make your own class of the <b>AssemblyInitializerBase</b>
            type and override its default constructor. In the constructor, call <b>RegisteredObjects.Add</b>
            methods to register all necessary items.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Utils.AssemblyInitializerBase.#ctor">
            <summary>
            Registers plugins contained in this assembly.
            </summary>
            <remarks>
            This constructor is called automatically when the assembly is loaded.
            </remarks>
            <example>This example show how to create own assembly initializer to register own items.
            <code>
            public class MyAssemblyInitializer : AssemblyInitializerBase
            {
              public MyAssemblyInitializer()
              {
                // register own wizard
                RegisteredObjects.AddWizard(typeof(MyWizard), myWizBmp, "My Wizard", true);
                // register own export filter
                RegisteredObjects.AddExport(typeof(MyExport), "My Export");
                // register own report object
                RegisteredObjects.Add(typeof(MyObject), "ReportPage", myObjBmp, "My Object");
              }
            }
            </code>
            </example>
        </member>
        <member name="P:FastReport.Utils.BlobStore.BlobItem.Source">
            <summary>
            Source of image, only for inline img tag
            </summary>
        </member>
        <member name="T:FastReport.Utils.CMYKColor">
            <summary>
            Class for ACMYK color conversions
            </summary>
        </member>
        <member name="F:FastReport.Utils.CMYKColor.a">
            <summary>
            Alpha transparency 0..255
            </summary>
        </member>
        <member name="F:FastReport.Utils.CMYKColor.c">
            <summary>
            Cyan 0..100
            </summary>
        </member>
        <member name="F:FastReport.Utils.CMYKColor.m">
            <summary>
            Magenta 0..100
            </summary>
        </member>
        <member name="F:FastReport.Utils.CMYKColor.y">
            <summary>
            Yellow 0..100
            </summary>
        </member>
        <member name="F:FastReport.Utils.CMYKColor.k">
            <summary>
            Black 0..100
            </summary>
        </member>
        <member name="M:FastReport.Utils.CMYKColor.ToString">
            <summary>
            Returns ACMYK as string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.CMYKColor.FromString(System.String)">
            <summary>
            Gets CMYKA from string.
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:FastReport.Utils.CMYKColor.FromColor(System.Drawing.Color)">
            <summary>
            Converts Color value to ACMYK
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:FastReport.Utils.CMYKColor.FromARGB(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Converts separate ARGB values in ACMYK
            </summary>
            <param name="alpha"></param>
            <param name="R"></param>
            <param name="G"></param>
            <param name="B"></param>
        </member>
        <member name="M:FastReport.Utils.CMYKColor.ToArgb">
            <summary>
            Returns ARGB color value
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.CMYKColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates CMYKColor from ARGB values
            </summary>
            <param name="alpha"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:FastReport.Utils.CMYKColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates CMYKColor from ACMYK values
            </summary>
            <param name="alpha"></param>
            <param name="c"></param>
            <param name="m"></param>
            <param name="y"></param>
            <param name="k"></param>
        </member>
        <member name="M:FastReport.Utils.CMYKColor.#ctor(System.String)">
            <summary>
            Creates CMYKColor from string (comma separated values)
            </summary>
            <param name="acmykString"></param>
        </member>
        <member name="M:FastReport.Utils.CMYKColor.#ctor(System.Drawing.Color)">
            <summary>
            Creates CMYKColor from Color value
            </summary>
            <param name="color"></param>
        </member>
        <member name="T:FastReport.Utils.ColorUtils">
            <summary>
            Color Utilities
            </summary>
        </member>
        <member name="M:FastReport.Utils.ColorUtils.isCMYKJpeg(System.Drawing.Image)">
            <summary>
            Return true for CMYK Jpeg image
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.Converter">
            <summary>
            Contains methods that peform string to object and vice versa conversions.
            </summary>
        </member>
        <member name="M:FastReport.Utils.Converter.ToString(System.Object)">
            <summary>
            Converts an object to a string.
            </summary>
            <param name="value">The object to convert.</param>
            <returns>The string that contains the converted value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.ToString(System.Object,System.Type)">
            <summary>
            Converts a value to a string using the specified converter.
            </summary>
            <param name="value">The object to convert.</param>
            <param name="converterType">The type of converter.</param>
            <returns>The string that contains the converted value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.FromString(System.Type,System.String)">
            <summary>
            Converts a string value to the specified data type.
            </summary>
            <param name="type">The data type to convert to.</param>
            <param name="value">The string to convert from.</param>
            <returns>The object of type specified in the <b>type</b> parameter that contains 
            a converted value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.FromString(System.String,System.Type)">
            <summary>
            Converts a string to an object using the specified converter.
            </summary>
            <param name="value">The string to convert.</param>
            <param name="converterType">The type of converter.</param>
            <returns>The object that contains the converted value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.ToXml(System.String)">
            <summary>
            Converts a string containing special symbols to the xml-compatible string.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The result string.</returns>
            <remarks>
            This method replaces some special symbols like &lt;, &gt; into xml-compatible 
            form: &amp;lt;, &amp;gt;. To convert such string back to original form, use the
            <see cref="M:FastReport.Utils.Converter.FromXml(System.String)"/> method.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Converter.ToXml(System.String,System.Boolean)">
            <summary>
            Converts a string containing special symbols to the xml-compatible string.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="convertCrlf">Determines whether it is necessary to convert cr-lf symbols to xml form.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.ToXml(System.Object)">
            <summary>
            Converts a value to xml-compatible string.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.FromXml(System.String)">
            <summary>
            Convert the xml-compatible string to the regular one.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The result string.</returns>
            <remarks>
            This is counterpart to the <see cref="M:FastReport.Utils.Converter.ToXml(System.String)"/> method.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Converter.DecreasePrecision(System.Single,System.Int32)">
            <summary>
            Decreases the precision of floating-point value.
            </summary>
            <param name="value">The initial value.</param>
            <param name="precision">The number of decimal digits in the fraction.</param>
            <returns>The value with lesser precision.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToFloat(System.String)">
            <summary>
            Converts a string value to the float.
            </summary>
            <param name="value">The string value to convert.</param>
            <returns>The float value.</returns>
            <remarks>
            Both "." or "," decimal separators are allowed.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToFloat(System.String,System.Boolean)">
            <summary>
            Converts a string value to the float.
            </summary>
            <param name="value">The string value to convert.</param>
            <param name="removeNonDigit">Indicates whether to ignore non-digit symbols.</param>
            <returns>The float value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToFloat(System.String,System.String)">
            <summary>
            Converts a string value to the float.
            </summary>
            <param name="value">The string value to convert.</param>
            <param name="separator">Decimal separator.</param>
            <returns>The float value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToFloat(System.String,System.String,System.Boolean)">
            <summary>
            Converts a string value to the float.
            </summary>
            <param name="value">The string value to convert.</param>
            <param name="separator">Decimal separator.</param>
            <param name="removeNonDigit">Indicates whether to ignore non-digit symbols.</param>
            <returns>The float value.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToIList(System.String,System.Collections.IList)">
            <summary>
            Converts the string containing several text lines to a collection of strings.
            </summary>
            <param name="text">The string to convert.</param>
            <param name="list">The collection instance.</param>
        </member>
        <member name="M:FastReport.Utils.Converter.IListToString(System.Collections.IList)">
            <summary>
            Converts a collection of strings to a string.
            </summary>
            <param name="list">The collection to convert.</param>
            <returns>The string that contains all lines from the collection.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.ConvertNull(System.Type)">
            <summary>
            Converts <b>null</b> value to 0, false, empty string, depending on <b>type</b>.
            </summary>
            <param name="type">The data type.</param>
            <returns>The value of the <b>type</b> data type.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToByteArray(System.String)">
            <summary>
            Converts <b>string</b> value to <b>byte[]</b>.
            </summary>
            <param name="Str">The string to convert</param>
            <returns>The value of the <b>byte[]</b> data type.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.StringToNameValueCollection(System.String)">
            <summary>
            Converts a string to NameValueCollection.
            </summary>
            <param name="text">The string to convert.</param>
            <returns>The NameValueCollection that contains the name/value pairs.</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.FromHtmlEntities(System.String,System.Int32@,System.String@)">
            <summary>
            Convert &amp;amp;&amp;Tab;&amp;quot; etc to symbol and return result as string
            </summary>
            <param name="text">String for processing</param>
            <param name="position">Position for processing</param>
            <param name="result">Result of processing</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:FastReport.Utils.Converter.FromHtmlEntities(System.String,System.Int32@,FastReport.Utils.FastString)">
            <summary>
            Convert &amp;amp;&amp;Tab;&amp;quot; etc to symbol and return result as string
            </summary>
            <param name="text">String for processing</param>
            <param name="position">Position for processing</param>
            <param name="result">Append result of processing to FastString</param>
            <returns>True if successful</returns>
        </member>
        <member name="T:FastReport.Utils.Crc32">
            <summary>
            Calc the Crc32 checksum
            </summary>
        </member>
        <member name="M:FastReport.Utils.Crc32.Calculate(System.IO.Stream)">
            <summary>
            Caclulate Streams checksum.
            </summary>
            <param name="Stream"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crc32.Calculate(System.Byte[])">
            <summary>
            Calculate byte array checksum.
            </summary>
            <param name="ByteArray"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crc32.Calculate(System.String)">
            <summary>
            Calculate string checksum.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crc32.Begin">
            <summary>
            Begin the checksum
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crc32.Update(System.UInt32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Update the checksum
            </summary>
            <param name="crc"></param>
            <param name="ByteArray"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crc32.End(System.UInt32)">
            <summary>
            End the checksum.
            </summary>
            <param name="crc"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.Crypter">
            <summary>
            Contains methods used to crypt/decrypt a data.
            </summary>
        </member>
        <member name="P:FastReport.Utils.Crypter.DefaultPassword">
            <summary>
            Sets the password that is used to crypt connection strings stored in a report.
            </summary>
            <remarks>
            See the <see cref="P:FastReport.Data.DataConnectionBase.ConnectionString"/> property for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Crypter.Encrypt(System.IO.Stream,System.String)">
            <summary>
            Crypts a stream using specified password.
            </summary>
            <param name="dest">The destination stream that will receive the crypted data.</param>
            <param name="password">The password.</param>
            <returns>The stream that you need to write to.</returns>
            <remarks>
            Pass the stream you need to write to, to the <b>dest</b> parameter. Write your data to the 
            stream that this method returns. When you close this stream, the <b>dest</b> stream will be
            closed too and contains the crypted data.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Crypter.Decrypt(System.IO.Stream,System.String)">
            <summary>
            Decrypts a stream using specified password.
            </summary>
            <param name="source">Stream that contains crypted data.</param>
            <param name="password">The password.</param>
            <returns>The stream that contains decrypted data.</returns>
            <remarks>
            You should read from the stream that this method returns.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Crypter.IsStreamEncrypted(System.IO.Stream)">
            <summary>
            Checks if the stream contains a crypt signature.
            </summary>
            <param name="stream">Stream to check.</param>
            <returns><b>true</b> if stream is crypted.</returns>
        </member>
        <member name="M:FastReport.Utils.Crypter.EncryptString(System.String)">
            <summary>
            Encrypts the string using the default password.
            </summary>
            <param name="data">String to encrypt.</param>
            <returns>The encrypted string.</returns>
            <remarks>
            The password used to encrypt a string can be set via <see cref="P:FastReport.Utils.Crypter.DefaultPassword"/> property.
            You also may use the <see cref="M:FastReport.Utils.Crypter.EncryptString(System.String,System.String)"/> method if you want to
            specify another password.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Crypter.EncryptString(System.String,System.String)">
            <summary>
            Encrypts the string using specified password.
            </summary>
            <param name="data">String to encrypt.</param>
            <param name="password">The password.</param>
            <returns>The encrypted string.</returns>
        </member>
        <member name="M:FastReport.Utils.Crypter.DecryptString(System.String)">
            <summary>
            Decrypts the string using the default password.
            </summary>
            <param name="data">String to decrypt.</param>
            <returns>The decrypted string.</returns>
            <remarks>
            The password used to decrypt a string can be set via <see cref="P:FastReport.Utils.Crypter.DefaultPassword"/> property.
            You also may use the <see cref="M:FastReport.Utils.Crypter.DecryptString(System.String,System.String)"/> method if you want to
            specify another password.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.Crypter.DecryptString(System.String,System.String)">
            <summary>
            Decrypts the string using specified password.
            </summary>
            <param name="data">String to decrypt.</param>
            <param name="password">The password.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:FastReport.Utils.Crypter.ComputeHash(System.IO.Stream)">
            <summary>
            Computes hash of specified stream. Initial position in stream will be saved.
            </summary>
            <param name="input">Initial stream</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crypter.ComputeHash(System.Byte[])">
            <summary>
            Computes hash of specified array. 
            </summary>
            <param name="input">Initial array</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.Crypter.ComputeHash(System.String)">
            <summary>
            Computes hash of specified array. 
            </summary>
            <param name="input">Initial array</param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.Murmur3">
            <summary>
            MurmurHash is a non-cryptographic hash function suitable for general hash-based lookup. 
            It was created by Austin Appleby in 2008 and is currently hosted on Github along with its test suite named 'SMHasher'. 
            It also exists in a number of variants, all of which have been released into the public domain. 
            The name comes from two basic operations, multiply (MU) and rotate (R), used in its inner loop.
            https://en.wikipedia.org/wiki/MurmurHash
            Implementation of Murmur3 Hash by Adam Horvath 
            http://blog.teamleadnet.com/2012/08/murmurhash3-ultra-fast-hash-algorithm.html
            </summary>
        </member>
        <member name="F:FastReport.Utils.Murmur3.READ_SIZE">
            <summary>
            READ_SIZE
            </summary>
        </member>
        <member name="M:FastReport.Utils.Murmur3.ComputeHash(System.Byte[])">
            <summary>
            ComputeHash function
            </summary>
            <param name="bb"></param>
            <returns></returns>
        </member>
        <member name="P:FastReport.Utils.Murmur3.Hash">
            <summary>
            Gets the Hash
            </summary>
        </member>
        <member name="T:FastReport.Utils.DrawText">
            <summary>
            Used to draw a text with non-standard angle or justification.
            </summary>
        </member>
        <member name="M:FastReport.Utils.DrawText.Draw(System.String,System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat,FastReport.HorzAlign,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Draws a string.
            </summary>
            <param name="text">String to draw.</param>
            <param name="g"><b>Graphics</b> object to draw on.</param>
            <param name="font">Font that used to draw text.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text. </param>
            <param name="rect"><b>RectangleF</b> structure that specifies the location of the drawn text.</param>
            <param name="format">StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
            <param name="horzAlign">Horizontal alignment of the text.</param>
            <param name="fontWidthRatio">Width ratio of the font used to draw a string.</param>
            <param name="lineHeight">Line height, in pixels.</param>
            <param name="angle">Angle of the text, in degrees.</param>
            <param name="wysiwyg">Indicates whther to draw string close to the printout.</param>
            <param name="forceJustify">Force justify for the last line.</param>
        </member>
        <member name="M:FastReport.Utils.DrawText.#ctor">
            <summary>
            Initializes a new instance of the <b>DrawText</b> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Utils.DuplicateNameException">
            <summary>
            The exception that is thrown when the user tried to set object's name that is already exists.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AncestorException">
            <summary>
            The exception that is thrown when the user tried to rename an object that is introduced in the ancestor report.
            </summary>
        </member>
        <member name="T:FastReport.Utils.FileFormatException">
            <summary>
            The exception that is thrown when loading bad formed xml report file.
            </summary>
        </member>
        <member name="T:FastReport.Utils.DecryptException">
            <summary>
            The exception that is thrown when loading an encrypted report with wrong password.
            </summary>
        </member>
        <member name="T:FastReport.Utils.CompilerException">
            <summary>
            The exception that is thrown if there is an error in the report's script code.
            </summary>
        </member>
        <member name="T:FastReport.Utils.ParentException">
            <summary>
            The exception that is thrown when trying to set an object's <b>Parent</b> property to 
            an object that not accepts children of this type.
            </summary>
        </member>
        <member name="T:FastReport.Utils.ClassException">
            <summary>
            The exception that is thrown when trying to load a report file that contains reference to an 
            unknown object type.
            </summary>
        </member>
        <member name="T:FastReport.Utils.DataTableException">
            <summary>
            The exception that is thrown when initializing a table datasource which
            <b>TableName</b> or <b>Alias</b> is not set properly.
            </summary>
        </member>
        <member name="T:FastReport.Utils.DataNotInitializedException">
            <summary>
            The exception that is thrown when trying to access a row of a datasource that is not initialized yet.
            </summary>
        </member>
        <member name="T:FastReport.Utils.TableManualBuildException">
            <summary>
            The exception that is thrown if an error occurs in the <b>TableObject.ManualBuild</b> event.
            </summary>
        </member>
        <member name="T:FastReport.Utils.MatrixValueException">
            <summary>
            The exception that is thrown if an error occurs in the <b>MatrixObject.ManualBuild</b> event.
            </summary>
        </member>
        <member name="T:FastReport.Utils.NotValidIdentifierException">
            <summary>
            The exception that is thrown if a report object's Name property is set to wrong value.
            </summary>
        </member>
        <member name="T:FastReport.Utils.UnknownNameException">
            <summary>
            The exception that is thrown if an unknown value is supplied to some methods dealing with totals, variables etc.
            </summary>
        </member>
        <member name="T:FastReport.Utils.CloudStorageException">
            <summary>
            <see cref="T:FastReport.Cloud.StorageClient.CloudStorageClient"/> throws this exception if an error occurs in the <b>SaveReport</b> method.
            See inner exception for detailed information.
            </summary>
        </member>
        <member name="T:FastReport.Utils.GroupHeaderHasNoGroupCondition">
            <summary>
            The exception that is thrown when the Group Header has no group condition.
            </summary>
        </member>
        <member name="T:FastReport.Utils.FastNameCreator">
            <summary>
            The helper class used to create unique component names using the fastest method.
            </summary>
            <remarks>
            <para>Note: you can create unique component's name using its <b>CreateUniqueName</b> method.
            However, it is very slow and can't be used in some situations (when you create a report 
            layout in a code and have a lot of objects on a page).</para>
            </remarks>
            <example>This example demonstrates how to use this class.
            <code>
            FastNameCreator nameCreator = new FastNameCreator(Report.AllObjects);
            foreach (Base c in Report.AllObjects)
            {
              if (c.Name == "")
                nameCreator.CreateUniqueName(c);
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FastNameCreator.CreateUniqueName(FastReport.Base)">
            <summary>
            Creates the unique name for the given object.
            </summary>
            <param name="obj">The object to create name for.</param>
        </member>
        <member name="M:FastReport.Utils.FastNameCreator.#ctor(FastReport.ObjectCollection)">
            <summary>
            Initializes a new instance of the <b>FastNameCreator</b> class with collection of 
            existing report objects.
            </summary>
            <param name="objects">The collection of existing report objects.</param>
        </member>
        <member name="T:FastReport.Utils.FastString">
            <summary>
            Fast alternative of StringBuilder.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FastString.Length">
            <summary>
            Gets the Length of string.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FastString.Item(System.Int32)">
            <summary>
            Gets or sets the chars of string.
            </summary>
            <param name="index"></param>
            <returns>Char value</returns>
        </member>
        <member name="P:FastReport.Utils.FastString.StringBuilder">
            <summary>
            Gets StringBuilder
            </summary>
        </member>
        <member name="M:FastReport.Utils.FastString.Init(System.Int32)">
            <summary>
            Initialize the new array for chars.
            </summary>
            <param name="iniCapacity">Length of initial array.</param>
        </member>
        <member name="M:FastReport.Utils.FastString.IsEmpty">
            <summary>
            Checks the empty array.
            </summary>
            <returns>True if string is empty.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.ToString">
            <summary>
            Converts the array in string.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Clear">
            <summary>
            Clears the string.
            </summary>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Append(System.String)">
            <summary>
            Appends the string by string value.
            </summary>
            <param name="value">String value.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.AppendLine(System.String)">
            <summary>
            Appends the string by string value.
            </summary>
            <param name="value">String value.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.AppendFormat(System.String,System.Object[])">
            <summary>
            Append formatted string.
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.FastString.AppendLine">
            <summary>
            Appends new line.
            </summary>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Append(System.Char)">
            <summary>
            Appends the string by char value.
            </summary>
            <param name="value">Char value.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Append(FastReport.Utils.FastString)">
            <summary>
            Appends the another FastString object.
            </summary>
            <param name="fastString">FastString object.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Append(System.Object)">
            <summary>
            Appends the string by object data.
            </summary>
            <param name="value">Object value.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
            <summary>
            Copies the substring in char array.
            </summary>
            <param name="sourceIndex">Start index in source.</param>
            <param name="destination">Destination array.</param>
            <param name="destinationIndex">Destination index.</param>
            <param name="count">Count of chars</param>
        </member>
        <member name="M:FastReport.Utils.FastString.Remove(System.Int32,System.Int32)">
            <summary>
            Removes substring.
            </summary>
            <param name="startIndex">Start index of removed string.</param>
            <param name="length">Length of removed string.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Insert(System.Int32,System.String)">
            <summary>
            Inserts string.
            </summary>
            <param name="startIndex">Start index in existing string.</param>
            <param name="value">Value of inserting string.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Replace(System.String,System.String)">
            <summary>
            Replacing the substring on other.
            </summary>
            <param name="oldValue">Old string value.</param>
            <param name="newValue">New string value.</param>
            <returns>FastString object.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.IndexOf(System.String,System.Int32)">
            <summary>
            Index of substring.
            </summary>
            <param name="value">Substring for search.</param>
            <param name="startIndex">Sarting position for search.</param>
            <returns>Position of substring.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.SubstringCompare(System.Int32,System.String)">
            <summary>
            Compare of substring in position.
            </summary>
            <param name="startIndex">Starting index for comparsion.</param>
            <param name="value">Value for compare.</param>
            <returns>True if substring is identical in position.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.Substring(System.Int32,System.Int32)">
            <summary>
            Returns the substring.
            </summary>
            <param name="startIndex">Starting index.</param>
            <param name="length">Length of substring.</param>
            <returns>Substring.</returns>
        </member>
        <member name="M:FastReport.Utils.FastString.#ctor(System.Int32)">
            <summary>
            Creates the new FastString object with initial capacity.
            </summary>
            <param name="initCapacity">Initial capacity.</param>
        </member>
        <member name="M:FastReport.Utils.FastString.#ctor">
            <summary>
            Creates the new FastString object with default capacity.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FastString.#ctor(System.String)">
            <summary>
            Creates the new FastString object from initial string.
            </summary>
            <param name="initValue"></param>
        </member>
        <member name="T:FastReport.Utils.FloatCollection">
            <summary>
            Represents a collection of float values.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FloatCollection.Item(System.Int32)">
            <summary>
            Gets or sets the value at the specified index.
            </summary>
            <param name="index">Index of a value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.AddRange(System.Single[])">
            <summary>
            Adds the specified values to the end of this collection.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.Add(System.Single)">
            <summary>
            Adds a value to the end of this collection.
            </summary>
            <param name="value">Value to add.</param>
            <returns>Index of the added value.</returns>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.Insert(System.Int32,System.Single)">
            <summary>
            Inserts a value into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The value to insert.</param>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.Remove(System.Single)">
            <summary>
            Removes the specified value from the collection.
            </summary>
            <param name="value">Value to remove.</param>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.IndexOf(System.Single)">
            <summary>
            Returns the zero-based index of the first occurrence of a value.
            </summary>
            <param name="value">The value to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.Contains(System.Single)">
            <summary>
            Determines whether a value is in the collection.
            </summary>
            <param name="value">The value to locate in the collection.</param>
            <returns><b>true</b> if value is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Utils.FloatCollection.Assign(FastReport.Utils.FloatCollection)">
            <summary>
            Copies values from another collection.
            </summary>
            <param name="source">Collection to copy from.</param>
        </member>
        <member name="T:FastReport.Utils.FRCollectionBase">
            <summary>
            Represents a collection of FastReport base objects.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRCollectionBase.Owner">
            <summary>
            Gets an owner of this collection.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.AddRange(FastReport.Base[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range">Range of elements.</param>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.AddRange(FastReport.ObjectCollection)">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range">Collection of elements.</param>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.Add(FastReport.Base)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.Insert(System.Int32,FastReport.Base)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.Remove(FastReport.Base)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.IndexOf(FastReport.Base)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.Contains(FastReport.Base)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.ToArray">
            <summary>
            Returns an array of collection items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.Equals(FastReport.Utils.FRCollectionBase)">
            <summary>
            Determines whether two collections are equal.
            </summary>
            <param name="list">The collection to compare with.</param>
            <returns><b>true</b> if collections are equal; <b>false</b> otherwise.</returns>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.CopyTo(FastReport.Utils.FRCollectionBase)">
            <summary>
            Copies the content to another collection.
            </summary>
            <param name="list">The collection to copy to.</param>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.OnInsert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.OnRemove(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.OnClear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.#ctor">
            <summary>
            Initializes a new instance of the <b>FRCollectionBase</b> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRCollectionBase.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <b>FRCollectionBase</b> class with specified owner.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Utils.WorkspaceMode1">
            <summary>
            Specifies the main mode of the designer's workspace.
            </summary>
        </member>
        <member name="F:FastReport.Utils.WorkspaceMode1.Select">
            <summary>
            Specifies selection mode.
            </summary>
        </member>
        <member name="F:FastReport.Utils.WorkspaceMode1.Insert">
            <summary>
            Specifies insertion mode.
            </summary>
        </member>
        <member name="F:FastReport.Utils.WorkspaceMode1.DragDrop">
            <summary>
            Specifies drag-drop mode.
            </summary>
        </member>
        <member name="T:FastReport.Utils.WorkspaceMode2">
            <summary>
            Specifies the additional mode of the designer's workspace.
            </summary>
        </member>
        <member name="F:FastReport.Utils.WorkspaceMode2.None">
            <summary>
            Specifies default mode.
            </summary>
        </member>
        <member name="F:FastReport.Utils.WorkspaceMode2.Move">
            <summary>
            Indicates that user moves the selected objects.
            </summary>
        </member>
        <member name="F:FastReport.Utils.WorkspaceMode2.Size">
            <summary>
            Indicates that user resizes the selected objects.
            </summary>
        </member>
        <member name="F:FastReport.Utils.WorkspaceMode2.SelectionRect">
            <summary>
            Indicates that user draw the selection rectangle.
            </summary>
        </member>
        <member name="F:FastReport.Utils.WorkspaceMode2.Custom">
            <summary>
            Specifies a custom mode handled by the object.
            </summary>
        </member>
        <member name="T:FastReport.Utils.FRMouseEventArgs">
            <summary>
            Provides a data for mouse events.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.x">
            <summary>
            The X mouse coordinate.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.y">
            <summary>
            The Y mouse coordinate.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.button">
            <summary>
            Current state of mouse buttons.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.modifierKeys">
            <summary>
            Current keyboard state.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.handled">
            <summary>
            Indicates that current object was handled the mouse message.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.delta">
            <summary>
            The delta of the mouse movement.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.wheelDelta">
            <summary>
            The mouse wheel delta.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.cursor">
            <summary>
            Current cursor shape.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.mode">
            <summary>
            Additional mode of the designer's workspace.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.sizingPoint">
            <summary>
            Current sizing point if <b>Mode</b> is set to <b>Size</b>.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.selectionRect">
            <summary>
            Current selection rectangle if mode is set to <b>SelectionRect</b>.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.activeObject">
            <summary>
            Active object that handles the mouse event.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRMouseEventArgs.DragSource">
            <summary>
            The source object of drag-drop operation.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.dragSources">
            <summary>
            Multiple sources objects of drag-drop operation.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.dragTarget">
            <summary>
            The target object of drag-drop operation.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.dragMessage">
            <summary>
            The message to show when drag source is over the object.
            </summary>
        </member>
        <member name="F:FastReport.Utils.FRMouseEventArgs.data">
            <summary>
            Additional data supplied and handled by report objects.
            </summary>
        </member>
        <member name="T:FastReport.Utils.SizingPoint">
            <summary>
            Specifies the sizing point used to resize an object by mouse.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SizingPoint.None">
            <summary>
            No sizing point.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SizingPoint.LeftTop">
            <summary>
            Specifies left-top sizing point.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SizingPoint.LeftBottom">
            <summary>
            Specifies left-bottom sizing point.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SizingPoint.RightTop">
            <summary>
            Specifies right-top sizing point.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SizingPoint.RightBottom">
            <summary>
            Specifies right-bottom sizing point.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SizingPoint.TopCenter">
            <summary>
            Specifies top-center sizing point.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SizingPoint.BottomCenter">
            <summary>
            Specifies bottom-center sizing point.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SizingPoint.LeftCenter">
            <summary>
            Specifies left-center sizing point.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SizingPoint.RightCenter">
            <summary>
            Specifies right-center sizing point.
            </summary>
        </member>
        <member name="T:FastReport.Utils.SelectionPoint">
            <summary>
            Specifies a selection point used to resize an object.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SelectionPoint.x">
            <summary>
            The X coordinate of the point.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SelectionPoint.y">
            <summary>
            The Y coordinate of the point.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SelectionPoint.sizingPoint">
            <summary>
            The size mode.
            </summary>
        </member>
        <member name="M:FastReport.Utils.SelectionPoint.#ctor(System.Single,System.Single,FastReport.Utils.SizingPoint)">
            <summary>
            Initializes a new instance of the <b>SelectionPoint</b> class with specified location and size mode.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="pt">Size mode.</param>
        </member>
        <member name="T:FastReport.Utils.FRPaintEventArgs">
            <summary>
            Provides a data for paint event.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRPaintEventArgs.Graphics">
            <summary>
            Gets a <b>Graphics</b> object to draw on.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRPaintEventArgs.ScaleX">
            <summary>
            Gets the X scale factor.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRPaintEventArgs.ScaleY">
            <summary>
            Gets the Y scale factor.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRPaintEventArgs.Cache">
            <summary>
            Gets the cache that contains graphics objects.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRPaintEventArgs.#ctor(System.Drawing.Graphics,System.Single,System.Single,FastReport.GraphicCache)">
            <summary>
            Initializes a new instance of the <b>FRPaintEventArgs</b> class with specified settings.
            </summary>
            <param name="g"><b>Graphics</b> object to draw on.</param>
            <param name="scaleX">X scale factor.</param>
            <param name="scaleY">Y scale factor.</param>
            <param name="cache">Cache that contains graphics objects.</param>
        </member>
        <member name="T:FastReport.Utils.FRReader">
            <summary>
            The reader used to deserialize object's properties from a report file.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRReader.Errors">
            <summary>
            Gets a string that contains errors occured during the load.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRReader.ItemName">
            <summary>
            Gets the current item name.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRReader.ReadChildren">
            <summary>
            Gets or sets a value indicating whther is necessary to read the object's children.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRReader.Root">
            <summary>
            Returns Root element for this reader
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRReader.DeserializeFrom">
            <summary>
            Gets or sets target of serialization.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRReader.Read(FastReport.IFRSerializable)">
            <summary>
            Reads the specified object.
            </summary>
            <param name="obj">The object to read.</param>
            <remarks>
            The object must implement the <see cref="T:FastReport.IFRSerializable"/> interface. This method
            invokes the <b>Deserialize</b> method of the object.
            </remarks>
            <example>This example demonstrates the use of <b>ReadProperties</b>, <b>ReadChildren</b>,
            <b>NextItem</b>, <b>Read</b> methods.
            <code>
            public void Deserialize(FRReader reader)
            {
              // read simple properties like "Text", complex properties like "Border.Lines"
              reader.ReadProperties(this);
            
              // moves the current reader item
              while (reader.NextItem())
              {
                // read the "Styles" collection
                if (String.Compare(reader.ItemName, "Styles", true) == 0)
                  reader.Read(Styles);
                else if (reader.ReadChildren)
                {
                  // if read of children is enabled, read them
                  Base obj = reader.Read();
                  if (obj != null)
                     obj.Parent = this;
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FRReader.Read">
            <summary>
            Reads an object from current xml node.
            </summary>
            <returns>The object.</returns>
            <remarks>
            This method creates an instance of object described by the current xml node, then invokes
            its <b>Deserialize</b> method.
            </remarks>
            <example>This example demonstrates the use of <b>ReadProperties</b>, <b>ReadChildren</b>,
            <b>NextItem</b>, <b>Read</b> methods.
            <code>
            public void Deserialize(FRReader reader)
            {
              // read simple properties like "Text", complex properties like "Border.Lines"
              reader.ReadProperties(this);
            
              // moves the current reader item
              while (reader.NextItem())
              {
                // read the "Styles" collection
                if (String.Compare(reader.ItemName, "Styles", true) == 0)
                  reader.Read(Styles);
                else if (reader.ReadChildren)
                {
                  // if read of children is enabled, read them
                  Base obj = reader.Read();
                  if (obj != null)
                     obj.Parent = this;
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadProperties(System.Object)">
            <summary>
            Reads properties of specified object.
            </summary>
            <param name="obj">The object to read.</param>
            <remarks>
            This method reads simple properties like "Text", "Border.Lines" etc. for specified object.
            To read nested properties like collections, you should override the <see cref="M:FastReport.Base.DeserializeSubItems(FastReport.Utils.FRReader)"/>
            method of an object.
            </remarks>
            <example>This example demonstrates the use of <b>ReadProperties</b>, <b>ReadChildren</b>,
            <b>NextItem</b>, <b>Read</b> methods.
            <code>
            public void Deserialize(FRReader reader)
            {
              // read simple properties like "Text", complex properties like "Border.Lines"
              reader.ReadProperties(this);
            
              // moves the current reader item
              while (reader.NextItem())
              {
                // read the "Styles" collection
                if (String.Compare(reader.ItemName, "Styles", true) == 0)
                  reader.Read(Styles);
                else if (reader.ReadChildren)
                {
                  // if read of children is enabled, read them
                  Base obj = reader.Read();
                  if (obj != null)
                     obj.Parent = this;
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FRReader.NextItem">
            <summary>
            Moves the current xml item.
            </summary>
            <returns><b>false</b> if there is no more items to move on; <b>true</b> otherwise.</returns>
            <remarks>
            This method is used to read child objects.
            </remarks>
            <example>This example demonstrates the use of <b>ReadProperties</b>, <b>ReadChildren</b>,
            <b>NextItem</b>, <b>Read</b> methods.
            <code>
            public void Deserialize(FRReader reader)
            {
              // read simple properties like "Text", complex properties like "Border.Lines"
              reader.ReadProperties(this);
            
              // moves the current reader item
              while (reader.NextItem())
              {
                // read the "Styles" collection
                if (String.Compare(reader.ItemName, "Styles", true) == 0)
                  reader.Read(Styles);
                else if (reader.ReadChildren)
                {
                  // if read of children is enabled, read them
                  Base obj = reader.Read();
                  if (obj != null)
                     obj.Parent = this;
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FRReader.HasProperty(System.String)">
            <summary>
            Checks if current item has specified property.
            </summary>
            <param name="name">The property name to check.</param>
            <returns><b>true</b> if current item has specified property.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadStr(System.String)">
            <summary>
            Reads the string property.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadBool(System.String)">
            <summary>
            Reads the boolean property.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadInt(System.String)">
            <summary>
            Reads the integer property.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadFloat(System.String)">
            <summary>
            Reads the float property.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadDouble(System.String)">
            <summary>
            Reads the double property.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadValue(System.String,System.Type)">
            <summary>
            Reads the enum property.
            </summary>
            <param name="name">Name of property.</param>
            <param name="typ">Type of property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.ReadPropertyValue">
            <summary>
            Reads the standalone property value.
            </summary>
            <returns>Property value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRReader.Dispose">
            <summary>
            Disposes the reader, fixups the property references.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRReader.Load(System.IO.Stream)">
            <summary>
            Loads the xml items from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
        </member>
        <member name="M:FastReport.Utils.FRReader.#ctor(FastReport.Report)">
            <summary>
            Initializes a new instance of the <b>FRReader</b> class with specified report.
            </summary>
            <param name="report">Reference to a report.</param>
        </member>
        <member name="M:FastReport.Utils.FRReader.#ctor(FastReport.Report,FastReport.Utils.XmlItem)">
            <summary>
            Initializes a new instance of the <b>FRReader</b> class with specified report and xml item with
            contents to read.
            </summary>
            <param name="report">Reference to a report.</param>
            <param name="root">Xml item with contents to read.</param>
        </member>
        <member name="T:FastReport.Utils.SerializeTo">
            <summary>
            Specifies the target for the serialize operation.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SerializeTo.Report">
            <summary>
            Serialize to the report file.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SerializeTo.Preview">
            <summary>
            Serialize to the preview pages.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SerializeTo.SourcePages">
            <summary>
            Serialize to the source pages of a preview.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SerializeTo.Clipboard">
            <summary>
            Serialize to the designer's clipboard.
            </summary>
        </member>
        <member name="F:FastReport.Utils.SerializeTo.Undo">
            <summary>
            Serialize to the designer's undo/redo buffer.
            </summary>
        </member>
        <member name="T:FastReport.Utils.FRWriter">
            <summary>
            The writer used to serialize object's properties to a report file.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRWriter.ItemName">
            <summary>
            Gets or sets current xml item name.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRWriter.SerializeTo">
            <summary>
            Gets or sets target of serialization.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRWriter.DiffObject">
            <summary>
            Gets the ethalon object to compare with.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRWriter.SaveChildren">
            <summary>
            Gets or sets a value that determines whether is necessary to serialize child objects.
            </summary>
        </member>
        <member name="P:FastReport.Utils.FRWriter.WriteHeader">
            <summary>
            Gets or sets a value that determines whether is necessary to add xml header.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRWriter.Write(FastReport.IFRSerializable)">
            <summary>
            Serializes the specified object.
            </summary>
            <param name="obj">The object to serialize.</param>
            <remarks>
            The object must implement the <see cref="T:FastReport.IFRSerializable"/> interface. This method
            invokes the <b>Serialize</b> method of the object.
            </remarks>
            <example>This example demonstrates the use of writer.
            <code>
            public void Serialize(FRWriter writer)
            {
              // get the etalon object. It will be used to write changed properties only.
              Base c = writer.DiffObject as Base;
            
              // write the type name
              writer.ItemName = ClassName;
            
              // write properties
              if (Name != "")
                writer.WriteStr("Name", Name);
              if (Restrictions != c.Restrictions)
                writer.WriteValue("Restrictions", Restrictions);
              
              // write child objects if allowed
              if (writer.SaveChildren)
              {
                foreach (Base child in ChildObjects)
                {
                  writer.Write(child);
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Utils.FRWriter.Write(FastReport.IFRSerializable,System.Object)">
            <summary>
            Serializes the object using specified etalon.
            </summary>
            <param name="obj">The object to serialize.</param>
            <param name="diff">The etalon object.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteStr(System.String,System.String)">
            <summary>
            Writes a string property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteBool(System.String,System.Boolean)">
            <summary>
            Writes a boolean property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteInt(System.String,System.Int32)">
            <summary>
            Writes an integer property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteFloat(System.String,System.Single)">
            <summary>
            Writes a float property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteDouble(System.String,System.Double)">
            <summary>
            Writes a double property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteValue(System.String,System.Object)">
            <summary>
            Writes an enumeration property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WriteRef(System.String,FastReport.Base)">
            <summary>
            Writes an object reference property.
            </summary>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.WritePropertyValue(System.String,System.String)">
            <summary>
            Writes a standalone property value.
            </summary>
            <param name="name">Name of property.</param>
            <param name="value">Property value.</param>
            <remarks>
            This method produces the following output:
            &lt;PropertyName&gt;PropertyValue&lt;/PropertyName&gt;
            </remarks>
        </member>
        <member name="M:FastReport.Utils.FRWriter.AreEqual(System.Object,System.Object)">
            <summary>
            Determines if two objects are equal.
            </summary>
            <param name="obj1">The first object.</param>
            <param name="obj2">The second object.</param>
            <returns><b>true</b> if objects will be serialized to the same value.</returns>
        </member>
        <member name="M:FastReport.Utils.FRWriter.Dispose">
            <summary>
            Disposes the writer.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRWriter.Save(System.IO.Stream)">
            <summary>
            Saves the writer output to a stream.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.Utils.FRWriter.#ctor">
            <summary>
            Initializes a new instance of the <b>FRWriter</b> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Utils.FRWriter.#ctor(FastReport.Utils.XmlItem)">
            <summary>
            Initializes a new instance of the <b>FRWriter</b> class with specified xml item that will 
            receive writer's output.
            </summary>
            <param name="root">The xml item that will receive writer's output.</param>
        </member>
        <member name="T:FastReport.Utils.IGraphicsRenderer">
            <summary>
            The interface for unifying methods for drawing objects into different graphics
            </summary>
        </member>
        <member name="M:FastReport.Utils.IGraphicsRenderer.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Single)">
            <summary>
            in this case if a baseline is needed, it will not be calculated
            </summary>
        </member>
        <member name="M:FastReport.Utils.IGraphicsRenderer.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Works with polygons only
            </summary>
            <param name="brush"></param>
            <param name="path"></param>
        </member>
        <member name="M:FastReport.Utils.IGraphicsRenderer.PathAddRectangle(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF)">
            <summary>
            Add rectangle to the graphics path
            </summary>
            <param name="path"></param>
            <param name="rect"></param>
        </member>
        <member name="T:FastReport.Utils.IGraphicsRendererState">
            <summary>
            the interface for saving and restoring state
            </summary>
        </member>
        <member name="T:FastReport.Utils.ImageGraphicsRenderer">
            <summary>
            Drawing objects to a standard image in Bitmap
            </summary>
        </member>
        <member name="M:FastReport.Utils.ImageGraphicsRenderer.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Single)">
            <summary>
            baseLine is ignored
            </summary>
        </member>
        <member name="T:FastReport.Utils.SVGGraphicsRenderer">
            <summary>
            Drawing objects to a svg string
            </summary>
        </member>
        <member name="P:FastReport.Utils.SVGGraphicsRenderer.Attributes">
            <summary>
            For setting namespace, clear all attributes on setting, therefore use this property before setting other svg options
            </summary>
        </member>
        <member name="M:FastReport.Utils.SVGGraphicsRenderer.#ctor(FastReport.Utils.XmlDocument)">
            <summary>
            Initialize a new Graphics for SVG, it's rendered to xml, layer by layer, not one image,
            set the Size of this graphics in Size property
            </summary>
        </member>
        <member name="M:FastReport.Utils.HtmlTextRenderer.BreakHtml(System.String,System.Int32,System.String@,System.Boolean@)">
            <summary>
            Returns splited string
            </summary>
            <param name="text">text for splitting</param>
            <param name="charactersFitted">index of first character of second string</param>
            <param name="result">second part of string</param>
            <param name="endOnEnter">returns true if ends on enter</param>
            <returns>first part of string</returns>
        </member>
        <member name="M:FastReport.Utils.HtmlTextRenderer.WrapLine(FastReport.Utils.HtmlTextRenderer.Paragraph,FastReport.Utils.HtmlTextRenderer.Line,System.Int32,System.Single,System.Single@)">
            <summary>
            Check the line, and if last word is able to move next line, move it.
            e.g. white space won't move to next line.
            If word is not moved return current line.
            else return new line
            </summary>
            <param name="paragraph">the paragraph for lines</param>
            <param name="line">the line with extra words</param>
            <param name="wordCharIndex">the index of start last word in this line</param>
            <param name="availableWidth">width to place words</param>
            <param name="newWidth">ref to current line width</param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.HtmlTextRenderer.BaseLine">
            <summary>
            Represents character placement.
            </summary>
        </member>
        <member name="P:FastReport.Utils.HtmlTextRenderer.SimpleFastReportHtmlElement.Style">
            <summary>
            Be care generates dictionary only one time
            </summary>
        </member>
        <member name="M:FastReport.Utils.HtmlTextRenderer.SimpleFastReportHtmlReader.Read">
            <summary>
            Return true if read char
            </summary>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.HtmlTextRenderer.StyleDescriptor">
            <summary>
            Represents a style used in HtmlTags mode. Color does not affect the equals function.
            </summary>
        </member>
        <member name="M:FastReport.Utils.HtmlTextRenderer.StyleDescriptor.FullEquals(FastReport.Utils.HtmlTextRenderer.StyleDescriptor)">
            <summary>
            returns true if objects realy equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Utils.MyRes">
            <summary>
            Used to access to resource IDs inside the specified branch.
            </summary>
            <remarks>
            Using the <see cref="M:FastReport.Utils.Res.Get(System.String)"/> method, you have to specify the full path to your resource.
            Using this class, you can shorten the path:
            <code>
            // using the Res.Get method
            miKeepTogether = new ToolStripMenuItem(Res.Get("ComponentMenu,HeaderBand,KeepTogether"));
            miResetPageNumber = new ToolStripMenuItem(Res.Get("ComponentMenu,HeaderBand,ResetPageNumber"));
            miRepeatOnEveryPage = new ToolStripMenuItem(Res.Get("ComponentMenu,HeaderBand,RepeatOnEveryPage"));
            
            // using MyRes.Get method
            MyRes res = new MyRes("ComponentMenu,HeaderBand");
            miKeepTogether = new ToolStripMenuItem(res.Get("KeepTogether"));
            miResetPageNumber = new ToolStripMenuItem(res.Get("ResetPageNumber"));
            miRepeatOnEveryPage = new ToolStripMenuItem(res.Get("RepeatOnEveryPage"));
            
            </code>
            </remarks>
        </member>
        <member name="M:FastReport.Utils.MyRes.Get(System.String)">
            <summary>
            Gets a string with specified ID inside the main branch.
            </summary>
            <param name="id">The resource ID.</param>
            <returns>The localized value.</returns>
        </member>
        <member name="M:FastReport.Utils.MyRes.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Utils.MyRes"/> class with spevified branch.
            </summary>
            <param name="category">The main resource branch.</param>
        </member>
        <member name="T:FastReport.Utils.SRCategory">
            <summary>
            Localized CategoryAttribute class.
            </summary>
        </member>
        <member name="M:FastReport.Utils.SRCategory.GetLocalizedString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Utils.SRCategory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SRCategory class.
            </summary>
            <param name="value">The category name.</param>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer">
            <summary>
            Advanced text renderer is used to perform the following tasks:
            - draw justified text, text with custom line height, text containing html tags;
            - calculate text height, get part of text that does not fit in the display rectangle;
            - get paragraphs, lines, words and char sequence to perform accurate export to such
            formats as PDF, TXT, RTF
            </summary>
            <example>Here is how one may operate the renderer items:
            <code>
            foreach (AdvancedTextRenderer.Paragraph paragraph in renderer.Paragraphs)
            {
              foreach (AdvancedTextRenderer.Line line in paragraph.Lines)
              {
                foreach (AdvancedTextRenderer.Word word in line.Words)
                {
                  if (renderer.HtmlTags)
                  {
                    foreach (AdvancedTextRenderer.Run run in word.Runs)
                    {
                      using (Font f = run.GetFont())
                      using (Brush b = run.GetBrush())
                      {
                        g.DrawString(run.Text, f, b, run.Left, run.Top, renderer.Format);
                      }  
                    }
                  }
                  else
                  {
                    g.DrawString(word.Text, renderer.Font, renderer.Brush, word.Left, word.Top, renderer.Format);
                  }
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="P:FastReport.Utils.AdvancedTextRenderer.FontScale">
            <summary>
            The scale for font tag
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.Paragraph">
            <summary>
            Paragraph represents single paragraph. It consists of one or several <see cref="P:FastReport.Utils.AdvancedTextRenderer.Paragraph.Lines"/>.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.Line">
            <summary>
            Line represents single text line. It consists of one or several <see cref="P:FastReport.Utils.AdvancedTextRenderer.Line.Words"/>.
            Simple line (that does not contain tabs, html tags, and is not justified) has
            single <see cref="T:FastReport.Utils.AdvancedTextRenderer.Word"/> which contains all the text.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.Word">
            <summary>
            Word represents single word. It may consist of one or several <see cref="P:FastReport.Utils.AdvancedTextRenderer.Word.Runs"/>, in case
            when HtmlTags are enabled in the main <see cref="T:FastReport.Utils.AdvancedTextRenderer"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.BaseLine">
            <summary>
            Represents character placement.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.StyleDescriptor">
            <summary>
            Represents a style used in HtmlTags mode.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.Run">
            <summary>
            Represents sequence of characters that have the same <see cref="P:FastReport.Utils.AdvancedTextRenderer.Run.Style"/>.
            </summary>
        </member>
        <member name="T:FastReport.Utils.AdvancedTextRenderer.RunImage">
            <summary>
            Represents inline Image.
            </summary>
        </member>
        <member name="T:FastReport.Utils.StandardTextRenderer">
            <summary>
            Standard text renderer uses standard DrawString method to draw text. It also supports:
            - text rotation;
            - fonts with non-standard width ratio.
            In case your text is justified, or contains html tags, use the <see cref="T:FastReport.Utils.AdvancedTextRenderer"/>
            class instead.
            </summary>
        </member>
        <member name="T:FastReport.Utils.InlineImageCache">
            <summary>
            Cache for rendering img tags in textobject.
            You can use only HTTP[s] protocol with absolute urls.
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.Serialized">
            <summary>
            Is serialized
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.Client">
            <summary>
            Get or set WebClient for downloading imgs by url
            </summary>
        </member>
        <member name="E:FastReport.Utils.InlineImageCache.AfterLoad">
            <summary>
            Occurs before image load
            </summary>
        </member>
        <member name="E:FastReport.Utils.InlineImageCache.BeforeLoad">
            <summary>
            Occurs after image load
            </summary>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.AllItems">
            <summary>
            Enumerates all values
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Get(System.String)">
            <summary>
            Return CacheItem by src
            </summary>
            <param name="src">Src attribute from img tag</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Load(System.String)">
             <summary>
            
             </summary>
             <param name="src"></param>
             <returns></returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Set(System.String,FastReport.Utils.InlineImageCache.CacheItem)">
            <summary>
            Set CacheItem by src
            </summary>
            <param name="src">Src attribute from img tag</param>
            <param name="item">CacheItem</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Validate(System.String)">
            <summary>
            Validate src attribute from image
            </summary>
            <param name="src">Src attribute from img tag</param>
            <returns>return true if src is valid</returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.Utils.InlineImageCache.CacheItem">
            <summary>
            Item of image cache Dictionary
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.CacheItem.Base64">
            <summary>
            Get Base64 string
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.CacheItem.Error">
            <summary>
            Return true if has some error with Image
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.CacheItem.Image">
            <summary>
            Get Image
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.CacheItem.Stream">
            <summary>
            Get byte array
            </summary>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.CacheItem.GetErrorImage">
            <summary>
            Return error image and set true to error property
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.CacheItem.Set(System.String)">
            <summary>
            Set value for cache item
            </summary>
            <param name="base64">Image encoded base64 string</param>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.CacheItem.Set(System.Drawing.Image)">
            <summary>
            Set value for cache item
            </summary>
            <param name="img">Image</param>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.CacheItem.Set(System.Byte[])">
            <summary>
            Set value for cache item
            </summary>
            <param name="arr">Image</param>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.CacheItem.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:FastReport.Utils.InlineImageCache.LoadEventArgs">
            <summary>
            WebClientEventArgs
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.LoadEventArgs.Cache">
            <summary>
            Gets a cache
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.LoadEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event was handled.
            </summary>
        </member>
        <member name="P:FastReport.Utils.InlineImageCache.LoadEventArgs.Source">
            <summary>
            Gets or sets a url from src attribue of img tag
            </summary>
        </member>
        <member name="M:FastReport.Utils.InlineImageCache.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:FastReport.Utils.PageUnits">
            <summary>
            The report page units.
            </summary>
        </member>
        <member name="F:FastReport.Utils.PageUnits.Millimeters">
            <summary>
            Specifies the units measured in millimeters.
            </summary>
        </member>
        <member name="F:FastReport.Utils.PageUnits.Centimeters">
            <summary>
            Specifies the units measured in centimeters.
            </summary>
        </member>
        <member name="F:FastReport.Utils.PageUnits.Inches">
            <summary>
            Specifies the units measured in inches.
            </summary>
        </member>
        <member name="F:FastReport.Utils.PageUnits.HundrethsOfInch">
            <summary>
            Specifies the units measured in hundreths of inch.
            </summary>
        </member>
        <member name="T:FastReport.Utils.Units">
            <summary>
            Defines the constants used to convert between report units and screen pixels.
            </summary>
            <remarks>
            To convert pixels to millimeters, use the following code:
            <code>valueInMillimeters = valueInPixels / Units.Millimeters;</code>
            To convert millimeters to pixels, use the following code:
            <code>valueInPixels = valueInMillimeters * Units.Millimeters;</code>
            </remarks>
        </member>
        <member name="F:FastReport.Utils.Units.Millimeters">
            <summary>
            The number of pixels in one millimeter.
            </summary>
        </member>
        <member name="F:FastReport.Utils.Units.Centimeters">
            <summary>
            The number of pixels in one centimeter.
            </summary>
        </member>
        <member name="F:FastReport.Utils.Units.Inches">
            <summary>
            The number of pixels in one inch.
            </summary>
        </member>
        <member name="F:FastReport.Utils.Units.TenthsOfInch">
            <summary>
            The number of pixels in 1/10 of ich.
            </summary>
        </member>
        <member name="F:FastReport.Utils.Units.HundrethsOfInch">
            <summary>
            The number of pixels in 1/100 of inch.
            </summary>
        </member>
        <member name="T:FastReport.Utils.XmlProperty">
            <summary>
            Represents a xml property.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlProperty.Key">
            <summary>
            Represents a property key.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlProperty.Value">
            <summary>
            Represents a property value.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlProperty.Create(System.String,System.String)">
            <summary>
            Creates new property and assigns value
            </summary>
            <param name="key">Property key</param>
            <param name="value">Property value</param>
        </member>
        <member name="T:FastReport.Utils.XmlItem">
            <summary>
            Represents a xml node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Count">
            <summary>
            Gets a number of children in this node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Items">
            <summary>
            Gets a list of children in this node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Item(System.Int32)">
            <summary>
            Gets a child node with specified index.
            </summary>
            <param name="index">Index of node.</param>
            <returns>The node with specified index.</returns>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Name">
            <summary>
            Gets or sets the node name.
            </summary>
            <remarks>
            This property will return "Node" for a node like <c>&lt;Node Text="" Left="0"/&gt;</c>
            </remarks>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Properties">
            <summary>
            Gets or sets a list of properties in this node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Parent">
            <summary>
            Gets or sets the parent for this node.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Value">
            <summary>
            Gets or sets the node value.
            </summary>
            <remarks>
            This property will return "ABC" for a node like <c>&lt;Node&gt;ABC&lt;/Node&gt;</c>
            </remarks>
        </member>
        <member name="P:FastReport.Utils.XmlItem.Root">
            <summary>
            Gets the root node which owns this node.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlItem.Clear">
            <summary>
            Clears the child nodes of this node.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlItem.Add">
            <summary>
            Adds a new child node to this node.
            </summary>
            <returns>The new child node.</returns>
        </member>
        <member name="M:FastReport.Utils.XmlItem.AddItem(FastReport.Utils.XmlItem)">
            <summary>
            Adds a specified node to this node.
            </summary>
            <param name="item">The node to add.</param>
        </member>
        <member name="M:FastReport.Utils.XmlItem.InsertItem(System.Int32,FastReport.Utils.XmlItem)">
            <summary>
            Inserts a specified node to this node.
            </summary>
            <param name="index">Position to insert.</param>
            <param name="item">Node to insert.</param>
        </member>
        <member name="M:FastReport.Utils.XmlItem.Find(System.String)">
            <summary>
            Finds the node with specified name.
            </summary>
            <param name="name">The name of node to find.</param>
            <returns>The node with specified name, if found; <b>null</b> otherwise.</returns>
        </member>
        <member name="M:FastReport.Utils.XmlItem.FindItem(System.String)">
            <summary>
            Finds the node with specified name.
            </summary>
            <param name="name">The name of node to find.</param>
            <returns>The node with specified name, if found; the new node otherwise.</returns>
            <remarks>
            This method adds the node with specified name to the child nodes if it cannot find the node.
            Do not dispose items, which has been created by this method
            </remarks>
        </member>
        <member name="M:FastReport.Utils.XmlItem.IndexOf(FastReport.Utils.XmlItem)">
            <summary>
            Gets the index of specified node in the child nodes list.
            </summary>
            <param name="item">The node to find.</param>
            <returns>Zero-based index of node, if found; <b>-1</b> otherwise.</returns>
        </member>
        <member name="M:FastReport.Utils.XmlItem.GetProp(System.String)">
            <summary>
            Gets a property with specified name.
            </summary>
            <param name="key">The property name.</param>
            <returns>The value of property, if found; empty string otherwise.</returns>
            <remarks>
            This property will return "0" when you request the "Left" property for a node 
            like <c>&lt;Node Text="" Left="0"/&gt;</c>
            </remarks>
        </member>
        <member name="M:FastReport.Utils.XmlItem.ClearProps">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlItem.SetProp(System.String,System.String)">
            <summary>
            Sets the value for a specified property.
            </summary>
            <param name="key">The property name.</param>
            <param name="value">Value to set.</param>
            <remarks>
            For example, you have a node like <c>&lt;Node Text="" Left="0"/&gt;</c>. When you set the
            "Text" property to "test", the node will be <c>&lt;Node Text="test" Left="0"/&gt;</c>.
            If property with specified name is not exist, it will be added.
            </remarks>
        </member>
        <member name="M:FastReport.Utils.XmlItem.RemoveProp(System.String)">
            <summary>
            Removes a property with specified name.
            </summary>
            <param name="key">The property name.</param>
            <returns>Returns true if property is removed, false otherwise.</returns>
        </member>
        <member name="M:FastReport.Utils.XmlItem.Dispose">
            <summary>
            Disposes the node and all its children.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlItem.#ctor">
            <summary>
            Initializes a new instance of the <b>XmlItem</b> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Utils.XmlDocument">
            <summary>
            Represents a xml document that contains the root xml node.
            </summary>
            <remarks>
            Use <b>Load</b> and <b>Save</b> methods to load/save the document. To access the root node
            of the document, use the <see cref="P:FastReport.Utils.XmlDocument.Root"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Utils.XmlDocument.AutoIndent">
            <summary>
            Gets or sets a value indicating whether is necessary to indent the document
            when saving it to a file/stream.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlDocument.WriteHeader">
            <summary>
            Gets or sets a value indicating whether is necessary to add xml header.
            </summary>
        </member>
        <member name="P:FastReport.Utils.XmlDocument.Root">
            <summary>
            Gets the root node of the document.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Clear">
            <summary>
            Clears the document.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Save(System.IO.Stream)">
            <summary>
            Saves the document to a stream.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Save(System.IO.TextWriter)">
            <summary>
            Saves the document to a string.
            </summary>
            <param name="textWriter">Writer to save to.</param>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Load(System.IO.Stream)">
            <summary>
            Loads the document from a stream.
            </summary>
            <param name="stream">Stream to load from.</param>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Save(System.String)">
            <summary>
            Saves the document to a file.
            </summary>
            <param name="fileName">The name of file to save to.</param>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Load(System.String)">
            <summary>
            Loads the document from a file.
            </summary>
            <param name="fileName">The name of file to load from.</param>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.Dispose">
            <summary>
            Disposes resources used by the document.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.#ctor">
            <summary>
            Initializes a new instance of the <b>XmlDocument</b> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Utils.XmlDocument.ToString">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Utils.ZipArchive">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.Clear">
            <summary>
            Clear all files in archive.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.FileExists(System.String)">
            <summary>
            Check for exisiting file in archive.
            </summary>
            <param name="FileName"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.AddFile(System.String)">
            <summary>
            Adds the file form disk to the archive.
            </summary>
            <param name="FileName"></param>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.AddDir(System.String)">
            <summary>
            Adds all files from directory (recursive) on the disk to the archive.
            </summary>
            <param name="DirName"></param>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.AddStream(System.String,System.IO.Stream)">
            <summary>
            Adds the stream to the archive.
            </summary>
            <param name="fileName"></param>
            <param name="stream"></param>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.SaveToStream(System.IO.Stream)">
            <summary>
            Creates the zip and writes it to rhe Stream
            </summary>
            <param name="Stream"></param>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.SaveToFile(System.String)">
            <summary>
            Creates the ZIP archive and writes it to the file.
            </summary>
            <param name="FileName"></param>
        </member>
        <member name="P:FastReport.Utils.ZipArchive.RootFolder">
            <summary>
            Gets or sets the Root Folder.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ZipArchive.Errors">
            <summary>
            Gets or sets the errors.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ZipArchive.Comment">
            <summary>
            Gets or sets the commentary to the archive.
            </summary>
        </member>
        <member name="P:FastReport.Utils.ZipArchive.FileCount">
            <summary>
            Gets count of files in archive.
            </summary>
        </member>
        <member name="M:FastReport.Utils.ZipArchive.#ctor">
            <summary>
            Creates the new zip archive.
            </summary>
        </member>
        <member name="T:FastReport.Utils.CompileHelper">
            <summary>
            Class helper for compile source code with path of assemblies 
            </summary>
        </member>
        <member name="M:FastReport.Utils.CompileHelper.GenerateAssemblyInMemory(System.String,System.String[])">
            <summary>
            Generate a assembly in memory with some source code and several path for additional assemblies
            </summary>
            <param name="sourceCode"></param>
            <param name="assemblyPaths"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Data.JsonConnection.JsonDataSourceConnection">
            <summary>
            FastReport json connection
            </summary>
        </member>
        <member name="F:FastReport.Data.JsonConnection.JsonDataSourceConnection.TABLE_NAME">
            <summary>
            Name of json object table
            </summary>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.#ctor">
            <summary>
            Initialize a new instance
            </summary>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.CreateAllTables(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.CreateRelations">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.CreateTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.DeleteTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.GetTableNames">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.CreateDataSet">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.SetConnectionString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.GetConnectionId">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.GetEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnection.TestConnection">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder">
            <summary>
            Represents the JsonDataConnection connection string builder.
            </summary>
            <remarks>
            Use this class to parse connection string returned by the <b>JsonDataConnection</b> class.
            </remarks>
        </member>
        <member name="P:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder.Json">
            <summary>
            Gets or sets json data
            </summary>
        </member>
        <member name="P:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder.JsonSchema">
            <summary>
            Gets or sets json schema
            </summary>
        </member>
        <member name="P:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder.Encoding">
            <summary>
            Gets or sets json url encoding
            </summary>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.JsonConnection.JsonDataSourceConnectionStringBuilder"/> class with
            specified connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="T:FastReport.Data.JsonConnection.JsonTableDataSource">
            <summary>
            JsonTableDataSource present a json array object
            </summary>
        </member>
        <member name="P:FastReport.Data.JsonConnection.JsonTableDataSource.UpdateSchema">
            <summary>
            Gets or sets value for force update schema on init schema
            </summary>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.InitSchema">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.LoadData(System.Collections.ArrayList)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.GetValue(FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.JsonConnection.JsonTableDataSource.GetValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.Column">
            <summary>
            This class represents a single data column in a <see cref="T:FastReport.Data.DataSourceBase"/>.
            </summary>
        </member>
        <member name="M:FastReport.Data.Column.Delete">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Data.Column.PropName">
            <summary>
            Gets or sets the business object property name which this column is bound to.
            </summary>
        </member>
        <member name="P:FastReport.Data.Column.PropDescriptor">
            <summary>
            Gets or sets the business object property descriptor which this column is bound to.
            </summary>
        </member>
        <member name="P:FastReport.Data.Column.DataType">
            <summary>
            Gets or sets the type of data supplied by this column.
            </summary>
        </member>
        <member name="P:FastReport.Data.Column.BindableControl">
            <summary>
            Gets or sets a value that specifies the type of a control that will be created 
            when you drop this column on a report page.
            </summary>
            <remarks>
            If you need to specify the custom type, use the <see cref="P:FastReport.Data.Column.CustomBindableControl"/> property instead.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Column.CustomBindableControl">
            <summary>
            Gets or sets a name of custom bindable control.
            </summary>
            <remarks>
            Use this property if you want to bind a column to custom object type. You need to 
            specify the type name of your object; that object must be registered in FastReport using the
            <b>RegisteredObjects.Add</b> method.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Column.Format">
            <summary>
            Gets or sets the format of this column.
            </summary>
            <remarks>
            This property is used when you drag a column from the Data window to the report page.
            FastReport will create a "Text" object and set its "Format" property to the corresponding format.
            By default, this property is set to <b>Auto</b>. It means that the format will be determined 
            automatically depending on the <see cref="P:FastReport.Data.Column.DataType"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Column.Expression">
            <summary>
            Gets or sets expression of the calculated column.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.Data.Column.Calculated"/> property is <b>true</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Column.Calculated">
            <summary>
            Gets or sets a value that indicates whether this column is calculated.
            </summary>
            <remarks>
            You should specify the <see cref="P:FastReport.Data.Column.Expression"/> property for calculated columns.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Column.Columns">
            <summary>
            Gets the collection of child columns.
            </summary>
        </member>
        <member name="P:FastReport.Data.Column.Tag">
            <summary>
            Gets or sets the tag value.
            </summary>
        </member>
        <member name="M:FastReport.Data.Column.SetName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Column.#ctor">
            <summary>
            Initializes a new instance of the <b>Column</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Data.ConnectionEditors.JsonDataSourceConnectionEditor">
             <summary>
            
             </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.JsonDataSourceConnectionEditor.#ctor">
            <summary>
            Initialize a new instance
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.JsonDataSourceConnectionEditor.GetConnectionString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.JsonDataSourceConnectionEditor.SetConnectionString(System.String)">
             <summary>
            
             </summary>
             <param name="value"></param>
        </member>
        <member name="F:FastReport.Data.ConnectionEditors.JsonDataSourceConnectionEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.JsonDataSourceConnectionEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.JsonDataSourceConnectionEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Data.ConnectionEditors.CsvConnectionEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.CsvConnectionEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.CsvConnectionEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Data.ConnectionEditors.OdbcConnectionEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.OdbcConnectionEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.OdbcConnectionEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Data.ConnectionEditors.ConnectionEditorBase">
            <summary>
            The base class for all connection editors. This control is used when you edit
            the connection in the Data Wizard.
            </summary>
        </member>
        <member name="P:FastReport.Data.ConnectionEditors.ConnectionEditorBase.ConnectionString">
            <summary>
            Gets or sets a connection string.
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.ConnectionEditorBase.GetConnectionString">
            <summary>
            This method should construct the connection string from values entered by user.
            </summary>
            <returns>The connection string.</returns>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.ConnectionEditorBase.SetConnectionString(System.String)">
            <summary>
            This method should parse the connection string and fill the user interface elements.
            </summary>
            <param name="value">The connection string.</param>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.ConnectionEditorBase.UpdateLayout">
            <summary>
            This method is called when form layout is complete.
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.ConnectionEditorBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.ConnectionEditors.ConnectionEditorBase"/> class with default settings.
            </summary>
        </member>
        <member name="F:FastReport.Data.ConnectionEditors.ConnectionEditorBase.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.ConnectionEditorBase.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.ConnectionEditorBase.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Data.ConnectionEditors.MsAccessConnectionEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.MsAccessConnectionEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.MsAccessConnectionEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Data.ConnectionEditors.MsSqlConnectionEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.MsSqlConnectionEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.MsSqlConnectionEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Data.ConnectionEditors.OleDbConnectionEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.OleDbConnectionEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.OleDbConnectionEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Data.ConnectionEditors.XmlConnectionEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.XmlConnectionEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Data.ConnectionEditors.XmlConnectionEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Data.XmlDataConnection">
            <summary>
            Represents a connection to xml file-based database.
            </summary>
            <example>This example shows how to add a new connection to the report.
            <code>
            Report report1;
            XmlDataConnection conn = new XmlDataConnection();
            conn.XmlFile = @"c:\data.xml";
            report1.Dictionary.Connections.Add(conn);
            conn.CreateAllTables();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.GetEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.GetConnectionId">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.GetTableNames">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.TestConnection">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Data.XmlDataConnection.XsdFile">
            <summary>
            Gets or sets the path to .xsd file.
            </summary>
        </member>
        <member name="P:FastReport.Data.XmlDataConnection.XmlFile">
            <summary>
            Gets or sets the path to .xml file.
            </summary>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.CreateDataSet">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.SetConnectionString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.CreateTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.DeleteTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.XmlDataConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.XmlDataConnection"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.Total">
            <summary>
            Represents a total that is used to calculate aggregates such as Sum, Min, Max, Avg, Count.
            </summary>
        </member>
        <member name="M:FastReport.Data.Total.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Data.Total.TotalType">
            <summary>
            Gets or sets the total type.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.Expression">
            <summary>
            Gets or sets the expression used to calculate the total.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.Evaluator">
            <summary>
            Gets or sets the evaluator databand.
            </summary>
            <remarks>
            The total will be calculated for each row of this band.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Total.Resetter">
            <summary>
            This property is kept for compatibility only.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.PrintOn">
            <summary>
            Gets or sets the band to print the total on.
            </summary>
            <remarks>
            The total will be resetted after the specified band has been printed.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Total.ResetAfterPrint">
            <summary>
            Gets or sets a value that determines whether the total should be resetted after print.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.ResetOnReprint">
            <summary>
            Gets or sets a value that determines whether the total should be resetted if printed 
            on repeated band (i.e. band with "RepeatOnEveryPage" flag).
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.EvaluateCondition">
            <summary>
            Gets or sets the condition which tells the total to evaluate.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.IncludeInvisibleRows">
            <summary>
            Gets or sets a value that determines if invisible rows of the <b>Evaluator</b> should
            be included into the total's value.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.Total.Value">
            <summary>
            Gets the value of total.
            </summary>
        </member>
        <member name="M:FastReport.Data.Total.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Total.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Total.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Total.Clear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Total.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.Total"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.TableDataSource">
            <summary>
            Represents a datasource based on <b>DataTable</b> class.
            </summary>
            <example>This example shows how to add a new table to the existing connection:
            <code>
            Report report1;
            DataConnectionBase conn = report1.Dictionary.Connections.FindByName("Connection1");
            TableDataSource table = new TableDataSource();
            table.TableName = "Employees";
            table.Name = "Table1";
            conn.Tables.Add(table);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.TableDataSource.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Data.TableDataSource.Table">
            <summary>
            Gets or sets the underlying <b>DataTable</b> object.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableDataSource.TableName">
            <summary>
            Gets or sets the table name.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableDataSource.SelectCommand">
            <summary>
            Gets or sets SQL "select" command.
            </summary>
            <remarks>
            If this command contains parameters, you should specify them in the <see cref="P:FastReport.Data.TableDataSource.Parameters"/>
            property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.TableDataSource.Parameters">
            <summary>
            Gets a collection of parameters used by "select" command.
            </summary>
            <remarks>
            You must set up this property if the SQL query that you've specified in the 
            <see cref="P:FastReport.Data.TableDataSource.SelectCommand"/> property contains parameters.
            <para/>You can pass a value to the SQL parameter in two ways.
            <para/>The right way is to define a report parameter. You can do this in the 
            "Data" window. Once you have defined the parameter, you can use it to pass a value 
            to the SQL parameter. To do this, set the SQL parameter's <b>Expression</b> property
            to the report parameter's name (so it will look like [myReportParam]).
            To pass a value to the report parameter from your application, use the 
            <see cref="M:FastReport.Report.SetParameterValue(System.String,System.Object)"/> method.
            <para/>The other way (unrecommended) is to find a datasource object and set its parameter from a code:
            <code>
            TableDataSource ds = report.GetDataSource("My DataSource Name") as TableDataSource;
            ds.Parameters[0].Value = 10;
            </code>
            This way is not good because you hardcode the report object's name.
            </remarks>
        </member>
        <member name="P:FastReport.Data.TableDataSource.Connection">
            <summary>
            Gets or sets the parent <see cref="T:FastReport.Data.DataConnectionBase"/> object.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableDataSource.StoreData">
            <summary>
            Gets or sets a value that determines whether it is necessary to store table data in a report file.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableDataSource.TableData">
            <summary>
            Gets or sets the table data.
            </summary>
            <remarks>
            This property is for internal use only.
            </remarks>
        </member>
        <member name="P:FastReport.Data.TableDataSource.IgnoreConnection">
            <summary>
            If set, ignores the Connection (always returns null). Needed when we replace the
            existing connection-based datasource with datatable defined in an application.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableDataSource.QbSchema">
            <summary>
            Gets or sets the query builder schema.
            </summary>
            <remarks>
            This property is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.TableDataSource.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.GetValue(FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.InitSchema">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.LoadData(System.Collections.ArrayList)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.RefreshTable">
            <summary>
            Refresh the table schema.
            </summary>
        </member>
        <member name="M:FastReport.Data.TableDataSource.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.SetParent(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.TableDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.TableDataSource"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.Relation">
            <summary>
            Represents a master-detail relation between two data sources.
            </summary>
            <remarks>
            To setup a relation, you must specify parent and child datasources. For a parent datasource,
            you must specify set of key columns; for child datasource, you must specify set of columns that
            relate to the parent key columns.
            <example>This example shows how to create relation between Customers and Orders tables:
            <code>
            Report report1;
            DataSourceBase customersTable = report1.Dictionary.DataSources.FindByAlias("Customers");
            DataSourceBase ordersTable = report1.Dictionary.DataSources.FindByAlias("Orders");
            Relation rel = new Relation();
            rel.Name = "customersOrders";
            rel.ParentDataSource = customersTable;
            rel.ChildDataSource = ordersTable;
            rel.ParentColumns = new string[] { "CustomerID" };
            rel.ChildColumns = new string[] { "CustomerID" };
            report1.Dictionary.Relations.Add(rel);
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:FastReport.Data.Relation.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Data.Relation.ParentDataSource">
            <summary>
            Gets or sets the parent datasource.
            </summary>
        </member>
        <member name="P:FastReport.Data.Relation.ChildDataSource">
            <summary>
            Gets or sets the child datasource.
            </summary>
        </member>
        <member name="P:FastReport.Data.Relation.ParentColumns">
            <summary>
            Gets or sets an array of parent datasource columns.
            </summary>
            <remarks>
            Note: both <see cref="P:FastReport.Data.Relation.ParentColumns"/> and <see cref="P:FastReport.Data.Relation.ChildColumns"/> must have the
            same number of elements.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Relation.ChildColumns">
            <summary>
            Gets or sets an array of child datasource columns.
            </summary>
            <remarks>
            Note: both <see cref="P:FastReport.Data.Relation.ParentColumns"/> and <see cref="P:FastReport.Data.Relation.ChildColumns"/> must have the
            same number of elements.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Relation.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Relation.Equals(FastReport.Data.Relation)">
            <summary>
            Compares this relation with another one.
            </summary>
            <param name="rel">Another relation to compare with.</param>
            <returns><b>true</b> if both relations are equal; <b>false</b> otherwise.</returns>
        </member>
        <member name="M:FastReport.Data.Relation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.Relation"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.OleDbDataConnection">
            <summary>
            Represents a connection to any OLE DB database.
            </summary>
            <example>This example shows how to add a new connection to the report.
            <code>
            Report report1;
            OleDbDataConnection conn = new OleDbDataConnection();
            conn.ConnectionString = "your_connection_string";
            report1.Dictionary.Connections.Add(conn);
            conn.CreateAllTables();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.OleDbDataConnection.GetTableNames">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OleDbDataConnection.GetDefaultParameterType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OleDbDataConnection.GetEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OleDbDataConnection.GetConnectionId">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OleDbDataConnection.GetConnectionStringWithLoginInfo(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OleDbDataConnection.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OleDbDataConnection.GetConnectionType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OleDbDataConnection.GetAdapter(System.String,System.Data.Common.DbConnection,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OleDbDataConnection.GetParameterType">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.OdbcDataConnection">
            <summary>
            Represents a connection to any database through ODBC.
            </summary>
            <example>This example shows how to add a new connection to the report.
            <code>
            Report report1;
            OdbcDataConnection conn = new OdbcDataConnection();
            conn.ConnectionString = "your_connection_string";
            report1.Dictionary.Connections.Add(conn);
            conn.CreateAllTables();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.OdbcDataConnection.GetTableNames">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OdbcDataConnection.GetDefaultParameterType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OdbcDataConnection.GetEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OdbcDataConnection.GetConnectionId">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OdbcDataConnection.GetConnectionStringWithLoginInfo(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OdbcDataConnection.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OdbcDataConnection.GetConnectionType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OdbcDataConnection.GetAdapter(System.String,System.Data.Common.DbConnection,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.OdbcDataConnection.GetParameterType">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.MsSqlDataConnection">
            <summary>
            Represents a connection to MS SQL database.
            </summary>
            <example>This example shows how to add a new connection to the report.
            <code>
            Report report1;
            MsSqlDataConnection conn = new MsSqlDataConnection();
            conn.ConnectionString = "your_connection_string";
            report1.Dictionary.Connections.Add(conn);
            conn.CreateAllTables();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.MsSqlDataConnection.GetDefaultParameterType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsSqlDataConnection.GetEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsSqlDataConnection.GetConnectionId">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsSqlDataConnection.GetConnectionStringWithLoginInfo(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsSqlDataConnection.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsSqlDataConnection.GetConnectionType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsSqlDataConnection.GetAdapter(System.String,System.Data.Common.DbConnection,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsSqlDataConnection.GetParameterType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsSqlDataConnection.GetTableNames">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.MsAccessDataConnection">
            <summary>
            Represents a connection to MS Access database (.mdb file).
            </summary>
            <example>This example shows how to add a new connection to the report.
            <code>
            Report report1;
            MsAccessDataConnection conn = new MsAccessDataConnection();
            conn.DataSource = @"c:\data.mdb";
            report1.Dictionary.Connections.Add(conn);
            conn.CreateAllTables();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.MsAccessDataConnection.GetEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsAccessDataConnection.GetConnectionId">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Data.MsAccessDataConnection.DataSource">
            <summary>
            Gets or sets the datasource file name.
            </summary>
        </member>
        <member name="P:FastReport.Data.MsAccessDataConnection.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:FastReport.Data.MsAccessDataConnection.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="M:FastReport.Data.MsAccessDataConnection.SetConnectionString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsAccessDataConnection.GetConnectionStringWithLoginInfo(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsAccessDataConnection.GetConnectionType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsAccessDataConnection.GetAdapter(System.String,System.Data.Common.DbConnection,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsAccessDataConnection.GetParameterType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsAccessDataConnection.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.MsAccessDataConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.MsAccessDataConnection"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.DataConnectionBase">
            <summary>
            The base class for all data connection components such as <see cref="T:FastReport.Data.MsSqlDataConnection"/>.
            </summary>
            <example>This example shows how to add a new MS Access connection to the report.
            <code>
            Report report1;
            MsAccessDataConnection conn = new MsAccessDataConnection();
            conn.DataSource = @"c:\data.mdb";
            report1.Dictionary.Connections.Add(conn);
            conn.CreateAllTables();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.Delete">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetConnectionId">
            <summary>
            Gets a string that will identify a connection in the Data Wizard.
            </summary>
            <returns>The string that contains the connection type and some meaningful information.</returns>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetDefaultParameterType">
            <summary>
            Gets the default type for a new parameter.
            </summary>
            <returns>The integer representation of a parameter type.</returns>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetEditor">
            <summary>
            Gets a control that will be used to edit the connection properties.
            </summary>
            <returns>The editor's control.</returns>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.TestConnection">
            <summary>
            Tests the connection.
            </summary>
            <remarks>
            If test connection is not successful, this method throws an exception. Catch this exception to
            show an error message.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.DataSet">
            <summary>
            Gets an internal <b>DataSet</b> object that contains all data tables.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.Tables">
            <summary>
            Gets a collection of data tables in this connection.
            </summary>
            <remarks>
            To add a table to the connection, you must either create a new TableDataSource and add it
            to this collection or call the <see cref="M:FastReport.Data.DataConnectionBase.CreateAllTables"/> method which will add
            all tables available in the database.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.ConnectionString">
            <summary>
            Gets or sets a connection string that contains all connection parameters.
            </summary>
            <remarks>
            <para>To modify some parameter of the connection, use respective 
            <b>ConnectionStringBuilder</b> class.</para>
            <para><b>Security note:</b> the connection string may contain a user name/password. 
            This information is stored in a report file. By default, it is crypted using the standard
            FastReport's password. Since FastReport's source code is available to anyone who paid for it,
            it may be insecure to use the standard password. For more security, you should use own
            password. To do this, specify it in the <b>Crypter.DefaultPassword</b> property.</para>
            </remarks>
            <example>This example demonstrates how to change a connection string:
            <code>
            OleDbConnectionStringBuilder builder = new OleDbConnectionStringBuilder(oleDbConnection1.ConnectionString);
            builder.PersistSecurityInfo = false;
            oleDbConnection1.ConnectionString = builder.ToString();
            </code>
            </example>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.ConnectionStringExpression">
            <summary>
            Gets or sets an expression that returns a connection string.
            </summary>
            <remarks>
            Use this property to set the connection string dynamically. 
            <para/>The recommended way to do this is to define a report parameter. You can do this in the 
            "Data" window. Once you have defined the parameter, you can use it to pass a value 
            to the connection. Set the <b>ConnectionStringExpression</b> property of the
            connection object to the report parameter's name (so it will look like [myReportParam]).
            To pass a value to the report parameter from your application, use the 
            <see cref="M:FastReport.Report.SetParameterValue(System.String,System.Object)"/> method.
            <note type="caution">
            Once you set value for this property, the <see cref="P:FastReport.Data.DataConnectionBase.ConnectionString"/> property will be ignored 
            when report is run.
            </note>
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.IsSqlBased">
            <summary>
            Gets or sets a value indicates if this connection is SQL-based.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.LoginPrompt">
            <summary>
            Gets or sets a value indicating whether a login dialog appears immediately before opening a connection.
            </summary>
            <remarks>
            Set <b>LoginPrompt</b> to <b>true</b> to provide login dialog when establishing a connection. If this
            property is <b>false</b> (by default), you should provide login information (user name and password)
            in the <see cref="P:FastReport.Data.DataConnectionBase.ConnectionString"/> property. Though that property is stored in a crypted form,
            this may be insecure. 
            <para/>Another way to pass login information to the connection is to use
            <see cref="P:FastReport.Data.DataConnectionBase.ConnectionStringExpression"/> property that is bound to the report parameter. In that
            case you supply the entire connection string from your application.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataConnectionBase.CommandTimeout">
            <summary>
            Gets or sets the command timeout, in seconds.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CreateDataSet">
            <summary>
            Initializes a <b>DataSet</b> instance.
            </summary>
            <returns>The <b>DataSet</b> object.</returns>
            <remarks>
            This method is used to support FastReport infrastructure. You don't need to use it.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.DisposeDataSet">
            <summary>
            Disposes a <b>DataSet</b>.
            </summary>
            <remarks>
            This method is used to support FastReport infrastructure. You don't need to use it.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.SetConnectionString(System.String)">
            <summary>
            Sets the connection string.
            </summary>
            <param name="value">New connection string.</param>
            <remarks>
            Use this method if you need to perform some actions when the connection string is set.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetConnectionStringWithLoginInfo(System.String,System.String)">
            <summary>
            Gets a connection string that contains username and password specified.
            </summary>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <remarks>
            Override this method to pass login information to the connection. Typical implementation
            must get the existing <see cref="P:FastReport.Data.DataConnectionBase.ConnectionString"/>, merge specified login information into it
            and return the new value.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CreateAllTables">
            <summary>
            Fills the <see cref="P:FastReport.Data.DataConnectionBase.Tables"/> collection with all tables available in the database.
            </summary>
            <remarks>
            This method does not read the table data; to do this, call the 
            <see cref="M:FastReport.Data.TableDataSource.LoadData(System.Collections.ArrayList)"/> method of each table.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CreateAllTables(System.Boolean)">
            <summary>
            Fills the <see cref="P:FastReport.Data.DataConnectionBase.Tables"/> collection with all tables available in the database.
            </summary>
            <param name="initSchema">Set to <b>true</b> to initialize each table's schema.</param>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CreateRelations">
            <summary>
            Creates the relations between tables. Applies to XmlDataConnection only.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetTableNames">
            <summary>
            Gets an array of table names available in the database.
            </summary>
            <returns>An array of strings.</returns>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetConnectionType">
            <summary>
            Returns a type of connection.
            </summary>
            <returns><b>Type</b> instance.</returns>
            <remarks>
            You should override this method if you developing a new connection component.
            <para/>If your connection component does not use data connection, you need to override 
            the <see cref="M:FastReport.Data.DataConnectionBase.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)"/> and <see cref="M:FastReport.Data.DataConnectionBase.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)"/> methods instead.
            </remarks>
            <example>Here is the example of this method implementation:
            <code>
            public override Type GetConnectionType()
            {
              return typeof(OleDbConnection);
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetConnection">
            <summary>
            Returns a connection object.
            </summary>
            <returns>The <b>DbConnection</b> instance.</returns>
            <remarks>Either creates a new <b>DbConnection</b> instance of type provided by the
            <see cref="M:FastReport.Data.DataConnectionBase.GetConnectionType"/> method, or returns the application connection if set
            in the Config.DesignerSettings.ApplicationConnection.</remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.OpenConnection(System.Data.Common.DbConnection)">
            <summary>
            Opens a specified connection object.
            </summary>
            <param name="connection">Connection to open.</param>
            <remarks>
            Use this method to open a connection returned by the <see cref="M:FastReport.Data.DataConnectionBase.GetConnection"/> method.
            <para/>This method displays a login dialog if your connection has the <see cref="P:FastReport.Data.DataConnectionBase.LoginPrompt"/>
            property set to <b>true</b>. Once you have entered an user name and password in
            this dialog, it will remeber the entered values and will not used anymore in this report session.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.DisposeConnection(System.Data.Common.DbConnection)">
            <summary>
            Disposes a connection.
            </summary>
            <param name="connection">The connection to dispose.</param>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetAdapter(System.String,System.Data.Common.DbConnection,FastReport.Data.CommandParameterCollection)">
            <summary>
            Returns a <see cref="T:System.Data.Common.DbDataAdapter"/> object that is specific to this connection.
            </summary>
            <param name="selectCommand">The SQL command used to fetch a table data rows.</param>
            <param name="connection">The connection object.</param>
            <param name="parameters">The select command parameters.</param>
            <returns>The <b>DbDataAdapter</b> object.</returns>
            <remarks>
            You should override this method if you are developing a new connection component. In this method,
            you need to create the adapter and set its <b>SelectCommand</b>'s parameters.
            <para/>If your connection does not use data adapter, you need to override 
            the <see cref="M:FastReport.Data.DataConnectionBase.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)"/> and <see cref="M:FastReport.Data.DataConnectionBase.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)"/> methods instead.
            </remarks>
            <example>Here is the example of this method implementation:
            <code>
            public override DbDataAdapter GetAdapter(string selectCommand, DbConnection connection,
              CommandParameterCollection parameters)
            {
              OleDbDataAdapter adapter = new OleDbDataAdapter(selectCommand, connection as OleDbConnection);
              foreach (CommandParameter p in parameters)
              {
                OleDbParameter parameter = adapter.SelectCommand.Parameters.Add(p.Name, (OleDbType)p.DataType, p.Size);
                parameter.Value = p.Value;
              }
              return adapter;
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetParameterType">
            <summary>
            Gets the type of parameter that is specific to this connection.
            </summary>
            <returns>The parameter's type.</returns>
            <remarks>
            This property is used in the report designer to display available data types when you edit the
            connection parameters. For example, the type of OleDbConnection parameter is a <b>OleDbType</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <summary>
            Quotes the specified DB identifier such as table name or column name.
            </summary>
            <param name="value">Identifier to quote.</param>
            <param name="connection">The opened DB connection.</param>
            <returns>The quoted identifier.</returns>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <summary>
            Fills the table schema.
            </summary>
            <param name="table">DataTable to fill.</param>
            <param name="selectCommand">The SQL select command.</param>
            <param name="parameters">SQL parameters.</param>
            <remarks>
            Usually you don't need to use this method. Internally it uses the <see cref="M:FastReport.Data.DataConnectionBase.GetConnection"/> and
            <see cref="M:FastReport.Data.DataConnectionBase.GetAdapter(System.String,System.Data.Common.DbConnection,FastReport.Data.CommandParameterCollection)"/> methods to fill the table schema. If you create own connection component
            that does not use nor connection or adapter, then you need to override this method.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <summary>
            Fills the table data.
            </summary>
            <param name="table">DataTable to fill.</param>
            <param name="selectCommand">The SQL select command.</param>
            <param name="parameters">SQL parameters.</param>
            <remarks>
            Usually you don't need to use this method. Internally it uses the <see cref="M:FastReport.Data.DataConnectionBase.GetConnection"/> and
            <see cref="M:FastReport.Data.DataConnectionBase.GetAdapter(System.String,System.Data.Common.DbConnection,FastReport.Data.CommandParameterCollection)"/> methods to fill the table data. If you create own connection component
            that does not use nor connection or adapter, then you need to override this method.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.CreateTable(FastReport.Data.TableDataSource)">
            <summary>
            Creates table.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.DeleteTable(FastReport.Data.TableDataSource)">
            <summary>
            Deletes table.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataConnectionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.DataConnectionBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.DataComponentBase">
            <summary>
            The base class for all data components such as data sources, columns.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.Delete">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Data.DataComponentBase.Alias">
            <summary>
            Gets or sets alias of this object.
            </summary>
            <remarks>
            Alias is a human-friendly name of this object. It may contain any symbols (including 
            spaces and national symbols).
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataComponentBase.Enabled">
            <summary>
            Gets or sets a value indicates that object is enabled and thus can be used in a report.
            </summary>
            <remarks>
            This property is used to hide an object from the Data Dictionary window. Hidden
            objects are still accessible in the "Data|Choose Data Source..." menu.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataComponentBase.ReferenceName">
            <summary>
            Gets or sets a name of the data object.
            </summary>
            <remarks>
            This property is used to support FastReport.Net infrastructure. Do not use it directly.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataComponentBase.Reference">
            <summary>
            Gets or sets a reference to the data object.
            </summary>
            <remarks>
            This property is used to support FastReport.Net infrastructure. Do not use it directly.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataComponentBase.IsAliased">
            <summary>
            Gets a value indicates that this object has an alias.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.SetName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.InitializeComponent">
            <summary>
            Initializes the object before running a report.
            </summary>
            <remarks>
            This method is used by the report engine, do not call it directly.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.DataComponentBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.CsvDataConnection">
            <summary>
            Represents a connection to csv file-based database.
            </summary>
            <example>This example shows how to add a new connection to the report.
            <code>
            Report report1;
            CsvDataConnection conn = new CsvDataConnection();
            conn.CsvFile = @"c:\data.csv";
            report1.Dictionary.Connections.Add(conn);
            conn.CreateAllTables();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.GetTableNames">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.TestConnection">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.GetEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.GetConnectionId">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Data.CsvDataConnection.DEFAULT_FIELD_NAME">
            <summary>
            The default field name.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.CsvFile">
            <summary>
            Gets or sets the path to .csv file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.Codepage">
            <summary>
            Gets or sets the codepage of the .csv file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.Separator">
            <summary>
            Gets or sets the separator of the .csv file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.FieldNamesInFirstString">
            <summary>
            Gets or sets the value indicating that field names should be loaded from the first string of the file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.RemoveQuotationMarks">
            <summary>
            Gets or sets the value indicating that quotation marks should be removed.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvDataConnection.ConvertFieldTypes">
            <summary>
            Gets or sets the value indicating that field types fhould be converted.
            </summary>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CsvDataConnection"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.CreateDataSet">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.SetConnectionString(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.FillTableSchema(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.FillTableData(System.Data.DataTable,System.String,FastReport.Data.CommandParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.CreateTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.DeleteTable(FastReport.Data.TableDataSource)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CsvDataConnection.QuoteIdentifier(System.String,System.Data.Common.DbConnection)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.BOConverterFlags">
            <summary>
            <b>Obsolete</b>. Specifies a set of flags used to convert business objects into datasources.
            </summary>
        </member>
        <member name="F:FastReport.Data.BOConverterFlags.None">
            <summary>
            Specifies no actions.
            </summary>
        </member>
        <member name="F:FastReport.Data.BOConverterFlags.AllowFields">
            <summary>
            Allows using the fields of a business object.
            </summary>
        </member>
        <member name="F:FastReport.Data.BOConverterFlags.BrowsableOnly">
            <summary>
            Allows using properties of a business object with <b>BrowsableAttribute</b> only.
            </summary>
        </member>
        <member name="T:FastReport.Data.PropertyKind">
            <summary>
            Specifies a kind of property.
            </summary>
        </member>
        <member name="F:FastReport.Data.PropertyKind.Simple">
            <summary>
            Specifies the property of a simple type (such as integer).
            </summary>
        </member>
        <member name="F:FastReport.Data.PropertyKind.Complex">
            <summary>
            Specifies the complex property such as class with own properties.
            </summary>
        </member>
        <member name="F:FastReport.Data.PropertyKind.Enumerable">
            <summary>
            Specifies the property which is a list of objects (is of IEnumerable type).
            </summary>
        </member>
        <member name="T:FastReport.Data.BusinessObjectDataSource">
            <summary>
            Represents a datasource based on business object of <b>IEnumerable</b> type.
            </summary>
            <remarks>
            Do not use this class directly. To register a business object, use the
            <b>Report.RegisterData</b> method.
            </remarks>
        </member>
        <member name="E:FastReport.Data.BusinessObjectDataSource.LoadBusinessObject">
            <summary>
            Occurs when FastReport engine loads data source with data from a business object.
            </summary>
            <remarks>
            Use this event if you want to implement load-on-demand. Event handler must load the data into 
            your business object.
            </remarks>
        </member>
        <member name="M:FastReport.Data.BusinessObjectDataSource.GetValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.BusinessObjectDataSource.GetValue(FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.BusinessObjectDataSource.InitSchema">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.BusinessObjectDataSource.LoadData(System.Collections.ArrayList)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.BusinessObjectDataSource.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.LoadBusinessObjectEventHandler">
            <summary>
            Represents the method that will handle the LoadBusinessObject event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.Data.LoadBusinessObjectEventArgs">
            <summary>
            Provides data for <see cref="T:FastReport.Data.LoadBusinessObjectEventHandler"/> event.
            </summary>
        </member>
        <member name="F:FastReport.Data.LoadBusinessObjectEventArgs.parent">
            <summary>
            Parent object for this data source.
            </summary>
        </member>
        <member name="T:FastReport.Data.ColumnFormat">
            <summary>
            Specifies the format for the column value.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Auto">
            <summary>
            The format will be determined automatically depending on the column's DataType.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.General">
            <summary>
            Specifies the General format (no formatting).
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Number">
            <summary>
            Specifies the Number format.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Currency">
            <summary>
            Specifies the Currency format.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Date">
            <summary>
            Specifies the Date format.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Time">
            <summary>
            Specifies the Time format.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Percent">
            <summary>
            Specifies the Percent format.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnFormat.Boolean">
            <summary>
            Specifies the Boolean format.
            </summary>
        </member>
        <member name="T:FastReport.Data.ColumnBindableControl">
            <summary>
            Specifies the type of an object that will be created when you drop the 
            data column on a report page.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnBindableControl.Text">
            <summary>
            The column will create the <see cref="T:FastReport.TextObject"/> object.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnBindableControl.RichText">
            <summary>
            The column will create the <see cref="T:FastReport.RichObject"/> object.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnBindableControl.Picture">
            <summary>
            The column will create the <see cref="T:FastReport.PictureObject"/> object.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnBindableControl.CheckBox">
            <summary>
            The column will create the <see cref="T:FastReport.CheckBoxObject"/> object.
            </summary>
        </member>
        <member name="F:FastReport.Data.ColumnBindableControl.Custom">
            <summary>
            The column will create the custom object, specified in the 
            <see cref="P:FastReport.Data.Column.CustomBindableControl"/> property.
            </summary>
        </member>
        <member name="T:FastReport.Data.ColumnCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.Column"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.ColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets a column.
            </summary>
            <param name="index">The index of a column in this collection.</param>
            <returns>The column with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.FindByName(System.String)">
            <summary>
            Finds a column by its name.
            </summary>
            <param name="name">The name of a column.</param>
            <returns>The <see cref="T:FastReport.Data.Column"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.FindByAlias(System.String)">
            <summary>
            Finds a column by its alias.
            </summary>
            <param name="alias">The alias of a column.</param>
            <returns>The <see cref="T:FastReport.Data.Column"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.CreateUniqueName(System.String)">
            <summary>
            Returns an unique column name based on given name.
            </summary>
            <param name="name">The base name.</param>
            <returns>The unique name.</returns>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.CreateUniqueAlias(System.String)">
            <summary>
            Returns an unique column alias based on given alias.
            </summary>
            <param name="alias">The base alias.</param>
            <returns>The unique alias.</returns>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.Sort">
            <summary>
            Sorts the collection of columns.
            </summary>
        </member>
        <member name="M:FastReport.Data.ColumnCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.ColumnCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.ColumnComparer">
            <summary>
            Represents the comparer class that used for sorting the collection of columns.
            </summary>
        </member>
        <member name="M:FastReport.Data.ColumnComparer.Compare(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.CommandParameter">
            <summary>
            This class represents a single parameter to use in the "select" command.
            </summary>
        </member>
        <member name="P:FastReport.Data.CommandParameter.DataType">
            <summary>
            Gets or sets the parameter's data type.
            </summary>
        </member>
        <member name="P:FastReport.Data.CommandParameter.Size">
            <summary>
            Gets or sets the size of parameter's data. 
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.Data.CommandParameter.DataType"/> property is set to <b>String</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Data.CommandParameter.Expression">
            <summary>
            Gets or sets an expression that returns the parameter's value.
            </summary>
            <remarks>
            If this property is not set, the <see cref="P:FastReport.Data.CommandParameter.DefaultValue"/> property will be used 
            to obtain a parameter's value.
            </remarks>
        </member>
        <member name="P:FastReport.Data.CommandParameter.DefaultValue">
            <summary>
            Gets or sets a default value for this parameter.
            </summary>
            <remarks>
            This value is used when you designing a report. Also it is used when report is running
            in case if you don't provide a value for the <see cref="P:FastReport.Data.CommandParameter.Expression"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.CommandParameter.Value">
            <summary>
            Gets or sets the parameter's value.
            </summary>
        </member>
        <member name="P:FastReport.Data.CommandParameter.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Data.CommandParameter.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CommandParameter.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CommandParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CommandParameter"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.CommandParameterCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.CommandParameter"/> objects.
            </summary>
            <remarks>
            This class is used to store the list of parameters defined in the datasource. See the 
            <see cref="P:FastReport.Data.TableDataSource.Parameters"/> property for more details.
            </remarks>
        </member>
        <member name="P:FastReport.Data.CommandParameterCollection.Item(System.Int32)">
            <summary>
            Gets or sets a parameter.
            </summary>
            <param name="index">The index of a parameter in this collection.</param>
            <returns>The parameter with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.CommandParameterCollection.FindByName(System.String)">
            <summary>
            Finds a parameter by its name.
            </summary>
            <param name="name">The name of a parameter.</param>
            <returns>The <see cref="T:FastReport.Data.CommandParameter"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.CommandParameterCollection.CreateUniqueName(System.String)">
            <summary>
            Returns an unique parameter name based on given name.
            </summary>
            <param name="name">The base name.</param>
            <returns>The unique name.</returns>
        </member>
        <member name="M:FastReport.Data.CommandParameterCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CommandParameterCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.ConnectionCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.DataConnectionBase"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.ConnectionCollection.Item(System.Int32)">
            <summary>
            Gets or sets a data connection.
            </summary>
            <param name="index">The index of a data connection in this collection.</param>
            <returns>The data connection with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.ConnectionCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.ConnectionCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.CsvConnectionStringBuilder">
            <summary>
            Represents the CsvDataConnection connection string builder.
            </summary>
            <remarks>
            Use this class to parse connection string returned by the <b>CsvDataConnection</b> class.
            </remarks>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.CsvFile">
            <summary>
            Gets or sets the path to .csv file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.Codepage">
            <summary>
            Gets or sets the codepage of .csv file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.Separator">
            <summary>
            Gets or sets the separator.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.FieldNamesInFirstString">
            <summary>
            Gets or sets the value indicating that field names should be loaded from the first string of the file.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.RemoveQuotationMarks">
            <summary>
            Gets or sets the value indicating that quotation marks should be removed.
            </summary>
        </member>
        <member name="P:FastReport.Data.CsvConnectionStringBuilder.ConvertFieldTypes">
            <summary>
            Gets or sets the value indicating that field types should be converted.
            </summary>
        </member>
        <member name="M:FastReport.Data.CsvConnectionStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CsvConnectionStringBuilder"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Data.CsvConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CsvConnectionStringBuilder"/> class with a specified connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="T:FastReport.Data.CubeSourceBase">
            <summary>
            Base class for all CubeSources such as <see cref="T:FastReport.Data.SliceCubeSource"/>.
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.XAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.YAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.MeasuresCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.MeasuresLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.MeasuresInXAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.MeasuresInYAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.DataColumnCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.DataRowCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.SourceAssigned">
            <summary>
            
            </summary>
        </member>
        <member name="E:FastReport.Data.CubeSourceBase.OnChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceBase.CubeLink">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.GetMeasureCell(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.TraverseXAxis(FastReport.CrossView.CrossViewAxisDrawCellHandler)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.TraverseYAxis(FastReport.CrossView.CrossViewAxisDrawCellHandler)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.GetXAxisFieldName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.GetYAxisFieldName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.GetMeasureName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.Changed">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Data.CubeSourceBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CubeSourceBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.CubeSourceCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.CubeSourceBase"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.CubeSourceCollection.Item(System.Int32)">
            <summary>
            Gets or sets a data source.
            </summary>
            <param name="index">The index of a data source in this collection.</param>
            <returns>The data source with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.CubeSourceCollection.FindByName(System.String)">
            <summary>
            Finds a CubeSource by its name.
            </summary>
            <param name="name">The name of a CubeSource.</param>
            <returns>The <see cref="T:FastReport.Data.CubeSourceBase"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.CubeSourceCollection.FindByAlias(System.String)">
            <summary>
            Finds a CubeSource by its alias.
            </summary>
            <param name="alias">The alias of a CubeSource.</param>
            <returns>The <see cref="T:FastReport.Data.CubeSourceBase"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.CubeSourceCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.CubeSourceCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.DataSourceBase">
            <summary>
            Base class for all datasources such as <see cref="T:FastReport.Data.TableDataSource"/>.
            </summary>
        </member>
        <member name="E:FastReport.Data.DataSourceBase.Load">
            <summary>
            Occurs when the FastReport engine loads data source with data.
            </summary>
            <remarks>
            Use this event if you want to implement load-on-demand. Event handler must load the data 
            into the data object which this datasource is bound to (for example, the
            <b>TableDataSource</b> uses data from the <b>DataTable</b> object bound to
            the <b>Table</b> property).
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.RowCount">
            <summary>
            Gets a number of data rows in this datasource.
            </summary>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.HasMoreRows">
            <summary>
            Gets a value indicating that datasource has more rows, that is the <see cref="P:FastReport.Data.DataSourceBase.CurrentRowNo"/>
            is less than the <see cref="P:FastReport.Data.DataSourceBase.RowCount"/>.
            </summary>
            <remarks>
            <para>You should initialize the datasource by the <b>Init</b> method before using this property.</para>
            <para>Usually this property is used with the following code block:</para>
            <code>
            dataSource.Init();
            while (dataSource.HasMoreRows)
            {
              // do something...
              dataSource.Next();
            }
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.CurrentRow">
            <summary>
            Gets the current data row.
            </summary>
            <remarks>
            <para>This property is updated when you call the <see cref="M:FastReport.Data.DataSourceBase.Next"/> method.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.CurrentRowNo">
            <summary>
            Gets an index of current data row.
            </summary>
            <remarks>
            <para>You should initialize the datasource by the <b>Init</b> method before using this property.</para>
            <para>This property is updated when you call the <see cref="M:FastReport.Data.DataSourceBase.Next"/> method.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.Item(System.String)">
            <summary>
            Gets data stored in a specified column.
            </summary>
            <param name="columnAlias">Alias of a column.</param>
            <returns>The column's value.</returns>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.Item(FastReport.Data.Column)">
            <summary>
            Gets data stored in a specified column.
            </summary>
            <param name="column">The column.</param>
            <returns>The column's value.</returns>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.ForceLoadData">
            <summary>
            Forces loading of data for this datasource.
            </summary>
            <remarks>
            This property is <b>false</b> by default. Set it to <b>true</b> if you need to reload data 
            each time when the datasource initialized. Note that this may slow down the performance.
            </remarks>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.DataType">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.BindableControl">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.CustomBindableControl">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.Format">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.Expression">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.Calculated">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceBase.AdditionalFilter">
            <summary>
            Gets the additional filter settings.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.GetValue(System.String)">
            <summary>
            Gets data stored in a specified column.
            </summary>
            <param name="alias">The column alias.</param>
            <returns>An object that contains the data.</returns>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.GetValue(FastReport.Data.Column)">
            <summary>
            Gets data stored in a specified column.
            </summary>
            <param name="column">The column.</param>
            <returns>An object that contains the data.</returns>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.InitSchema">
            <summary>
            Initializes the datasource schema.
            </summary>
            <remarks>
            This method is used to support the FastReport.Net infrastructure. Do not call it directly.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.LoadData(System.Collections.ArrayList)">
            <summary>
            Loads the datasource with data.
            </summary>
            <remarks>
            This method is used to support the FastReport.Net infrastructure. Do not call it directly.
            </remarks>
            <param name="rows">Rows to fill with data.</param>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init">
            <summary>
            Initializes this datasource.
            </summary>
            <remarks>
            This method fills the table with data. You should always call it before using most of
            datasource properties.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init(System.String)">
            <summary>
            Initializes this datasource and applies the specified filter.
            </summary>
            <param name="filter">The filter expression.</param>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init(System.String,FastReport.SortCollection)">
            <summary>
            Initializes this datasource, applies the specified filter and sorts the rows.
            </summary>
            <param name="filter">The filter expression.</param>
            <param name="sort">The collection of sort descriptors.</param>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init(FastReport.Data.DataSourceBase)">
            <summary>
            Initializes this datasource and filters data rows according to the master-detail relation between
            this datasource and <b>parentData</b>.
            </summary>
            <param name="parentData">Parent datasource.</param>
            <remarks>
            To use master-detail relation, you must define the <see cref="T:FastReport.Data.Relation"/> object that describes
            the relation, and add it to the <b>Report.Dictionary.Relations</b> collection.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init(FastReport.Data.DataSourceBase,System.String,FastReport.SortCollection)">
            <summary>
            Initializes this datasource and filters data rows according to the master-detail relation between
            this datasource and <b>parentData</b>. Also applies the specified filter and sorts the rows.
            </summary>
            <param name="parentData">Parent datasource.</param>
            <param name="filter">The filter expression.</param>
            <param name="sort">The collection of sort descriptors.</param>
            <remarks>
            To use master-detail relation, you must define the <see cref="T:FastReport.Data.Relation"/> object that describes
            the relation, and add it to the <b>Report.Dictionary.Relations</b> collection.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Init(FastReport.Data.Relation,System.String,FastReport.SortCollection)">
            <summary>
            Initializes this datasource and filters data rows according to the master-detail relation.
            Also applies the specified filter and sorts the rows.
            </summary>
            <param name="relation">The master-detail relation.</param>
            <param name="filter">The filter expression.</param>
            <param name="sort">The collection of sort descriptors.</param>
            <remarks>
            To use master-detail relation, you must define the <see cref="T:FastReport.Data.Relation"/> object that describes
            the relation, and add it to the <b>Report.Dictionary.Relations</b> collection.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.EnsureInit">
            <summary>
            Initializes the data source if it is not initialized yet.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.First">
            <summary>
            Navigates to the first row.
            </summary>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this method.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Next">
            <summary>
            Navigates to the next row.
            </summary>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this method.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Prior">
            <summary>
            Navigates to the prior row.
            </summary>
            <remarks>
            You should initialize the datasource by the <b>Init</b> method before using this method.
            </remarks>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.DataSourceBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.DataSourceBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.DataSourceCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.DataSourceBase"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.DataSourceCollection.Item(System.Int32)">
            <summary>
            Gets or sets a data source.
            </summary>
            <param name="index">The index of a data source in this collection.</param>
            <returns>The data source with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.DataSourceCollection.FindByName(System.String)">
            <summary>
            Finds a datasource by its name.
            </summary>
            <param name="name">The name of a datasource.</param>
            <returns>The <see cref="T:FastReport.Data.DataSourceBase"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.DataSourceCollection.FindByAlias(System.String)">
            <summary>
            Finds a datasource by its alias.
            </summary>
            <param name="alias">The alias of a datasource.</param>
            <returns>The <see cref="T:FastReport.Data.DataSourceBase"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.DataSourceCollection.Sort">
            <summary>
            Sorts data sources by theirs names.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataSourceCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.DataSourceCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.DataSourceComparer">
            <summary>
            Represents the comparer class that used for sorting the collection of data sources.
            </summary>
        </member>
        <member name="M:FastReport.Data.DataSourceComparer.Compare(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.FilterOperation">
            <summary>
            Determines how to filter the data value.
            </summary>
            <remarks>
            The "Data value" is a value contained in the datasource which you filter. 
            The "Selected value" is a value you have entered or selected in the dialog control.
            </remarks>
        </member>
        <member name="F:FastReport.Data.FilterOperation.Equal">
            <summary>
            Data value is equal to selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.NotEqual">
            <summary>
            Data value is not equal to selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.LessThan">
            <summary>
            Data value is less than selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.LessThanOrEqual">
            <summary>
            Data value is less than or equal to selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.GreaterThan">
            <summary>
            Data value is greater than selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.GreaterThanOrEqual">
            <summary>
            Data value is greater than or equal to selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.Contains">
            <summary>
            Data string contains selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.NotContains">
            <summary>
            Data string does not contain selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.StartsWith">
            <summary>
            Data string starts with selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.NotStartsWith">
            <summary>
            Data string does not start with selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.EndsWith">
            <summary>
            Data string ends with selected value.
            </summary>
        </member>
        <member name="F:FastReport.Data.FilterOperation.NotEndsWith">
            <summary>
            Data string does not end with selected value.
            </summary>
        </member>
        <member name="T:FastReport.Data.Dictionary">
            <summary>
            This class stores all report data items such as datasources, connections, relations, parameters,
            system variables.
            </summary>
            <remarks>
            You can access the report dictionary via <b>Report.Dictionary</b> property.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.Connections">
            <summary>
            Gets a collection of connection objects available in a report.
            </summary>
        </member>
        <member name="P:FastReport.Data.Dictionary.DataSources">
            <summary>
            Gets a collection of datasources available in a report. 
            </summary>
            <remarks>
            Usually you don't need to use this property. It contains only datasources 
            registered using the <b>RegisterData</b> method. All other datasources are contained 
            in connection objects and may be accessed via <see cref="P:FastReport.Data.Dictionary.Connections"/> property. 
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.Relations">
            <summary>
            Gets a collection of relations.
            </summary>
        </member>
        <member name="P:FastReport.Data.Dictionary.Parameters">
            <summary>
            Gets a collection of parameters.
            </summary>
            <remarks>
            Another way to access parameters is to use the <b>Report.Parameters</b> property
            which is actually a shortcut to this property. You also may use the <b>Report.GetParameter</b>
            and <b>Report.GetParameterValue</b> methods.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.SystemVariables">
            <summary>
            Gets a collection of system variables like Date, PageNofM etc.
            </summary>
            <remarks>
            Another way to access a system variable is to use the <b>Report.GetVariableValue</b> method.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.Totals">
            <summary>
            Gets a collection of totals.
            </summary>
            <remarks>
            Another way to get a total value is to use the <b>Report.GetTotalValue</b> method.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.CubeSources">
            <summary>
            Gets a collection of cubesources available in a report. 
            </summary>
            <remarks>
            Usually you don't need to use this property. It contains only cubesources 
            registered using the <b>RegisterData</b> method.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Dictionary.RegisteredItems">
            <summary>
            Gets a list of registered items.
            </summary>
            <remarks>
            This property is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.RegisterDataView(System.Data.DataView,System.String,System.Boolean)">
            <summary>
            Registers a DataView.
            </summary>
            <param name="view">The DataView to register.</param>
            <param name="referenceName">The name of the data object.</param>
            <param name="enabled">Determines wheter to enable the object or not.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.RegisterBusinessObject(System.Collections.IEnumerable,System.String,System.Int32,System.Boolean)">
            <summary>
            Registers a business object.
            </summary>
            <param name="data">The business object.</param>
            <param name="referenceName">The name of the object.</param>
            <param name="maxNestingLevel">Maximum level of data nesting.</param>
            <param name="enabled">Determines wheter to enable the object or not.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.RegisterCubeLink(FastReport.CrossView.IBaseCubeLink,System.String,System.Boolean)">
            <summary>
            Registers a CubeLink.
            </summary>
            <param name="cubeLink">The CubeLink to register.</param>
            <param name="referenceName">The name of the data object.</param>
            <param name="enabled">Determines wheter to enable the object or not.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.RegisterData(System.Object,System.String,System.Boolean)">
            <summary>
            Registers a data object.
            </summary>
            <param name="data">The object to register.</param>
            <param name="name">The name of the object.</param>
            <param name="enabled">Determines wheter to enable the object or not.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.UnregisterData(System.Object)">
            <summary>
            Unregisters the previously registered data.
            </summary>
            <param name="data">The application data.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.UnregisterData(System.Object,System.String)">
            <summary>
            Unregisters the previously registered data.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <remarks>
            You must specify the same <b>data</b> and <b>name</b> as when you call <b>RegisterData</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.ReRegisterData">
            <summary>
            Re-registers the data registered before.
            </summary>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.ReRegisterData(FastReport.Data.Dictionary)">
            <summary>
            Re-registers the data registered before.
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:FastReport.Data.Dictionary.ClearRegisteredData">
            <summary>
            Clears all registered data.
            </summary>
        </member>
        <member name="M:FastReport.Data.Dictionary.UpdateRelations">
            <summary>
            Enables or disables relations between data tables.
            </summary>
            <remarks>
            Call this method if you create master-detail report from code. This method enables
            relation between two data tables which <b>Enabled</b> flag is set to <b>true</b>. Relations
            whose parent and child tables are disabled, gets disabled too.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.CreateUniqueName(System.String)">
            <summary>
            Creates unique name for data item such as connection, datasource, relation, parameter or total.
            </summary>
            <param name="name">The base name.</param>
            <returns>The new unique name.</returns>
            <remarks>
            Use this method to create unique name of the data item. It is necessary when you create new
            items in code to avoid conflicts with existing report items.
            <example>This example show how to add a new parameter:
            <code>
            Report report1;
            Parameter par = new Parameter();
            par.Name = report1.Dictionary.CreateUniqueName("Parameter");
            report1.Parameters.Add(par);
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.CreateUniqueAlias(System.String)">
            <summary>
            Creates unique alias for data item such as connection, datasource or relation.
            </summary>
            <param name="alias">The base alias.</param>
            <returns>The new unique alias.</returns>
            <remarks>
            Use this method to create unique alias of the data item. It is necessary when you create new
            items in code to avoid conflicts with existing report items.
            <example>This example show how to add a new table:
            <code>
            Report report1;
            DataConnectionBase conn = report1.Dictionary.Connections.FindByName("Connection1");
            TableDataSource table = new TableDataSource();
            table.TableName = "Employees";
            table.Name = report1.Dictionary.CreateUniqueName("EmployeesTable");
            table.Alias = report1.Dictionary.CreateUniqueAlias("Employees");
            conn.Tables.Add(table);
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.FindByName(System.String)">
            <summary>
            Finds a data item such as connection, datasource, relation, parameter or total by its name.
            </summary>
            <param name="name">The item's name.</param>
            <returns>The data item if found; otherwise, <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.Dictionary.FindByAlias(System.String)">
            <summary>
            Finds a data item such as connection, datasource or relation by its alias.
            </summary>
            <param name="alias">The item's alias.</param>
            <returns>The data item if found; otherwise, <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.Dictionary.FindDataTableSource(System.Data.DataTable)">
            <summary>
            Finds a datasource that matches the specified DataTable.
            </summary>
            <param name="table">The <b>DataTable</b> object to check.</param>
            <returns>The <b>DataSourceBase</b> object if found.</returns>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.FindDataComponent(System.String)">
            <summary>
            Finds a data component that matches the specified reference name.
            </summary>
            <param name="referenceName">The name to check.</param>
            <returns>The <b>DataComponentBase</b> object if found.</returns>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Data.Dictionary.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.Save(System.IO.Stream)">
            <summary>
            Saves the dictionary to a stream.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.Save(System.String)">
            <summary>
            Saves the dictionary to a file.
            </summary>
            <param name="fileName">The name of a file to save to.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.Load(System.IO.Stream)">
            <summary>
            Loads the dictionary from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.Load(System.String)">
            <summary>
            Loads the dictionary from a file.
            </summary>
            <param name="fileName">The name of a file to load from.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.Merge(FastReport.Data.Dictionary)">
            <summary>
            Merges this dictionary with another <b>Dictionary</b>.
            </summary>
            <param name="source">Another dictionary to merge the data from.</param>
        </member>
        <member name="M:FastReport.Data.Dictionary.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Dictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.Dictionary"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Data.Dictionary.RegDataItem">
            <summary>
            Represents the item registered in a dictionary.
            </summary>
        </member>
        <member name="F:FastReport.Data.Dictionary.RegDataItem.data">
            <summary>
            Gets the item data.
            </summary>
        </member>
        <member name="F:FastReport.Data.Dictionary.RegDataItem.name">
            <summary>
            Gets the item name.
            </summary>
        </member>
        <member name="T:FastReport.Data.Parameter">
            <summary>
            Represents a report parameter that is used to pass user data to a report.
            </summary>
            <remarks>
            See <see cref="P:FastReport.Report.Parameters"/> for details about using parameters.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Parameter.Name">
            <summary>
            Gets or sets the name of parameter.
            </summary>
        </member>
        <member name="P:FastReport.Data.Parameter.DataType">
            <summary>
            Gets or sets the type of parameter.
            </summary>
        </member>
        <member name="P:FastReport.Data.Parameter.Value">
            <summary>
            Gets or sets the value of parameter.
            </summary>
            <remarks>
            You may specify the static value in this property. Note: if the <see cref="P:FastReport.Data.Parameter.Expression"/>
            property is not empty, it will be calculated and its value will be returned.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Parameter.AsString">
            <summary>
            Gets or sets value of the parameter as a string.
            </summary>
        </member>
        <member name="P:FastReport.Data.Parameter.Expression">
            <summary>
            Gets or sets an expression of the parameter.
            </summary>
            <remarks>
            This expression will be calculated each time you access a parameter's <b>Value</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Parameter.Description">
            <summary>
            Gets or sets the description of a parameter.
            </summary>
        </member>
        <member name="P:FastReport.Data.Parameter.Parameters">
            <summary>
            Gets a collection of nested parameters.
            </summary>
            <remarks>
            Parameters can have child (nested) parameters. To get or set a nested
            parameter's value, use the <see cref="M:FastReport.Report.GetParameter(System.String)"/> method.
            </remarks>
        </member>
        <member name="P:FastReport.Data.Parameter.FullName">
            <summary>
            Gets the full name of the parameter. This is useful to get the nested parameter's full name.
            </summary>
        </member>
        <member name="P:FastReport.Data.Parameter.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Data.Parameter.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.Parameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.Parameter"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Data.Parameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.Parameter"/> class with specified name.
            </summary>
        </member>
        <member name="T:FastReport.Data.ParameterCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.Parameter"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.ParameterCollection.Item(System.Int32)">
            <summary>
            Gets or sets a parameter.
            </summary>
            <param name="index">The index of a parameter in this collection.</param>
            <returns>The parameter with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.ParameterCollection.FindByName(System.String)">
            <summary>
            Finds a parameter by its name.
            </summary>
            <param name="name">The name of a parameter.</param>
            <returns>The <see cref="T:FastReport.Data.Parameter"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.ParameterCollection.CreateUniqueName(System.String)">
            <summary>
            Returns an unique parameter name based on given name.
            </summary>
            <param name="name">The base name.</param>
            <returns>The unique name.</returns>
        </member>
        <member name="M:FastReport.Data.ParameterCollection.Assign(FastReport.Data.ParameterCollection)">
            <summary>
            Copies the parameters from other collection.
            </summary>
            <param name="source">Parameters to copy from.</param>
        </member>
        <member name="M:FastReport.Data.ParameterCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.ParameterCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.RelationCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.Relation"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.RelationCollection.Item(System.Int32)">
            <summary>
            Gets or sets a relation.
            </summary>
            <param name="index">The index of a relation in this collection.</param>
            <returns>The relation with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.RelationCollection.FindByName(System.String)">
            <summary>
            Finds a relation by its name.
            </summary>
            <param name="name">The name of a relation.</param>
            <returns>The <see cref="T:FastReport.Data.Relation"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.RelationCollection.FindByAlias(System.String)">
            <summary>
            Finds a relation by its alias.
            </summary>
            <param name="alias">The alias of a relation.</param>
            <returns>The <see cref="T:FastReport.Data.Relation"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.RelationCollection.FindEqual(FastReport.Data.Relation)">
            <summary>
            Finds a relation that is equal to specified one.
            </summary>
            <param name="rel">Another relation to compare with.</param>
            <returns>The <see cref="T:FastReport.Data.Relation"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.RelationCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.RelationCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.SliceCubeSource">
            <summary>
            Represents a datasource based on <b>DataView</b> class.
            </summary>
            <remarks>
            This class is used to support FastReport.Net infrastructure, do not use it directly.
            If you want to use data from <b>DataView</b> object, call the 
            <see cref="M:FastReport.Report.RegisterData(System.Data.DataView,System.String)"/> method of the <b>Report</b>.
            </remarks>
        </member>
        <member name="T:FastReport.Data.SystemVariables">
            <summary>
            Represents the collection of system variables.
            </summary>
        </member>
        <member name="T:FastReport.Data.SystemVariable">
            <summary>
            Represents the base class for system variables.
            </summary>
        </member>
        <member name="P:FastReport.Data.SystemVariable.Expression">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Data.SystemVariable.Description">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Data.SystemVariable.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.DateVariable">
            <summary>
            Returns date and time of the report's start.
            </summary>
        </member>
        <member name="P:FastReport.Data.DateVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.PageVariable">
            <summary>
            Returns current page number.
            </summary>
        </member>
        <member name="P:FastReport.Data.PageVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.TotalPagesVariable">
            <summary>
            Returns total number of pages in the report. To use this variable, you need 
            to enable the report's double pass.
            </summary>
        </member>
        <member name="P:FastReport.Data.TotalPagesVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.PageNVariable">
            <summary>
            Returns a string containing the current page number in a form "Page N".
            </summary>
        </member>
        <member name="P:FastReport.Data.PageNVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.PageNofMVariable">
            <summary>
            Returns a string containing the current page number and total pages in a form "Page N of M".
            To use this variable, you need to enable the report's double pass.
            </summary>
        </member>
        <member name="P:FastReport.Data.PageNofMVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.RowVariable">
            <summary>
            Returns data row number inside the group. This value is reset at the start of a new group. 
            </summary>
        </member>
        <member name="P:FastReport.Data.RowVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.AbsRowVariable">
            <summary>
            Returns absolute number of data row. This value is never reset at the start of a new group.
            </summary>
        </member>
        <member name="P:FastReport.Data.AbsRowVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.PageMacroVariable">
            <summary>
            Returns current page number.
            <para/>This variable is actually a macro. Its value is substituted when the component is viewed in 
            the preview window. That means you cannot use it in an expression.
            </summary>
        </member>
        <member name="P:FastReport.Data.PageMacroVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.TotalPagesMacroVariable">
            <summary>
            Returns the number of total pages in the report.
            <para/>This variable is actually a macro. Its value is substituted when the component is viewed in 
            the preview window. That means you cannot use it in an expression.
            </summary>
        </member>
        <member name="P:FastReport.Data.TotalPagesMacroVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.CopyNameMacroVariable">
            <summary>
            Returns the name of the printed copy.
            <para/>This variable is actually a macro. Its value is substituted when the component is viewed in 
            the preview window. That means you cannot use it in an expression.
            </summary>
        </member>
        <member name="P:FastReport.Data.CopyNameMacroVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.HierarchyLevelVariable">
            <summary>
            Returns a level of hierarchy in the hierarchical report.
            </summary>
        </member>
        <member name="P:FastReport.Data.HierarchyLevelVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.HierarchyRowNoVariable">
            <summary>
            Returns the row number like "1.2.1" in the hierarchical report.
            </summary>
        </member>
        <member name="P:FastReport.Data.HierarchyRowNoVariable.Value">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.TableCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.TableDataSource"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.TableCollection.Item(System.Int32)">
            <summary>
            Gets or sets a data table.
            </summary>
            <param name="index">The index of a data table in this collection.</param>
            <returns>The data table with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.TableCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.TableCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.TotalType">
            <summary>
            Specifies the total type.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.Sum">
            <summary>
            The total returns sum of values.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.Min">
            <summary>
            The total returns minimal value.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.Max">
            <summary>
            The total returns maximal value.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.Avg">
            <summary>
            The total returns average value.
            </summary>
        </member>
        <member name="F:FastReport.Data.TotalType.Count">
            <summary>
            The total returns number of values.
            </summary>
        </member>
        <member name="T:FastReport.Data.TotalCollection">
            <summary>
            Represents the collection of <see cref="T:FastReport.Data.Total"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Data.TotalCollection.Item(System.Int32)">
            <summary>
            Gets or sets a total.
            </summary>
            <param name="index">The index of a total in this collection.</param>
            <returns>The total with specified index.</returns>
        </member>
        <member name="M:FastReport.Data.TotalCollection.FindByName(System.String)">
            <summary>
            Finds a total by its name.
            </summary>
            <param name="name">The name of a total.</param>
            <returns>The <see cref="T:FastReport.Data.Total"/> object if found; otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Data.TotalCollection.CreateUniqueName(System.String)">
            <summary>
            Returns an unique total name based on given name.
            </summary>
            <param name="name">The base name.</param>
            <returns>The unique name.</returns>
        </member>
        <member name="M:FastReport.Data.TotalCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.TotalCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Data.ViewDataSource">
            <summary>
            Represents a datasource based on <b>DataView</b> class.
            </summary>
            <remarks>
            This class is used to support FastReport.Net infrastructure, do not use it directly.
            If you want to use data from <b>DataView</b> object, call the 
            <see cref="M:FastReport.Report.RegisterData(System.Data.DataView,System.String)"/> method of the <b>Report</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Data.ViewDataSource.View">
            <summary>
            Gets the underlying <b>DataView</b> object.
            </summary>
        </member>
        <member name="M:FastReport.Data.ViewDataSource.GetValue(FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.ViewDataSource.InitSchema">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.ViewDataSource.LoadData(System.Collections.ArrayList)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Data.VirtualDataSource.GetValue(FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Data.XmlConnectionStringBuilder">
            <summary>
            Represents the XmlDataConnection connection string builder.
            </summary>
            <remarks>
            Use this class to parse connection string returned by the <b>XmlDataConnection</b> class.
            </remarks>
        </member>
        <member name="P:FastReport.Data.XmlConnectionStringBuilder.XmlFile">
            <summary>
            Gets or sets the path to .xml file.
            </summary>
        </member>
        <member name="P:FastReport.Data.XmlConnectionStringBuilder.XsdFile">
            <summary>
            Gets or sets the path to .xsd file.
            </summary>
        </member>
        <member name="M:FastReport.Data.XmlConnectionStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.XmlConnectionStringBuilder"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Data.XmlConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Data.XmlConnectionStringBuilder"/> class with 
            specified connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="T:FastReport.JsonBase">
            <summary>
            Allows working with JsonObject
            </summary>
        </member>
        <member name="P:FastReport.JsonBase.Item(System.Int32)">
            <summary>
            Returns child object for JsonArray
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:FastReport.JsonBase.Item(System.String)">
            <summary>
            Returns child object for JsonObject
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:FastReport.JsonBase.Count">
            <summary>
            Returns count of child object
            </summary>
        </member>
        <member name="P:FastReport.JsonBase.IsArray">
            <summary>
            Returns true if this object is JsonArray
            </summary>
        </member>
        <member name="P:FastReport.JsonBase.IsObject">
            <summary>
            Returns true if this object is JsonObject
            </summary>
        </member>
        <member name="P:FastReport.JsonBase.Keys">
            <summary>
            Returns list of JsonObject keys
            </summary>
        </member>
        <member name="M:FastReport.JsonBase.FromString(System.String)">
            <summary>
            Pars json text string and return a new JsonBase Object
            </summary>
            <param name="jsonText"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.JsonBase.ContainsKey(System.String)">
            <summary>
            returns true
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.JsonBase.WriteTo(System.Text.StringBuilder,System.Int32)">
            <summary>
            Serialize this object to sb
            </summary>
            
            <param name="sb"></param>
            <param name="indent">indent in space, 0 = without indent</param>
        </member>
        <member name="T:FastReport.AssemblyInitializerDesignExt">
            <summary>
            The FastReport.dll assembly initializer.
            </summary>
        </member>
        <member name="M:FastReport.AssemblyInitializerDesignExt.#ctor">
            <summary>
            Registers all standard objects, wizards, export filters.
            </summary>
        </member>
        <member name="T:FastReport.BandBase">
            <summary>
            Base class for all bands.
            </summary>
        </member>
        <member name="M:FastReport.BandBase.HandleDragOver(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.HandleDragDrop(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.BandBase.Left">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.BandBase.Top">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.BandBase.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.BandBase.Dock">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.Anchor">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.GrowToBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.ShiftMode">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.CanBreak">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.BreakTo">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.BandBase.DrawSelection(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.PointInObject(System.Drawing.PointF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.HandleMouseHover(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.HandleMouseMove(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.Delete">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.BandBase.BeforeLayout">
            <summary>
            This event occurs before the band layouts its child objects.
            </summary>
        </member>
        <member name="E:FastReport.BandBase.AfterLayout">
            <summary>
            This event occurs after the child objects layout was finished.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.StartNewPage">
            <summary>
            Gets or sets a value indicating that the band should be printed from a new page.
            </summary>
            <remarks>
            New page is not generated when printing very first group or data row. This is made to avoid empty
            first page.
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.RepeatBandNTimes">
            <summary>
            Gets or sets a value that determines the number of repetitions of the same band.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.FirstRowStartsNewPage">
            <summary>
            Gets or sets a value indicating that the first row can start a new report page.
            </summary>
            <remarks>
            Use this property if <see cref="P:FastReport.BandBase.StartNewPage"/> is set to <b>true</b>. Normally the new page
            is not started when printing the first data row, to avoid empty first page. 
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.PrintOnBottom">
            <summary>
            Gets or sets a value indicating that the band should be printed on the page bottom.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.KeepChild">
            <summary>
            Gets or sets a value indicating that the band should be printed together with its child band.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.OutlineExpression">
            <summary>
            Gets or sets an outline expression.
            </summary>
            <remarks>
            <para>
            Outline is a tree control displayed in the preview window. It represents the prepared report structure. 
            Each outline node can be clicked to navigate to the item in the prepared report.
            </para>
            <para>
            To create the outline, set this property to any valid expression that represents the outline node text. 
            This expression will be calculated when band is about to print, and its value will be added to the
            outline. Thus, nodes' hierarchy in the outline is similar to the bands' hierarchy 
            in a report. That means there will be the main and subordinate outline nodes, corresponding 
            to the main and subordinate bands in a report (a report with two levels of data or with groups can 
            exemplify the point).
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.Child">
            <summary>
            Gets or sets a child band that will be printed right after this band.
            </summary>
            <remarks>
            Typical use of child band is to print several objects that can grow or shrink. It also can be done
            using the shift feature (via <see cref="P:FastReport.BandBase.ShiftMode"/> property), but in some cases it's not possible.
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.Objects">
            <summary>
            Gets a collection of report objects belongs to this band.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.Repeated">
            <summary>
            Gets a value indicating that band is reprinted on a new page.
            </summary>
            <remarks>
            This property is applicable to the <b>DataHeaderBand</b> and <b>GroupHeaderBand</b> only. 
            It returns <b>true</b> if its <b>RepeatOnAllPages</b> property is <b>true</b> and band is 
            reprinted on a new page.
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.BeforeLayoutEvent">
            <summary>
            Gets or sets a script event name that will be fired before the band layouts its child objects.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.AfterLayoutEvent">
            <summary>
            Gets or sets a script event name that will be fired after the child objects layout was finished.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.AbsLeft">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.BandBase.AbsTop">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.BandBase.Guides">
            <summary>
            Gets or sets collection of guide lines for this band.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.RowNo">
            <summary>
            Gets a row number (the same value returned by the "Row#" system variable).
            </summary>
            <remarks>
            This property can be used when running a report. It may be useful to print hierarchical 
            row numbers in a master-detail report, like this:
            <para/>1.1
            <para/>1.2
            <para/>2.1
            <para/>2.2
            <para/>To do this, put the Text object on a detail data band with the following text in it:
            <para/>[Data1.RowNo].[Data2.RowNo]
            </remarks>
        </member>
        <member name="P:FastReport.BandBase.AbsRowNo">
            <summary>
            Gets an absolute row number (the same value returned by the "AbsRow#" system variable).
            </summary>
        </member>
        <member name="P:FastReport.BandBase.IsFirstRow">
            <summary>
            Gets a value indicating that this is the first data row.
            </summary>
        </member>
        <member name="P:FastReport.BandBase.IsLastRow">
            <summary>
            Gets a value indicating that this is the last data row.
            </summary>
        </member>
        <member name="M:FastReport.BandBase.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.AddLastToFooter(FastReport.BreakableComponent)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BandBase.OnBeforeLayout(System.EventArgs)">
            <summary>
            This method fires the <b>BeforeLayout</b> event and the script code connected to the <b>BeforeLayoutEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.BandBase.OnAfterLayout(System.EventArgs)">
            <summary>
            This method fires the <b>AfterLayout</b> event and the script code connected to the <b>AfterLayoutEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.BandBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.BandBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeObject">
            <summary>
            Represents a barcode object.
            Represents a barcode object.
            </summary>
            <remarks>
            The instance of this class represents a barcode. Here are some common
            actions that can be performed with this object:
            <list type="bullet">
              <item>
                <description>To select the type of barcode, use the <see cref="P:FastReport.Barcode.BarcodeObject.Barcode"/> property.
                </description>
              </item>
              <item>
                <description>To specify a static barcode data, use the <see cref="P:FastReport.Barcode.BarcodeObject.Text"/> property.
                  You also may use the <see cref="P:FastReport.Barcode.BarcodeObject.DataColumn"/> or <see cref="P:FastReport.Barcode.BarcodeObject.Expression"/> properties
                  to specify dynamic value for a barcode.
                </description>
              </item>
              <item>
                <description>To set a barcode orientation, use the <see cref="P:FastReport.Barcode.BarcodeObject.Angle"/> property.
                </description>
              </item>
              <item>
                <description>To specify the size of barcode, set the <see cref="P:FastReport.Barcode.BarcodeObject.AutoSize"/> property
                  to <b>true</b> and use the <see cref="P:FastReport.Barcode.BarcodeObject.Zoom"/> property to zoom the barcode.
                  If <see cref="P:FastReport.Barcode.BarcodeObject.AutoSize"/> property is set to <b>false</b>, you need to specify the
                  size using the <see cref="P:FastReport.ComponentBase.Width">Width</see> and
                  <see cref="P:FastReport.ComponentBase.Height">Height</see> properties.
                </description>
              </item>
            </list>
            </remarks>
            <example>This example shows how to configure the BarcodeObject to display PDF417 barcode.
            <code>
            BarcodeObject barcode;
            ...
            barcode.Barcode = new BarcodePDF417();
            (barcode.Barcode as BarcodePDF417).CompactionMode = CompactionMode.Text;
            </code>
            </example>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.GetSmartTag">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Barcode">
            <summary>
            Gets or sets the barcode type.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.SymbologyName">
            <summary>
            Gets or sets the symbology name.
            </summary>
            <remarks>
            The following symbology names are supported:
            <list type="bullet">
              <item><description>"2/5 Interleaved"</description></item>
              <item><description>"2/5 Industrial"</description></item>
              <item><description>"2/5 Matrix"</description></item>
              <item><description>"Codabar"</description></item>
              <item><description>"Code128"</description></item>
              <item><description>"Code39"</description></item>
              <item><description>"Code39 Extended"</description></item>
              <item><description>"Code93"</description></item>
              <item><description>"Code93 Extended"</description></item>
              <item><description>"EAN8"</description></item>
              <item><description>"EAN13"</description></item>
              <item><description>"MSI"</description></item>
              <item><description>"PostNet"</description></item>
              <item><description>"UPC-A"</description></item>
              <item><description>"UPC-E0"</description></item>
              <item><description>"UPC-E1"</description></item>
              <item><description>"Supplement 2"</description></item>
              <item><description>"Supplement 5"</description></item>
              <item><description>"PDF417"</description></item>
              <item><description>"Datamatrix"</description></item>
              <item><description>"QRCode"</description></item>
            </list>
            </remarks>
            <example>
            <code>
            barcode.SymbologyName = "PDF417";
            (barcode.Barcode as BarcodePDF417).CompactionMode = CompactionMode.Text;
            </code>
            </example>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Angle">
            <summary>
            Gets or sets the angle of barcode, in degrees.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.AutoSize">
            <summary>
            Gets or sets a value that determines whether the barcode should handle its width automatically.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.DataColumn">
            <summary>
            Gets or sets a data column name bound to this control.
            </summary>
            <remarks>
            Value must be in the form "Datasource.Column".
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Expression">
            <summary>
            Gets or sets an expression that contains the barcode data.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.AllowExpressions">
            <summary>
            Enable or disable of using an expression in Text
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Brackets">
            <summary>
            Gets or sets brackets for using in expressions
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.ShowText">
            <summary>
            Gets or sets a value that indicates if the barcode should display a human-readable text.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Text">
            <summary>
            Gets or sets the barcode data.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Padding">
            <summary>
            Gets or sets padding within the BarcodeObject.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.Zoom">
            <summary>
            Gets or sets a zoom of the barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.HideIfNoData">
            <summary>
            Gets or sets a value that determines whether it is necessary to hide the object if the
            barcode data is empty.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.NoDataText">
            <summary>
            Gets or sets the text that will be displayed if the barcode data is empty.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeObject.AsBitmap">
            <summary>
            Gets or sets values for forced use of a bitmap image instead of a vector
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeObject"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.IsHaveToConvert(System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeObject.GetConvertedObjects">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.AztecCode">
            <summary>
            Aztec 2D code representation
            </summary>
            <author>Rustam Abdullaev</author>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecCode.isCompact">
            <summary>
            Compact or full symbol indicator
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecCode.Size">
            <summary>
            Size in pixels (width and height)
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecCode.Layers">
            <summary>
            Number of levels
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecCode.CodeWords">
            <summary>
            Number of data codewords
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecCode.Matrix">
            <summary>
            The symbol image
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.AztecEncodingOptions">
            <summary>
            The class holds the available options for the AztecWriter
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecEncodingOptions.ErrorCorrection">
            <summary>
            Representing the minimal percentage of error correction words. 
            Note: an Aztec symbol should have a minimum of 25% EC words.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.AztecEncodingOptions.Layers">
            <summary>
            Specifies the required number of layers for an Aztec code:
            a negative number (-1, -2, -3, -4) specifies a compact Aztec code
            0 indicates to use the minimum number of layers (the default)
            a positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.BitArray">
            <summary>
            A simple, fast array of bits, represented compactly by an array of ints internally.
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.flip(System.Int32)">
            <summary> Flips bit i.
            
            </summary>
            <param name="i">bit to set
            </param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.getNextSet(System.Int32)">
            <summary>
            Gets the next set.
            </summary>
            <param name="from">first bit to check</param>
            <returns>index of first bit that is set, starting from the given index, or size if none are set
            at or beyond this given index</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.getNextUnset(System.Int32)">
            <summary>
            see getNextSet(int)
            </summary>
            <param name="from">index to start looking for unset bit</param>
            <returns>index of next unset bit, or <see cref="P:FastReport.Barcode.Aztec.BitArray.Size"/> if none are unset until the end</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.setBulk(System.Int32,System.Int32)">
            <summary> Sets a block of 32 bits, starting at bit i.
            
            </summary>
            <param name="i">first bit to set
            </param>
            <param name="newBits">the new value of the next 32 bits. Note again that the least-significant bit
            corresponds to bit i, the next-least-significant to i+1, and so on.
            </param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.setRange(System.Int32,System.Int32)">
            <summary>
            Sets a range of bits.
            </summary>
            <param name="start">start of range, inclusive.</param>
            <param name="end">end of range, exclusive</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.clear">
            <summary> Clears all bits (sets to false).</summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.isRange(System.Int32,System.Int32,System.Boolean)">
            <summary> Efficient method to check if a range of bits is set, or not set.
            
            </summary>
            <param name="start">start of range, inclusive.
            </param>
            <param name="end">end of range, exclusive
            </param>
            <param name="value">if true, checks that bits in range are set, otherwise checks that they are not set
            </param>
            <returns> true iff all bits are set or not set in range, according to value argument
            </returns>
            <throws>  IllegalArgumentException if end is less than or equal to start </throws>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.appendBit(System.Boolean)">
            <summary>
            Appends the bit.
            </summary>
            <param name="bit">The bit.</param>
        </member>
        <member name="P:FastReport.Barcode.Aztec.BitArray.Array">
            <returns> underlying array of ints. The first element holds the first 32 bits, and the least
            significant bit is bit 0.
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.appendBits(System.Int32,System.Int32)">
            <summary>
            Appends the least-significant bits, from value, in order from most-significant to
            least-significant. For example, appending 6 bits from 0x000001E will append the bits
            0, 1, 1, 1, 1, 0 in that order.
            </summary>
            <param name="value"><see cref="T:System.Int32"/> containing bits to append</param>
            <param name="numBits">bits from value to append</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.toBytes(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Toes the bytes.
            </summary>
            <param name="bitOffset">first bit to start writing</param>
            <param name="array">array to write into. Bytes are written most-significant byte first. This is the opposite
            of the internal representation, which is exposed by BitArray</param>
            <param name="offset">position in array to start writing</param>
            <param name="numBytes">how many bytes to write</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.reverse">
            <summary> Reverses all bits in the array.</summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="o">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitArray.Clone">
            <summary>
            Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.
            </summary>
            <returns>
            Ein neues Objekt, das eine Kopie dieser Instanz darstellt.
            </returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.BitMatrix">
            <summary>
              <p>Represents a 2D matrix of bits. In function arguments below, and throughout the common
            module, x is the column position, and y is the row position. The ordering is always x, y.
            The origin is at the top-left.</p>
              <p>Internally the bits are represented in a 1-D array of 32-bit ints. However, each row begins
            with a new int. This is done intentionally so that we can copy out a row into a BitArray very
            efficiently.</p>
              <p>The ordering of bits is row-major. Within each int, the least significant bits are used first,
            meaning they represent lower x values. This is compatible with BitArray's implementation.</p>
            </summary>
            <author>Sean Owen</author>
            <author>dswitkin@google.com (Daniel Switkin)</author>
        </member>
        <member name="P:FastReport.Barcode.Aztec.BitMatrix.Width">
            <returns> The width of the matrix
            </returns>
        </member>
        <member name="P:FastReport.Barcode.Aztec.BitMatrix.Height">
            <returns> The height of the matrix
            </returns>
        </member>
        <member name="P:FastReport.Barcode.Aztec.BitMatrix.Dimension">
            <summary> This method is for compatibility with older code. It's only logical to call if the matrix
            is square, so I'm throwing if that's not the case.
            
            </summary>
            <returns> row/column dimension of this matrix
            </returns>
        </member>
        <member name="P:FastReport.Barcode.Aztec.BitMatrix.Item(System.Int32,System.Int32)">
            <summary> <p>Gets the requested bit, where true means black.</p>
            
            </summary>
            <param name="x">The horizontal component (i.e. which column)
            </param>
            <param name="y">The vertical component (i.e. which row)
            </param>
            <returns> value of given bit in matrix
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.flip(System.Int32,System.Int32)">
            <summary> <p>Flips the given bit.</p>
            
            </summary>
            <param name="x">The horizontal component (i.e. which column)
            </param>
            <param name="y">The vertical component (i.e. which row)
            </param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.clear">
            <summary> Clears all bits (sets to false).</summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.setRegion(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> <p>Sets a square region of the bit matrix to true.</p>
            
            </summary>
            <param name="left">The horizontal position to begin at (inclusive)
            </param>
            <param name="top">The vertical position to begin at (inclusive)
            </param>
            <param name="width">The width of the region
            </param>
            <param name="height">The height of the region
            </param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.getRow(System.Int32,FastReport.Barcode.Aztec.BitArray)">
            <summary> A fast method to retrieve one row of data from the matrix as a BitArray.
            
            </summary>
            <param name="y">The row to retrieve
            </param>
            <param name="row">An optional caller-allocated BitArray, will be allocated if null or too small
            </param>
            <returns> The resulting BitArray - this reference should always be used even when passing
            your own row
            </returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.setRow(System.Int32,FastReport.Barcode.Aztec.BitArray)">
            <summary>
            Sets the row.
            </summary>
            <param name="y">row to set</param>
            <param name="row">{@link BitArray} to copy from</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.rotate180">
            <summary>
            Modifies this {@code BitMatrix} to represent the same but rotated 180 degrees
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.getEnclosingRectangle">
            <summary>
            This is useful in detecting the enclosing rectangle of a 'pure' barcode.
            </summary>
            <returns>{left,top,width,height} enclosing rectangle of all 1 bits, or null if it is all white</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.BitMatrix.getTopLeftOnBit">
            <summary>
            This is useful in detecting a corner of a 'pure' barcode.
            </summary>
            <returns>{x,y} coordinate of top-left-most 1 bit, or null if it is all white</returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.EncodeHintType">
            <summary>
            These are a set of hints that you may pass to Writers to specify their behavior.
            </summary>
            <author>dswitkin@google.com (Daniel Switkin)</author>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.WIDTH">
            <summary>
            Specifies the width of the barcode image
            type: <see cref="T:System.Int32" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.HEIGHT">
            <summary>
            Specifies the height of the barcode image
            type: <see cref="T:System.Int32" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.PURE_BARCODE">
            <summary>
            Don't put the content string into the output image.
            type: <see cref="T:System.Boolean" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.CHARACTER_SET">
            <summary>
            Specifies what character encoding to use where applicable.
            type: <see cref="T:System.String" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.MARGIN">
            <summary>
            Specifies margin, in pixels, to use when generating the barcode. The meaning can vary
            by format; for example it controls margin before and after the barcode horizontally for
            most 1D formats.
            type: <see cref="T:System.Int32" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.PDF417_COMPACT">
            <summary>
            Specifies whether to use compact mode for PDF417.
            type: <see cref="T:System.Boolean" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.DISABLE_ECI">
            <summary>
            Don't append ECI segment.
            That is against the specification of QR Code but some
            readers have problems if the charset is switched from
            ISO-8859-1 (default) to UTF-8 with the necessary ECI segment.
            If you set the property to true you can use UTF-8 encoding
            and the ECI segment is omitted.
            type: <see cref="T:System.Boolean" />
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.CODE128_FORCE_CODESET_B">
            <summary>
            if true, don't switch to codeset C for numbers
            </summary>
        </member>
        <member name="F:FastReport.Barcode.Aztec.EncodeHintType.AZTEC_LAYERS">
            <summary>
            Specifies the required number of layers for an Aztec code:
            a negative number (-1, -2, -3, -4) specifies a compact Aztec code
            0 indicates to use the minimum number of layers (the default)
            a positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.Encoder">
            <summary>
            Generates Aztec 2D barcodes.
            </summary>
            <author>Rustam Abdullaev</author>
        </member>
        <member name="M:FastReport.Barcode.Aztec.Encoder.encode(System.Byte[])">
            <summary>
            Encodes the given binary content as an Aztec symbol
            </summary>
            <param name="data">input data string</param>
            <returns>Aztec symbol matrix with metadata</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.Encoder.encode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encodes the given binary content as an Aztec symbol
            </summary>
            <param name="data">input data string</param>
            <param name="minECCPercent">minimal percentage of error check words (According to ISO/IEC 24778:2008,
            a minimum of 23% + 3 words is recommended)</param>
            <param name="userSpecifiedLayers">if non-zero, a user-specified value for the number of layers</param>
            <returns>
            Aztec symbol matrix with metadata
            </returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.EncodingOptions">
            <summary>
            Defines an container for encoder options
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.EncodingOptions.Hints">
            <summary>
            Gets the data container for all options
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.EncodingOptions.Height">
            <summary>
            Specifies the height of the barcode image
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.EncodingOptions.Width">
            <summary>
            Specifies the width of the barcode image
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.EncodingOptions.PureBarcode">
            <summary>
            Don't put the content string into the output image.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.EncodingOptions.Margin">
            <summary>
            Specifies margin, in pixels, to use when generating the barcode. The meaning can vary
            by format; for example it controls margin before and after the barcode horizontally for
            most 1D formats.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.EncodingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Aztec.EncodingOptions"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.GenericGF">
            <summary>
              <p>This class contains utility methods for performing mathematical operations over
            the Galois Fields. Operations use a given primitive polynomial in calculations.</p>
              <p>Throughout this package, elements of the GF are represented as an {@code int}
            for convenience and speed (but at the cost of memory).
              </p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a representation of GF(size) using the given primitive polynomial.
            </summary>
            <param name="primitive">irreducible polynomial whose coefficients are represented by
            *  the bits of an int, where the least-significant bit represents the constant
            *  coefficient</param>
            <param name="size">the size of the field</param>
            <param name="genBase">the factor b in the generator polynomial can be 0- or 1-based
            *  (g(x) = (x+a^b)(x+a^(b+1))...(x+a^(b+2t-1))).
            *  In most cases it should be 1, but for QR code it is 0.</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.buildMonomial(System.Int32,System.Int32)">
            <summary>
            Builds the monomial.
            </summary>
            <param name="degree">The degree.</param>
            <param name="coefficient">The coefficient.</param>
            <returns>the monomial representing coefficient * x^degree</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.addOrSubtract(System.Int32,System.Int32)">
            <summary>
            Implements both addition and subtraction -- they are the same in GF(size).
            </summary>
            <returns>sum/difference of a and b</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.exp(System.Int32)">
            <summary>
            Exps the specified a.
            </summary>
            <returns>2 to the power of a in GF(size)</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.log(System.Int32)">
            <summary>
            Logs the specified a.
            </summary>
            <param name="a">A.</param>
            <returns>base 2 log of a in GF(size)</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.inverse(System.Int32)">
            <summary>
            Inverses the specified a.
            </summary>
            <returns>multiplicative inverse of a</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.multiply(System.Int32,System.Int32)">
            <summary>
            Multiplies the specified a with b.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>product of a and b in GF(size)</returns>
        </member>
        <member name="P:FastReport.Barcode.Aztec.GenericGF.Size">
            <summary>
            Gets the size.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.GenericGF.GeneratorBase">
            <summary>
            Gets the generator base.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGF.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.GenericGFPoly">
            <summary>
            <p>Represents a polynomial whose coefficients are elements of a GF.
            Instances of this class are immutable.</p>
            <p>Much credit is due to William Rucklidge since portions of this code are an indirect
            port of his C++ Reed-Solomon implementation.</p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGFPoly.#ctor(FastReport.Barcode.Aztec.GenericGF,System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Aztec.GenericGFPoly"/> class.
            </summary>
            <param name="field">the {@link GenericGF} instance representing the field to use
            to perform computations</param>
            <param name="coefficients">coefficients as ints representing elements of GF(size), arranged
            from most significant (highest-power term) coefficient to least significant</param>
            <exception cref="T:System.ArgumentException">if argument is null or empty,
            or if leading coefficient is 0 and this is not a
            constant polynomial (that is, it is not the monomial "0")</exception>
        </member>
        <member name="P:FastReport.Barcode.Aztec.GenericGFPoly.Degree">
            <summary>
            degree of this polynomial
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Aztec.GenericGFPoly.isZero">
            <summary>
            Gets a value indicating whether this <see cref="T:FastReport.Barcode.Aztec.GenericGFPoly"/> is zero.
            </summary>
            <value>true iff this polynomial is the monomial "0"</value>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGFPoly.getCoefficient(System.Int32)">
            <summary>
            coefficient of x^degree term in this polynomial
            </summary>
            <param name="degree">The degree.</param>
            <returns>coefficient of x^degree term in this polynomial</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.GenericGFPoly.evaluateAt(System.Int32)">
            <summary>
            evaluation of this polynomial at a given point
            </summary>
            <param name="a">A.</param>
            <returns>evaluation of this polynomial at a given point</returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.HighLevelEncoder">
            <summary>
            This produces nearly optimal encodings of text into the first-level of
            encoding used by Aztec code.
            It uses a dynamic algorithm.  For each prefix of the string, it determines
            a set of encodings that could lead to this prefix.  We repeatedly add a
            character and generate a new set of optimal encodings until we have read
            through the entire input.
            @author Frank Yellin
            @author Rustam Abdullaev
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.HighLevelEncoder.encode">
            <summary>
            Convert the text represented by this High Level Encoder into a BitArray.
            </summary>
            <returns>text represented by this encoder encoded as a <see cref="T:FastReport.Barcode.Aztec.BitArray"/></returns>
        </member>
        <member name="T:FastReport.Barcode.Aztec.ReedSolomonEncoder">
            <summary>
            Implements Reed-Solomon encoding, as the name implies.
            </summary>
            <author>Sean Owen</author>
            <author>William Rucklidge</author>
        </member>
        <member name="T:FastReport.Barcode.Aztec.State">
            <summary>
            State represents all information about a sequence necessary to generate the current output.
            Note that a state is immutable.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.State.latchAndAppend(System.Int32,System.Int32)">
            <summary>
            Create a new state representing this state with a latch to a (not
            necessary different) mode, and then a code.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.State.shiftAndAppend(System.Int32,System.Int32)">
            <summary>
            Create a new state representing this state, with a temporary shift
            to a different mode to output a single value.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.State.addBinaryShiftChar(System.Int32)">
            <summary>
            Create a new state representing this state, but an additional character
            output in Binary Shift mode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.State.endBinaryShift(System.Int32)">
            <summary>
            Create the state identical to this one, but we are no longer in
            Binary Shift mode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.State.isBetterThanOrEqualTo(FastReport.Barcode.Aztec.State)">
            <summary>
            Returns true if "this" state is better (or equal) to be in than "that"
            state under all possible circumstances.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Aztec.SupportClass">
            <summary>
            Contains conversion support elements such as classes, interfaces and static methods.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.GetCharsFromString(System.String,System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Copies an array of chars obtained from a String into a specified array of chars
            </summary>
            <param name="sourceString">The String to get the chars from</param>
            <param name="sourceStart">Position of the String to start getting the chars</param>
            <param name="sourceEnd">Position of the String to end getting the chars</param>
            <param name="destinationArray">Array to return the chars</param>
            <param name="destinationStart">Position of the destination array of chars to start storing the chars</param>
            <returns>An array of chars</returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.SetCapacity``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Sets the capacity for the specified List
            </summary>
            <param name="vector">The List which capacity will be set</param>
            <param name="newCapacity">The new capacity value</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.toStringArray(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Converts a string-Collection to an array
            </summary>
            <param name="strings">The strings.</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Joins all elements to one string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="separator">The separator.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.Fill``1(``0[],``0)">
            <summary>
            Fills the specified array.
            (can't use extension method because of .Net 2.0 support)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:FastReport.Barcode.Aztec.SupportClass.Fill``1(``0[],System.Int32,System.Int32,``0)">
            <summary>
            Fills the specified array.
            (can't use extension method because of .Net 2.0 support)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">The array.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:FastReport.Barcode.Barcode128">
            <summary>
            Generates the Code128 barcode.
            </summary>
            <remarks>
            This barcode supports three code pages: A, B and C. You need to set appropriate code page
            in the barcode text, or use the auto encode feature. See the <see cref="P:FastReport.Barcode.Barcode128.AutoEncode"/> property
            for more details.
            </remarks>
            <example>This example shows how to configure the BarcodeObject to display Code128 barcode.
            <code>
            BarcodeObject barcode;
            ...
            barcode.Barcode = new Barcode128();
            (barcode.Barcode as Barcode128).AutoEncode = false;
            </code>
            </example>
        </member>
        <member name="P:FastReport.Barcode.Barcode128.AutoEncode">
            <summary>
            Gets or sets a value that determines whether the barcode should automatically 
            use appropriate encoding.
            </summary>
            <remarks>
            You may use this property to encode data automatically. If you set it to <b>false</b>, 
            you must specify the code page inside the data string. The following control codes are available:
            <list type="table">
              <listheader>
                <term>Sequence</term>
                <description>Code128 control code</description>
              </listheader>
              <item>
                <term>&amp;A;</term>
                <description>START A / CODE A</description>
              </item>
              <item>
                <term>&amp;B;</term>
                <description>START B / CODE B</description>
              </item>
              <item>
                <term>&amp;C;</term>
                <description>START C / CODE C</description>
              </item>
            </list>
              <item>
                <term>&amp;S;</term>
                <description>SHIFT</description>
              </item>
              <item>
                <term>&amp;1;</term>
                <description>FNC1</description>
              </item>
              <item>
                <term>&amp;2;</term>
                <description>FNC2</description>
              </item>
              <item>
                <term>&amp;3;</term>
                <description>FNC3</description>
              </item>
              <item>
                <term>&amp;4;</term>
                <description>FNC4</description>
              </item>
            </remarks>
            <example>The following example shows how to specify control codes:
            <code>
            BarcodeObject barcode;
            barcode.Barcode = new Barcode128();
            (barcode.Barcode as Barcode128).AutoEncode = false;
            barcode.Text = "&amp;C;1234&amp;A;ABC";
            </code>
            </example>
        </member>
        <member name="P:FastReport.Barcode.Barcode128.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.Barcode128.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.Barcode128.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Barcode128"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode2DBase">
            <summary>
            The base class for 2D-barcodes such as PDF417 and Datamatrix.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode2of5Interleaved">
            <summary>
            Generates the "2/5 Interleaved" barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Barcode2of5Interleaved.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Barcode2of5Interleaved"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode2of5Industrial">
            <summary>
            Generates the "2/5 Industrial" barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode2of5Matrix">
            <summary>
            Generates the "2/5 Matrix" barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.Barcode2of5Matrix.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Barcode2of5Matrix"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode39">
            <summary>
            Generates the Code39 barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Barcode39.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.Barcode39.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.Barcode39"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode39Extended">
            <summary>
            Generates the Code39 extended barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.Barcode93">
            <summary>
            Generates the Code93 barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.Barcode93.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Barcode.Barcode93Extended">
            <summary>
            Generates the Code93 extended barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeAztec">
            <summary>
            Generates the 2D Aztec barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeAztec.ErrorCorrectionPercent">
            <summary>
            Gets or sets the error correction percent.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeAztec.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeAztec"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeAztec.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Barcode.BarcodeBase">
            <summary>
            The base class for all barcodes.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeBase.Name">
            <summary>
            Gets the name of barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeBase.Color">
            <summary>
            Gets or sets the color of barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeBase.Clone">
            <summary>
            Creates the exact copy of this barcode.
            </summary>
            <returns>The copy of this barcode.</returns>
        </member>
        <member name="M:FastReport.Barcode.BarcodeBase.Assign(FastReport.Barcode.BarcodeBase)">
            <summary>
            Assigns properties from other, similar barcode.
            </summary>
            <param name="source">Barcode object to assign properties from.</param>
        </member>
        <member name="M:FastReport.Barcode.BarcodeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeCodabar">
            <summary>
            Generates the Codabar barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeCodabar.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeCodabar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeCodabar"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.DatamatrixEncoding">
            <summary>
            Specifies the Datamatrix encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.Auto">
            <summary>
            Specifies the auto encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.Ascii">
            <summary>
            Specifies the ASCII encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.C40">
            <summary>
            Specifies the C40 encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.Text">
            <summary>
            Specifies the text encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.Base256">
            <summary>
            Specifies the binary encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.X12">
            <summary>
            Specifies the X12 encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixEncoding.Edifact">
            <summary>
            Specifies the Edifact encoding.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.DatamatrixSymbolSize">
            <summary>
            Specifies the Datamatrix symbol size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Auto">
            <summary>
            Specifies the auto size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size10x10">
            <summary>
            Specifies the 10x10 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size12x12">
            <summary>
            Specifies the 12x12 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size8x18">
            <summary>
            Specifies the 8x8 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size14x14">
            <summary>
            Specifies the 14x14 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size8x32">
            <summary>
            Specifies the 8x32 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size16x16">
            <summary>
            Specifies the 16x16 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size12x26">
            <summary>
            Specifies the 12x26 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size18x18">
            <summary>
            Specifies the 18x18 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size20x20">
            <summary>
            Specifies the 20x20 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size12x36">
            <summary>
            Specifies the 12x36 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size22x22">
            <summary>
            Specifies the 22x22 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size16x36">
            <summary>
            Specifies the 16x36 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size24x24">
            <summary>
            Specifies the 24x24 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size26x26">
            <summary>
            Specifies the 26x26 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size16x48">
            <summary>
            Specifies the 16x48 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size32x32">
            <summary>
            Specifies the 32x32 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size36x36">
            <summary>
            Specifies the 36x36 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size40x40">
            <summary>
            Specifies the 40x40 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size44x44">
            <summary>
            Specifies the 44x44 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size48x48">
            <summary>
            Specifies the 48x48 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size52x52">
            <summary>
            Specifies the 52x52 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size64x64">
            <summary>
            Specifies the 64x64 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size72x72">
            <summary>
            Specifies the 72x72 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size80x80">
            <summary>
            Specifies the 80x80 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size88x88">
            <summary>
            Specifies the 88x88 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size96x96">
            <summary>
            Specifies the 96x96 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size104x104">
            <summary>
            Specifies the 104x104 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size120x120">
            <summary>
            Specifies the 120x120 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size132x132">
            <summary>
            Specifies the 132x132 size.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.DatamatrixSymbolSize.Size144x144">
            <summary>
            Specifies the 144x144 size.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeDatamatrix">
            <summary>
            Generates the 2D Data Matrix barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeDatamatrix.SymbolSize">
            <summary>
            Gets or sets the symbol size.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeDatamatrix.Encoding">
            <summary>
            Gets or sets the encoding mode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeDatamatrix.CodePage">
            <summary>
            Gets or sets the code page used for text conversion.
            </summary>
            <remarks>
            Use this property to encode non-ASCII characters. For example, set this 
            property to <b>1251</b> to use Window CP1251.
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodeDatamatrix.PixelSize">
            <summary>
            Gets or sets the size of the pixel.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeDatamatrix.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeDatamatrix.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeDatamatrix"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeEAN">
            <summary>
            The base class for EAN barcodes.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeEAN.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeEAN"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeEAN8">
            <summary>
            Generates the EAN8 barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeEAN13">
            <summary>
            Generates the EAN13 barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeEAN13.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeEAN13"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeEAN128">
            <summary>
            Generates the GS1-128 (formerly known as UCC-128 or EAN-128) barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeEAN128.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeEAN128"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeIntelligentMail">
            <summary>
            Generates the Intelligent Mail (USPS) barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeIntelligentMail.QuietZone">
            <summary>
            Gets or sets the value indicating that quiet zone must be shown.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeIntelligentMail.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeIntelligentMail.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeIntelligentMail.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeIntelligentMail"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeMaxiCode">
            <summary>
            Generates the 2D MaxiCode barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeMaxiCode.Mode">
            <summary>
            Sets the MaxiCode mode to use. Only modes 2 to 6 are supported.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeMaxiCode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeMaxiCode"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeMaxiCode.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Barcode.MaxiCodeImpl">
             Implements MaxiCode according to ISO 16023:2000.
            
             MaxiCode employs a pattern of hexagons around a central 'bulls-eye'
             finder pattern. Encoding in several modes is supported, but encoding in
             Mode 2 and 3 require primary messages to be set. Input characters can be
             any from the ISO 8859-1 (Latin-1) character set.
            
             TODO: Add ECI functionality.
            
             @author <a href="mailto:rstuart114@gmail.com">Robin Stuart</a>
             @author Daniel Gredler
        </member>
        <member name="F:FastReport.Barcode.MaxiCodeImpl.MAXICODE_GRID">
            MaxiCode module sequence, from ISO/IEC 16023 Figure 5 (30 x 33 data grid). 
        </member>
        <member name="F:FastReport.Barcode.MaxiCodeImpl.MAXICODE_SET">
            ASCII character to Code Set mapping, from ISO/IEC 16023 Appendix A.
            1 = Set A, 2 = Set B, 3 = Set C, 4 = Set D, 5 = Set E.
            0 refers to special characters that fit into more than one set (e.g. GS).
        </member>
        <member name="F:FastReport.Barcode.MaxiCodeImpl.MAXICODE_SYMBOL_CHAR">
            ASCII character to symbol value, from ISO/IEC 16023 Appendix A. 
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.setMode(System.Int32)">
             Sets the MaxiCode mode to use. Only modes 2 to 6 are supported.
            
             @param mode the MaxiCode mode to use
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getMode">
             Returns the MaxiCode mode being used. Only modes 2 to 6 are supported.
            
             @return the MaxiCode mode being used
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.setStructuredAppendPosition(System.Int32)">
             If this MaxiCode symbol is part of a series of MaxiCode symbols appended in a structured format, this method sets the
             position of this symbol in the series. Valid values are 1 through 8 inclusive.
            
             @param position the position of this MaxiCode symbol in the structured append series
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getStructuredAppendPosition">
             Returns the position of this MaxiCode symbol in a series of symbols using structured append. If this symbol is not part of
             such a series, this method will return <code>1</code>.
            
             @return the position of this MaxiCode symbol in a series of symbols using structured append
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.setStructuredAppendTotal(System.Int32)">
             If this MaxiCode symbol is part of a series of MaxiCode symbols appended in a structured format, this method sets the total
             number of symbols in the series. Valid values are 1 through 8 inclusive. A value of 1 indicates that this symbol is not
             part of a structured append series.
            
             @param total the total number of MaxiCode symbols in the structured append series
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getStructuredAppendTotal">
             Returns the size of the series of MaxiCode symbols using structured append that this symbol is part of. If this symbol is
             not part of a structured append series, this method will return <code>1</code>.
            
             @return size of the series that this symbol is part of
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.setPrimary(System.String)">
             Sets the primary data. Should only be used for modes 2 and 3. Must conform to the following structure:
            
             <table summary="Expected primary data structure.">
               <tr><th>Characters</th><th>Meaning</th></tr>
               <tr><td>1-9</td><td>Postal code data which can consist of up to 9 digits (for mode 2) or up to 6
                                   alphanumeric characters (for mode 3). Remaining unused characters should be
                                   filled with the SPACE character (ASCII 32).</td></tr>
               <tr><td>10-12</td><td>Three-digit country code according to ISO-3166.</td></tr>
               <tr><td>13-15</td><td>Three digit service code. This depends on your parcel courier.</td></tr>
             </table>
            
             @param primary the primary data
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getPrimary">
             Returns the primary data for this MaxiCode symbol. Should only be used for modes 2 and 3.
            
             @return the primary data for this MaxiCode symbol
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.encode">
            {@inheritDoc} 
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getPrimaryCodewords">
             Extracts the postal code, country code and service code from the primary data and returns the corresponding primary message
             codewords.
            
             @return the primary message codewords
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getMode2PrimaryCodewords(System.String,System.Int32,System.Int32)">
             Returns the primary message codewords for mode 2.
            
             @param postcode the postal code
             @param country the country code
             @param service the service code
             @return the primary message, as codewords
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getMode3PrimaryCodewords(System.String,System.Int32,System.Int32)">
             Returns the primary message codewords for mode 3.
            
             @param postcode the postal code
             @param country the country code
             @param service the service code
             @return the primary message, as codewords
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.processText">
             Formats text according to Appendix A, populating the {@link #set} and {@link #character} arrays.
            
             @return true if the content fits in this symbol and was formatted; false otherwise
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.bestSurroundingSet(System.Int32,System.Int32,System.Int32[])">
             Guesses the best set to use at the specified index by looking at the surrounding sets. In general, characters in
             lower-numbered sets are more common, so we choose them if we can. If no good surrounding sets can be found, the default
             value returned is the first value from the valid set.
            
             @param index the current index
             @param Length the maximum Length to look at
             @param valid the valid sets for this index
             @return the best set to use at the specified index
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.insert(System.Int32,System.Int32)">
             Moves everything up so that the specified shift or latch character can be inserted.
            
             @param position the position beyond which everything needs to be shifted
             @param c the latch or shift character to insert at the specified position, after everything has been shifted
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getErrorCorrection(System.Int32[],System.Int32)">
             Returns the error correction codewords for the specified data codewords.
            
             @param codewords the codewords that we need error correction codewords for
             @param ecclen the number of error correction codewords needed
             @return the error correction codewords for the specified data codewords
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.plotSymbol">
            {@inheritDoc} 
        </member>
        <member name="M:FastReport.Barcode.MaxiCodeImpl.getCodewords">
            {@inheritDoc} 
        </member>
        <member name="T:FastReport.Barcode.BarcodeMSI">
            <summary>
            Generates the MSI barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.PDF417ErrorCorrection">
            <summary>
            Specifies the error correction level used for PDF417 barcode.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Auto">
            <summary>
            Indicates that correction level should be calculated automatically.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level0">
            <summary>
            Specifies level 0.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level1">
            <summary>
            Specifies level 1.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level2">
            <summary>
            Specifies level 2.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level3">
            <summary>
            Specifies level 3.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level4">
            <summary>
            Specifies level 4.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level5">
            <summary>
            Specifies level 5.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level6">
            <summary>
            Specifies level 6.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level7">
            <summary>
            Specifies level 7.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417ErrorCorrection.Level8">
            <summary>
            Specifies level 8.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.PDF417CompactionMode">
            <summary>
            Specifies the compaction mode used for PDF417 barcode.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417CompactionMode.Auto">
            <summary>
            Indicates that compaction mode should be calculated automatically.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417CompactionMode.Text">
            <summary>
            Specifies the text compaction mode.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417CompactionMode.Numeric">
            <summary>
            Specifies the numeric compaction mode.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.PDF417CompactionMode.Binary">
            <summary>
            Specifies the binary compaction mode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodePDF417">
            <summary>
            Generates the 2D PDF417 barcode.
            </summary>
            <example>This example shows how to configure the BarcodeObject to display PDF417 barcode.
            <code>
            BarcodeObject barcode;
            ...
            barcode.Barcode = new BarcodePDF417();
            (barcode.Barcode as BarcodePDF417).CompactionMode = PDF417CompactionMode.Text;
            </code>
            </example>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.AspectRatio">
            <summary>
            Gets or sets the barcode aspect ratio. 
            </summary>
            <remarks>
            A ratio or 0.5 will make the barcode width twice as large as the height.
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.Columns">
            <summary>
            Gets or sets the number of barcode data columns.
            </summary>
            <remarks>
            To calculate the necessary number of columns and rows, set the <see cref="P:FastReport.Barcode.BarcodePDF417.Columns"/> 
            and <see cref="P:FastReport.Barcode.BarcodePDF417.Rows"/> properties to 0. In this case, the <see cref="P:FastReport.Barcode.BarcodePDF417.AspectRatio"/> property
            should be set to desired aspect ratio.
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.Rows">
            <summary>
            Gets or sets the number of barcode data rows.
            </summary>
            <remarks>
            To calculate the necessary number of columns and rows, set the <see cref="P:FastReport.Barcode.BarcodePDF417.Columns"/> 
            and <see cref="P:FastReport.Barcode.BarcodePDF417.Rows"/> properties to 0. In this case, the <see cref="P:FastReport.Barcode.BarcodePDF417.AspectRatio"/> property
            should be set to desired aspect ratio.
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.ErrorCorrection">
            <summary>
            Gets or sets the error level correction used for the barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.CodePage">
            <summary>
            Gets or sets the code page used for text conversion.
            </summary>
            <remarks>
            Use this property to encode non-ASCII characters. For example, set this 
            property to <b>1251</b> to use Window CP1251.
            </remarks>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.CompactionMode">
            <summary>
            Gets or sets the compaction mode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodePDF417.PixelSize">
            <summary>
            Gets or sets the size of the pixel.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodePDF417.PaintCode">
            Paints the barcode. If no exception was thrown a valid barcode is available. 
        </member>
        <member name="M:FastReport.Barcode.BarcodePDF417.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodePDF417.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodePDF417"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodePharmacode">
            <summary>
            Generates the Pharmacode barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodePharmacode.QuietZone">
            <summary>
            Gets or sets the value indicating that quiet zone must be shown.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodePharmacode.IsNumeric">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodePharmacode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodePharmacode"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodePharmacode.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Barcode.BarcodePlessey">
            <summary>
            Generates the Plessey barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodePlessey.appendPattern(System.Boolean[],System.Int32,System.Int32[],System.Boolean)">
            <summary>
            Appends the given pattern to the target array starting at pos.
            </summary>
            <param name="target">encode black/white pattern into this array</param>
            <param name="pos">position to start encoding at in <c>target</c></param>
            <param name="pattern">lengths of black/white runs to encode</param>
            <param name="startColor">starting color - false for white, true for black</param>
            <returns>the number of elements added to target.</returns>
        </member>
        <member name="T:FastReport.Barcode.BarcodePostNet">
            <summary>
            Generates the PostNet barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.QRCodeErrorCorrection">
            <summary>
            Specifies the QR code error correction level.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeErrorCorrection.L">
            <summary>
            L = ~7% correction.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeErrorCorrection.M">
            <summary>
            M = ~15% correction.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeErrorCorrection.Q">
            <summary>
            Q = ~25% correction.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeErrorCorrection.H">
            <summary>
            H = ~30% correction.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.QRCodeEncoding">
            <summary>
            Specifies the QR Code encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeEncoding.UTF8">
            <summary>
            UTF-8 encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeEncoding.ISO8859_1">
            <summary>
            ISO 8859-1 encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeEncoding.Shift_JIS">
            <summary>
            Shift_JIS encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeEncoding.Windows_1251">
            <summary>
            Windows-1251 encoding.
            </summary>
        </member>
        <member name="F:FastReport.Barcode.QRCodeEncoding.cp866">
            <summary>
            cp866 encoding.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeQR">
            <summary>
            Generates the 2D QR code barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeQR.ErrorCorrection">
            <summary>
            Gets or sets the error correction.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeQR.Encoding">
            <summary>
            Gets or sets the encoding used for text conversion.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.BarcodeQR.QuietZone">
            <summary>
            Gets or sets the value indicating that quiet zone must be shown.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeQR.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.BarcodeQR.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeQR"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeUPC_E0">
            <summary>
            Generates the UPC E0 barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeUPC_E0.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeUPC_E0"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeUPC_E1">
            <summary>
            Generates the UPC E1 barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeUPC_A">
            <summary>
            Generates the UPC A barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeSupplement2">
            <summary>
            Generates the 2-digit supplement barcode.
            </summary>
        </member>
        <member name="M:FastReport.Barcode.BarcodeSupplement2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.BarcodeSupplement2"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.BarcodeSupplement5">
            <summary>
            Generates the 5-digit supplement barcode.
            </summary>
        </member>
        <member name="T:FastReport.Barcode.LinearBarcodeBase">
            <summary>
            The base class for linear (1D) barcodes.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.LinearBarcodeBase.CalcCheckSum">
            <summary>
            Gets or sets a value that determines if the barcode object should calculate
            the check digit automatically.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.LinearBarcodeBase.WideBarRatio">
            <summary>
            Gets or sets a relative width of wide bars in the barcode.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.LinearBarcodeBase.IsNumeric">
            <summary>
            Gets the value indicating that the barcode is numeric.
            </summary>
        </member>
        <member name="P:FastReport.Barcode.LinearBarcodeBase.Trim">
            <summary>
            Gets or sets a value indicating that leading/trailing whitespaces must be trimmed.
            </summary>
            <value>
              <c>true</c> if trim; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:FastReport.Barcode.LinearBarcodeBase.Assign(FastReport.Barcode.BarcodeBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Barcode.LinearBarcodeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Barcode.LinearBarcodeBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.InsertFrom">
            <summary>
            Specifies an origin where the new objects inserted from.
            </summary>
        </member>
        <member name="F:FastReport.InsertFrom.NewObject">
            <summary>
            Specifies that a new object was inserted from the "Objects" toolbar or "Insert" menu.
            </summary>
        </member>
        <member name="F:FastReport.InsertFrom.Dictionary">
            <summary>
            Specifies that a new object was dragged from the "Dictionary" window.
            </summary>
        </member>
        <member name="F:FastReport.InsertFrom.Clipboard">
            <summary>
            Specifies that a new object was pasted from the clipboard.
            </summary>
        </member>
        <member name="T:FastReport.Base">
            <summary>
            Represents the root class of the FastReport object's hierarhy.
            </summary>
        </member>
        <member name="P:FastReport.Base.IsSelected">
            <summary>
            Gets a value indicating whether the object is selected in the designer.
            </summary>
        </member>
        <member name="P:FastReport.Base.IsParentSelected">
            <summary>
            Gets a value indicating whether one of the object's parent is selected in the designer.
            </summary>
        </member>
        <member name="M:FastReport.Base.Delete">
            <summary>
            Deletes the object in the designer.
            </summary>
            <remarks>
            <para>This method is called when you delete the object in the designer.</para>
            <para>Typically this method calls the <see cref="M:FastReport.Base.Dispose(System.Boolean)"/> method to delete the object and all 
            its children. You may override it to delete the object only, and keep children.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Base.OnBeforeInsert(System.Int32)">
            <summary>
            Called before inserting a new object in the designer.
            </summary>
            <remarks>
              <para>Do not call this method directly. You may override it if you are developing a
                new component for FastReport.</para>
              <para>
                    Some objects are registered in the designer several times with the same object
                    type, but different flags. For example, the <see cref="T:FastReport.ShapeObject"/>
                    represents different shapes: rectangle, roundrect, ellipse and so on. All these
                    shapes are registered in the designer using flags (the last parameter in this
                    code): 
                  <code>
            RegisteredObjects.Add(typeof(ShapeObject), "ReportPage,Shapes", 108, "Objects,Shapes,Rectangle", 0);
            RegisteredObjects.Add(typeof(ShapeObject), "ReportPage,Shapes", 109, "Objects,Shapes,RoundRectangle", 1);
            RegisteredObjects.Add(typeof(ShapeObject), "ReportPage,Shapes", 110, "Objects,Shapes,Ellipse", 2);
            </code>
                <para>When we put the "Ellipse" object on a band, the designer creates the
                    <b>ShapeObject</b> instance and calls its <b>OnBeforeInsert</b> method with
                    <b>flags</b> value set to 2. In turn, the <b>OnBeforeInsert</b> method converts the
                    int value of the flags to the shape kind:</para>
                  <code>
            public override void OnBeforeInsert(int flags)
            {
              FShape = (ShapeKind)flags;
            }
            </code>
              </para>
            </remarks>
            <param name="flags">Object's flags.</param>
        </member>
        <member name="M:FastReport.Base.OnAfterInsert(FastReport.InsertFrom)">
            <summary>
            Called after the new object was inserted in the designer.
            </summary>
            <remarks>
            <para>Do not call this method directly. You may override it if you are developing a new component 
            for FastReport.</para>
            <para>This method is called when new object is inserted, pasted from clipboard or dragged from
            "Dictionary" window. You may override this method if you need to perform some actions when object
            is inserted. Typical implementation invokes the object's editor if "Edit after insert" flag is set
            in the designer options.</para>
            </remarks>
            <param name="source">The insertion source.</param>
        </member>
        <member name="M:FastReport.Base.SelectionChanged">
            <summary>
            Called when the user selects another object in the designer.
            </summary>
            <remarks>
            This method is typically used by the in-place object's editor to check if selection was changed and close
            the editor.
            </remarks>
        </member>
        <member name="M:FastReport.Base.GetContextMenu">
            <summary>
            Gets the object's context menu.
            </summary>
            <returns>Null reference if object does not have a menu.</returns>
            <remarks>
            <para>Do not call this method directly. You may override it if you are developing a new component 
            for FastReport.</para>
            <para>You may use base menu classes such as <see cref="T:FastReport.ComponentBaseMenu"/>, 
            <see cref="T:FastReport.ReportComponentBaseMenu"/> to create own context menus.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Base.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
            <remarks>
              <para>Name of the report object must contain alpha, digit, underscore symbols only.
                Data objects such as <b>Variable</b>, <b>TableDataSource</b>
                etc. can have any characters in they names. Each component must have unique
                name.</para>
            </remarks>
            <example>The following code demonstrates how to find an object by its name:
            <code>
            TextObject text1 = report1.FindObject("Text1") as TextObject;
            </code>
            </example>
            <exception cref="T:FastReport.Utils.DuplicateNameException" caption="">Another object with such name exists.</exception>
            <exception cref="T:FastReport.Utils.AncestorException" caption="">Rename an object that was introduced in the ancestor report.</exception>
        </member>
        <member name="P:FastReport.Base.Restrictions">
            <summary>
            Gets or sets the flags that restrict some actions in the designer.
            </summary>
            <remarks>
            Use this property to restrict some user actions like move, resize, edit, delete. For example, if
            <b>Restriction.DontMove</b> flag is set, user cannot move the object in the designer.
            </remarks>
        </member>
        <member name="P:FastReport.Base.Flags">
            <summary>
            Gets the flags that allow some functionality in the designer.
            </summary>
            <remarks>
            Use this property only if you developing a new FastReport object.
            </remarks>
        </member>
        <member name="P:FastReport.Base.Parent">
            <summary>
            Gets or sets the parent of the object.
            </summary>
            <remarks>
              <para>Each report object must have a parent in order to appear in the report. Parent must be able to
            contain objects of such type.</para>
              <para>Another way (preferred) to set a parent is to use specific properties of the parent object. 
            For example, the <see cref="P:FastReport.Base.Report"/> object has the <see cref="P:FastReport.Report.Pages"/> collection. 
            To add a new page to the report, use the following code: <c>report1.Pages.Add(new ReportPage());</c>
              </para>
            </remarks>
            <example><code>
            Report report1;
            ReportPage page = new ReportPage();
            page.Parent = report1;
            </code></example>
            <exception cref="T:FastReport.Utils.ParentException" caption="">Parent object cannot contain this object.</exception>
        </member>
        <member name="P:FastReport.Base.BaseName">
            <summary>
            The base part of the object's name.
            </summary>
            <remarks>
            This property is used to automatically create unique object's name. See <see cref="M:FastReport.Base.CreateUniqueName"/>
            </remarks>
        </member>
        <member name="P:FastReport.Base.ClassName">
            <summary>
            Gets the short type name.
            </summary>
            <remarks>
            Returns the short type name, such as "TextObject".
            </remarks>
        </member>
        <member name="P:FastReport.Base.Report">
            <summary>
            Gets reference to the parent <see cref="P:FastReport.Base.Report"/> object.
            </summary>
        </member>
        <member name="P:FastReport.Base.Page">
            <summary>
            Gets reference to the parent <see cref="T:FastReport.PageBase"/> object.
            </summary>
        </member>
        <member name="P:FastReport.Base.ChildObjects">
            <summary>
            Gets the collection of this object's child objects.
            </summary>
            <remarks>
            This property returns child objects that belongs to this object. For example, <b>Report.ChildObjects</b>
            will return only pages that contains in the report, but not page childs such as bands. To return all
            child objects, use <see cref="P:FastReport.Base.AllObjects"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.Base.AllObjects">
            <summary>
            Gets the collection of all child objects.
            </summary>
            <remarks>
            This property returns child objects that belongs to this object and to child objects of this object. 
            For example, <b>Report.AllObjects</b> will return all objects that contains in the report - such as 
            pages, bands, text objects.
            </remarks>
        </member>
        <member name="P:FastReport.Base.ZOrder">
            <summary>
            Gets or sets the Z-order of the object.
            </summary>
            <remarks>
            The Z-order is also called "creation order". It is the index of an object in the parent's objects list.
            For example, put two text objects on a band. First object will have <b>ZOrder</b> = 0, second = 1. Setting the
            second object's <b>ZOrder</b> to 0 will move it to the back of the first text object.
            </remarks>
        </member>
        <member name="P:FastReport.Base.IsAncestor">
            <summary>
            Gets a value indicating whether the object was introduced in the ancestor report.
            </summary>
        </member>
        <member name="P:FastReport.Base.IsDesigning">
            <summary>
            Gets a value indicating whether the object is in the design state.
            </summary>
        </member>
        <member name="P:FastReport.Base.IsPrinting">
            <summary>
            Gets a value indicating whether the object is currently printing.
            </summary>
        </member>
        <member name="P:FastReport.Base.IsRunning">
            <summary>
            Gets a value indicating whether the object is currently processed by the report engine.
            </summary>
        </member>
        <member name="P:FastReport.Base.OriginalComponent">
            <summary>
            Gets an original component for this object.
            </summary>
            <remarks>
            This property is used in the preview mode. Each object in the prepared report is bound to its
            original (from the report template). This technique is used to minimize the prepared report's size.
            </remarks>
        </member>
        <member name="M:FastReport.Base.SetProp(FastReport.Base,FastReport.Base)">
            <summary>
            Helper method, helps to set a reference-type value to the property.
            </summary>
            <param name="prop">Old property value.</param>
            <param name="value">New property value.</param>
            <remarks>
            This method is used widely to set a new value to the property that references another FastReport object.
            Method deals with the <see cref="P:FastReport.Base.Parent"/> property.
            </remarks>
            <example>This is example of the <c>DataBand.Header</c> property:<code>
            public DataHeaderBand Header
            {
              get { return FHeader; }
              set
              {
                SetProp(FHeader, value);
                FHeader = value;
              }
            }
            </code></example>
        </member>
        <member name="M:FastReport.Base.FloatDiff(System.Single,System.Single)">
            <summary>
            Checks if two float values are different.
            </summary>
            <param name="f1">First value.</param>
            <param name="f2">Second value.</param>
            <returns><c>true</c> if values are not equal.</returns>
            <remarks>
            This method is needed to compare two float values using some precision (0.001). It is useful
            to compare objects' locations and sizes for equality.
            </remarks>
        </member>
        <member name="M:FastReport.Base.DeserializeSubItems(FastReport.Utils.FRReader)">
            <summary>
            Deserializes nested object properties.
            </summary>
            <param name="reader">Reader object.</param>
            <remarks>
            <para>Typically the object serializes all properties to the single xml item:</para>
            <code>
            &lt;TextObject Name="Text2" Left="18.9" Top="37.8" Width="283.5" Height="28.35"/&gt;
            </code>
            <para>Some objects like <see cref="T:FastReport.DataBand"/> have child objects that serialized in subitems:</para>
            <code>
            &lt;DataBand Name="Data1" Top="163" Width="718.2" Height="18.9"&gt;
              &lt;TextObject Name="Text3" Left="18.9" Top="37.8" Width="283.5" Height="28.35"/&gt;
            &lt;/DataBand&gt;
            </code>
            <para>To read such subitems, the <c>DeserializeSubItems</c> method is used. Base 
            implementation reads the child objects. You may override it to read some specific subitems.</para>
            </remarks>
            <example>The following code is used to read report's styles:
            <code>
            protected override void DeserializeSubItems(FRReader reader)
            {
              if (String.Compare(reader.ItemName, "Styles", true) == 0)
                reader.Read(Styles);
              else
                base.DeserializeSubItems(reader);
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Base.ExtractDefaultMacros(System.String)">
            <summary>
            Replaces the macros in the given string and returns the new string.
            </summary>
            <param name="text">The text containing macros.</param>
            <returns>The text with macros replaced with its values.</returns>
        </member>
        <member name="M:FastReport.Base.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Base.SetFlags(FastReport.Flags,System.Boolean)">
            <summary>
            Set object's flags.
            </summary>
            <param name="flags">Flag to set.</param>
            <param name="value"><b>true</b> to set the flag, <b>false</b> to reset.</param>
        </member>
        <member name="M:FastReport.Base.SetReport(FastReport.Report)">
            <summary>
            Sets the reference to a Report. 
            </summary>
            <param name="value">Report to set.</param>
        </member>
        <member name="M:FastReport.Base.SetName(System.String)">
            <summary>
            Sets the object's name.
            </summary>
            <remarks>
                This method is for internal use only. It just sets a new name without any checks
                (unlike the <see cref="P:FastReport.Base.Name"/> property setter).
            </remarks>
            <seealso cref="P:FastReport.Base.Name">Name Property</seealso>
            <param name="value">New name.</param>
        </member>
        <member name="M:FastReport.Base.SetParent(FastReport.Base)">
            <summary>
            Sets the object's parent.
            </summary>
            <remarks>
            This method is for internal use only. You can use it if you are developing a new
            component for FastReport. Override it to perform some actions when the parent of an
            object is changing. This method checks that parent can contain a child.
            </remarks>
            <exception cref="T:FastReport.Utils.ParentException" caption="">Parent object cannot contain this object.</exception>
            <param name="value">New parent.</param>
        </member>
        <member name="M:FastReport.Base.SetParentCore(FastReport.Base)">
            <summary>
            Sets the object's parent.
            </summary>
            <param name="value">New parent.</param>
            <remarks>
            This method is for internal use only. You can use it if you are developing a new component for FastReport.
            This method does not perform any checks, it just sets the new parent.
            </remarks>
        </member>
        <member name="M:FastReport.Base.FindObject(System.String)">
            <summary>
            Searches for an object with given name.
            </summary>
            <param name="name">Name of the object to find.</param>
            <returns>Returns a null reference if object is not found</returns>
            <example>The following code demonstrates how to find an object by its name:
            <code>
            TextObject text1 = report1.FindObject("Text1") as TextObject;
            if (text1 != null) 
            { 
              // object found 
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Base.CreateUniqueName">
            <summary>
            Creates the unique object's name.
            </summary>
            <remarks>
            <para><b>Note:</b> you have to set object's parent before calling this method. Method uses the <see cref="P:FastReport.Base.BaseName"/> 
            property to create a name.</para>
            <para><b>Note:</b> this method may be very slow on a report that contains lots of objects. Consider
            using own naming logic in this case.</para>
            </remarks>
            <example>
            <code>
            TextObject textObj = new TextObject();
            dataBand1.Objects.Add(textObj);
            textObj.CreateUniqueName();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Base.Clear">
            <summary>
            Clears the object's state.
            </summary>
            <remarks>
            This method also disposes all object's children.
            </remarks>
        </member>
        <member name="M:FastReport.Base.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the object.
            </summary>
            <remarks>
              <para>Do not call this method directly. You should override it if you are
                developing a new component for FastReport.</para>
              <para>This method is called when the object needs to save the state. It may happen
                when:</para>
              <list type="bullet">
                <item>
                  <description>saving the report to the file or stream;</description>
                </item>
                <item>
                  <description>saving the report to the designer's undo buffer;</description>
                </item>
                <item>
                  <description>
                            assigning the object to another object using the
                            <see cref="M:FastReport.Base.Assign(FastReport.Base)"/> or <see cref="M:FastReport.Base.AssignAll(FastReport.Base)">AssignAll</see> methods;
                        </description>
                </item>
                <item>
                  <description>saving the object to the designer's clipboard;</description>
                </item>
                <item>
                  <description>saving the object to the preview (when run a
                        report).</description>
                </item>
              </list>
            </remarks>
            <param name="writer">Writer object.</param>
        </member>
        <member name="M:FastReport.Base.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the object.
            </summary>
            <remarks>
              <para>Do not call this method directly. You should override it if you are
                developing a new component for FastReport.</para>
              <para>This method is called when the object needs to restore the state. It may
                happen when:</para>
              <list type="bullet">
                <item>
                  <description>loading the report from a file or stream;</description>
                </item>
                <item>
                  <description>loading the report from the designer's undo
                        buffer;</description>
                </item>
                <item>
                  <description>assigning another object to this object using the
                    <see cref="M:FastReport.Base.Assign(FastReport.Base)"/> or <see cref="M:FastReport.Base.AssignAll(FastReport.Base)">AssignAll</see> methods;</description>
                </item>
                <item>
                  <description>loading the object from the designer's
                        clipboard;</description>
                </item>
                <item>loading the object from the preview pages.</item>
              </list>
            </remarks>
            <param name="reader">Reader object.</param>
        </member>
        <member name="M:FastReport.Base.BaseAssign(FastReport.Base)">
            <summary>
            Assigns values from another source.
            </summary>
            <remarks>
            <b>Note:</b> this method is relatively slow because it serializes
            an object to the xml and then deserializes it.
            </remarks>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.Base.Assign(FastReport.Base)">
            <summary>Copies the contents of another, similar object.</summary>
            <remarks>
              <para>Call Assign to copy the properties from another object of the same type. 
            The standard form of a call to Assign is</para>
              <para><c>destination.Assign(source);</c></para>
              <para>
                    which tells the <b>destination</b> object to copy the contents of the
                    <b>source</b> object to itself. In this method, all child objects are
                    ignored. If you want to copy child objects, use the
                    <see cref="M:FastReport.Base.AssignAll(FastReport.Base)">AssignAll</see> method.
                </para>
            </remarks>
            <example><code>
            Report report1;
            Report report2 = new Report();
            // copy all report settings, do not copy report objects
            report2.Assign(report1);
            </code></example>
            <seealso cref="M:FastReport.Base.AssignAll(FastReport.Base)">AssignAll Method</seealso>
            <param name="source">Source object to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Base.AssignAll(FastReport.Base)">
            <summary>Copies the contents (including children) of another, similar object.</summary>
            <remarks>
              <para>
                    This method is similar to <see cref="M:FastReport.Base.Assign(FastReport.Base)"/> method. It copies child
                    objects as well.
                </para>
            </remarks>
            <example><code>
            Report report1;
            Report report2 = new Report();
            // copy all report settings and objects
            report2.AssignAll(report1);
            </code></example>
            <seealso cref="M:FastReport.Base.Assign(FastReport.Base)"/>
            <param name="source">Source object to copy the state from.</param>
        </member>
        <member name="M:FastReport.Base.HasParent(FastReport.Base)">
            <summary>
            Gets a value indicating whether the object has the specified parent in its parent hierarhy.
            </summary>
            <param name="obj">Parent object to check.</param>
            <returns>Returns <b>true</b> if the object has given parent in its parent hierarhy.</returns>
        </member>
        <member name="M:FastReport.Base.HasFlag(FastReport.Flags)">
            <summary>
            Gets a value indicating whether the object has a specified flag in its <see cref="P:FastReport.Base.Flags"/> property.
            </summary>
            <param name="flag">Flag to check.</param>
            <returns><b>true</b> if <b>Flags</b> property contains specified flag.</returns>
        </member>
        <member name="M:FastReport.Base.HasRestriction(FastReport.Restrictions)">
            <summary>
            Gets a value indicating whether the object has a specified restriction 
            in its <see cref="P:FastReport.Base.Restrictions"/> property.
            </summary>
            <param name="restriction">Restriction to check.</param>
            <returns><b>true</b> if <b>Restrictions</b> property contains specified restriction.</returns>
        </member>
        <member name="M:FastReport.Base.InvokeEvent(System.String,System.Object)">
            <summary>
            Invokes script event.
            </summary>
            <param name="name">Name of the event to invoke.</param>
            <param name="param">Event parameters.</param>
            <remarks>
            <para>Do not call this method directly. You should use it if you are developing a new component 
            for FastReport.</para>
            <para>Use this method to call an event handler that is located in the report's script.</para>
            </remarks>
            <example>Example of the OnBeforePrint method:<code>
            public void OnBeforePrint(EventArgs e)
            {
              if (BeforePrint != null)
                BeforePrint(this, e);
              InvokeEvent(BeforePrintEvent, e);
            }
            </code></example>
        </member>
        <member name="M:FastReport.Base.OnAfterLoad">
            <summary>
            Called after all report objects were loaded.
            </summary>
            <remarks>
            Do not call this method directly. You may override it if you are developing a new component 
            for FastReport.
            </remarks>
        </member>
        <member name="M:FastReport.Base.GetExpressions">
            <summary>
            Gets all expressions contained in the object.
            </summary>
            <returns>Array of expressions or <b>null</b> if object contains no expressions.</returns>
            <remarks>
              <para>Do not call this method directly. You may override it if you are developing a
                new component for FastReport.</para>
              <para>
                    This method is called by FastReport each time before run a report. FastReport
                    do this to collect all expressions and compile them. For example,
                    <b>GetExpressions</b> method of the <see cref="T:FastReport.TextObject"/> class
                    parses the text and returns all expressions found in the text.
                </para>
            </remarks>
        </member>
        <member name="M:FastReport.Base.GetCustomScript">
            <summary>
            Returns a custom code that will be added to the report script before report is run.
            </summary>
            <returns>A custom script text, if any. Otherwise returns <b>null</b>.</returns>
            <remarks>
            <para>This method may return any valid code that may be inserted into the report script. Currently it is
            used in the TableObject to define the following script methods: Sum, Min, Max, Avg, Count.
            </para>
            <para>
            Note: you must take into account the current script language - C# or VB.Net. You may check it via
            <b>Report.ScriptLanguage</b> property.
            </para>
            </remarks>
        </member>
        <member name="M:FastReport.Base.ExtractMacros">
            <summary>
            Used to extract macros such as "TotalPages#" in the preview mode.
            </summary>
            <remarks>
            This method is used mainly by the <b>TextObject</b> to extract macros and replace it with 
            actual values passed in the <b>pageIndex</b> and <b>totalPages</b> parameters. This method
            is called automatically when the object is being previewed.
            </remarks>
        </member>
        <member name="M:FastReport.Base.IsHaveToConvert(System.Object)">
            <summary>
            Used to get information of the need to convertation if the function returns true, then the GetConvertedObjects function is called
            </summary>
            <param name="sender">The export or the object, that call this method</param>
            <returns>By default returns false</returns>
            <remarks>
            The functions IsHaveToConvert and GetConvertedObjects allow you to convert objects from one to another,
            for example the export will convert object before adding it to the file and convert recursive,
            i.e. If the new object has the ability to convert,
            it will be converted again but limit is 10 times.
            At the time of export it is called, only on objects inside the band,
            the child objects of converted object will be returned, and the child objects of old object will be ignored.
            </remarks>
        </member>
        <member name="M:FastReport.Base.GetConvertedObjects">
            <summary>
            Used to get an enumeration of the objects to which this object will be converted, before calling this function, the IsHaveToConvert function will be called
            </summary>
            <returns>By default returns this object</returns>
            <remarks>
            The functions IsHaveToConvert and GetConvertedObjects allow you to convert objects from one to another,
            for example the export will convert object before adding it to the file and convert recursive,
            i.e. If the new object has the ability to convert,
            it will be converted again but limit is 10 times.
            At the time of export it is called, only on objects inside the band,
            the child objects of converted object will be returned, and the child objects of old object will be ignored.
            </remarks>
        </member>
        <member name="M:FastReport.Base.ForEachAllConvectedObjects(System.Object)">
            <summary>
            Gets the collection of all child objects, converts objects if necessary
            </summary>
            <param name="sender">the object or export, that call this convertation</param>
        </member>
        <member name="M:FastReport.Base.#ctor">
            <summary>
            Initializes a new instance of the <b>Base</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.CellularTextObject">
            <summary>
            Represents a text object which draws each symbol of text in its own cell.
            </summary>
            <remarks>
            <para/>The text may be aligned to left or right side, or centered. Use the <see cref="T:FastReport.HorzAlign"/>
            property to do this. The "justify" align is not supported now, as well as vertical alignment.
            <para/>The cell size is defined in the <see cref="P:FastReport.CellularTextObject.CellWidth"/> and <see cref="P:FastReport.CellularTextObject.CellHeight"/> properties.
            These properties are 0 by default, in this case the size of cell is calculated automatically based
            on the object's <b>Font</b>.
            <para/>To define a spacing (gap) between cells, use the <see cref="P:FastReport.CellularTextObject.HorzSpacing"/> and
            <see cref="P:FastReport.CellularTextObject.VertSpacing"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.CellularTextObject.AutoWidth">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.AutoShrink">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.AutoShrinkMinSize">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.Angle">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.Underlines">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.RightToLeft">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.Trimming">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.FontWidthRatio">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.LineHeight">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.FirstTabOffset">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.TabWidth">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.Clip">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.Wysiwyg">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.ForceJustify">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.HtmlTags">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.Padding">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.CanBreak">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.BreakTo">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.CellularTextObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CellularTextObject.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.CellularTextObject.CellWidth">
            <summary>
            Gets or sets the width of cell, in pixels.
            </summary>
            <remarks>
            If zero width and/or height specified, the object will calculate the cell size
            automatically based on its font.
            </remarks>
        </member>
        <member name="P:FastReport.CellularTextObject.CellHeight">
            <summary>
            Gets or sets the height of cell, in pixels.
            </summary>
            <remarks>
            If zero width and/or height specified, the object will calculate the cell size
            automatically based on its font.
            </remarks>
        </member>
        <member name="P:FastReport.CellularTextObject.HorzSpacing">
            <summary>
            Gets or sets the horizontal spacing between cells, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.CellularTextObject.VertSpacing">
            <summary>
            Gets or sets the vertical spacing between cells, in pixels.
            </summary>
        </member>
        <member name="M:FastReport.CellularTextObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CellularTextObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CellularTextObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CellularTextObject.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CellularTextObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CellularTextObject"/> class with the default settings.
            </summary>
        </member>
        <member name="T:FastReport.CheckBoxObject">
            <summary>
            Represents a check box object.
            </summary>
        </member>
        <member name="M:FastReport.CheckBoxObject.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.GetSmartTag">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.CheckBoxObject.Checked">
            <summary>
            Gets or set a value indicating whether the check box is in the checked state.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.CheckedSymbol">
            <summary>
            Gets or sets a symbol that will be displayed when the check box is in the checked state.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.UncheckedSymbol">
            <summary>
            Gets or sets a symbol that will be displayed when the check box is in the unchecked state.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.CheckColor">
            <summary>
            Gets or sets a color of the check symbol.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.DataColumn">
            <summary>
            Gets or sets a data column name bound to this control.
            </summary>
            <remarks>
            Value must be in the form "[Datasource.Column]".
            </remarks>
        </member>
        <member name="P:FastReport.CheckBoxObject.Expression">
            <summary>
            Gets or sets an expression that determines whether to show a check.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.CheckWidthRatio">
            <summary>
            Gets or sets the check symbol width ratio.
            </summary>
            <remarks>
            Valid values are from 0.2 to 2.
            </remarks>
        </member>
        <member name="P:FastReport.CheckBoxObject.HideIfUnchecked">
            <summary>
            Gets or sets a value determines whether to hide the checkbox if it is in the unchecked state.
            </summary>
        </member>
        <member name="P:FastReport.CheckBoxObject.Editable">
            <summary>
            Gets or sets editable for pdf export
            </summary>
        </member>
        <member name="M:FastReport.CheckBoxObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CheckBoxObject.#ctor">
            <summary>
            Initializes a new instance of the <b>CheckBoxObject</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.ChildBand">
            <summary>
            This class represents a child band.
            </summary>
            <remarks>
            Typical use of child band is to print several objects that can grow or shrink. It also can be done
            using the shift feature (via <see cref="T:FastReport.ShiftMode"/> property), but in some cases it's not possible.
            </remarks>
        </member>
        <member name="M:FastReport.ChildBand.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ChildBand.Delete">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.ChildBand.FillUnusedSpace">
            <summary>
            Gets or sets a value indicating that band will be used to fill unused space on a page.
            </summary>
            <remarks>
            If you set this property to <b>true</b>, the band will be printed several times to fill 
            unused space on a report page.
            </remarks>
        </member>
        <member name="P:FastReport.ChildBand.CompleteToNRows">
            <summary>
            Gets or sets a value that determines the overall number of data rows printed by the data band.
            </summary>
            <remarks>
            Using this property, you may complete the data band upto N data rows.
            If the data band has less number of rows, this band will be used to print empty rows.
            </remarks>
        </member>
        <member name="P:FastReport.ChildBand.PrintIfDatabandEmpty">
            <summary>
            Gets or sets a value indicating that the band will be printed if its parent databand is empty.
            </summary>
            <remarks>
            The child band with this property set to true, connected to a databand can be used to print "No data" 
            text if the databand has no rows.
            </remarks>
        </member>
        <member name="M:FastReport.ChildBand.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ChildBand.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.Box.BoxStorageClient">
            <summary>
            Box cloud storage client.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Box.BoxStorageClient.ClientInfo">
            <summary>
            Gets or sets the client info.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Box.BoxStorageClient.AuthCode">
            <summary>
            Gets or sets the authorization code.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Box.BoxStorageClient.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Box.BoxStorageClient"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClient.#ctor(FastReport.Cloud.StorageClient.SkyDrive.ClientInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Box.BoxStorageClient"/> class.
            </summary>
            <param name="clientInfo">The storage client info.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Box.BoxStorageClient"/> class.
            </summary>
            <param name="clientId">Client ID.</param>
            <param name="clientSecret">Client Secret.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClient.GetAuthorizationUrl">
            <summary>
            Gets the authorization URL.
            </summary>
            <returns>The authorization URL stirng.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClient.GetAccessToken">
            <summary>
            Gets the access token.
            </summary>
            <returns>The access token string.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClient.SaveReport(FastReport.Report,FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClient.SaveStream(System.IO.Stream,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm">
            <summary>
            Represents form of Box storage client.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm.#ctor(FastReport.Cloud.StorageClient.SkyDrive.ClientInfo,FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm"/> class.
            </summary>
            <param name="clientInfo">The information about Box client application.</param>
            <param name="report">The report template.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm.Init">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm.btnOk_Click(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.BoxStorageClientForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.Box.ClientInfoForm">
            <summary>
            Represents the Client Info diabolg form.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Box.ClientInfoForm.Id">
            <summary>
            Gets the client ID.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Box.ClientInfoForm.Secret">
            <summary>
            Gets the client secret.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.ClientInfoForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Box.ClientInfoForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.ClientInfoForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.Box.ClientInfoForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.ClientInfoForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.ClientInfoForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.Box.WebBrowserForm">
            <summary>
            Represents form of the web browser.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Box.WebBrowserForm.AuthCode">
            <summary>
            Gets obtained authorization code.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.WebBrowserForm.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.Box.WebBrowserForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.WebBrowserForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Box.WebBrowserForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClient">
            <summary>
            FastCloud storage client.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClient.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClient.ReportUrl">
            <summary>
            Gets the report URL that can be used to download report from cloud.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClient"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClient.GetAccessToken(System.String,System.String)">
            <summary>
            Gets the access token.
            </summary>
            <returns>The access token string.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClient.SaveReport(FastReport.Report,FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClient.SaveStream(System.IO.Stream,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm">
            <summary>
            Represents form of FastCloud storage client.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm.#ctor(FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm"/> class.
            </summary>
            <param name="report">The report template.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm.Init">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm.btnOk_Click(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm">
            <summary>
            Represents form of FastCloud storage client.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm.#ctor(FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm"/> class.
            </summary>
            <param name="report">The report template.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm.IsNumeric(System.String)">
            <summary>
            Checks is the string numeric.
            </summary>
            <param name="str">The checking string.</param>
            <returns>True if string is numeric, otherwise false.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm.GetProxySettings">
            <summary>
            Gets the proxy settings.
            </summary>
            <returns>The proxy settings.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.FastCloud.FastCloudStorageClientSimpleForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.Ftp.FtpStorageClient">
            <summary>
            FTP storage client.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Ftp.FtpStorageClient.Server">
            <summary>
            Gets or sets the FTP server.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Ftp.FtpStorageClient.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Ftp.FtpStorageClient.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Ftp.FtpStorageClient"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Ftp.FtpStorageClient"/> class.
            </summary>
            <param name="server">The FTP server.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClient.SaveReport(FastReport.Report,FastReport.Export.ExportBase)">
            <summary>
            Saves the report to FTP storage.
            </summary>
            <param name="report">The report template that should be saved.</param>
            <param name="export">The export filter that should export template before.</param>
            <returns>True if report has been successfully saved.</returns>
            <exception cref="T:FastReport.Utils.CloudStorageException"/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClient.SaveStream(System.IO.Stream,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm">
            <summary>
            Represents form of the FTP storage client.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm.#ctor(System.String,System.String,System.String,FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm"/> class.
            </summary>
            <param name="server">The FTP server.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="report">The report template.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm.Init">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm.btnOk_Click(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Ftp.FtpStorageClientForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.CloudStorageClient">
            <summary>
            The base class for all cloud storage clients.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.CloudStorageClient.Filename">
            <summary>
            Gets or sets the filename.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.CloudStorageClient.IsUserAuthorized">
            <summary>
            Gets or set the information is user authorized or not.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.CloudStorageClient.ProxySettings">
            <summary>
            Gets or sets the proxy settings of a client.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.CloudStorageClient"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClient.PrepareToSave(FastReport.Report,FastReport.Export.ExportBase)">
            <summary>
            Prepares report before it will be saved to cloud storage.
            </summary>
            <param name="report">The report template.</param>
            <param name="export">The export filter.</param>
            <returns>Memory stream that contains prepared report.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClient.CreateMemoryStream(System.IO.Stream)">
            <summary>
            Creates a MemoryStream instance using a Stream instance.
            </summary>
            <param name="stream">The Stream instance that should be converted.</param>
            <returns>The MemoryStream instance.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClient.SaveReport(FastReport.Report,FastReport.Export.ExportBase)">
            <summary>
            Saves the report to cloud storage.
            </summary>
            <param name="report">The report template that should be saved.</param>
            <param name="export">The export filter that should export template before.</param>
            <exception cref="T:FastReport.Utils.CloudStorageException"/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClient.SaveStream(System.IO.Stream,System.String)">
            <summary>
            Saves the stream to cloud storage.
            </summary>
            <param name="stream">The stream that contains report.</param>
            <param name="filename">The filename in which stream will be saved in cloud.</param>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.CloudStorageClientForm">
            <summary>
            Represents form of Dropbox storage client.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.CloudStorageClientForm.Report">
            <summary>
            Gets or sets the report template.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.CloudStorageClientForm.Exports">
            <summary>
            Gets or sets the list of exports.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.CloudStorageClientForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.#ctor(FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.CloudStorageClientForm"/> class.
            </summary>
            <param name="report">The report template.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.InitExports">
            <summary>
            Initializes the list of exports.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.GetProxySettings">
            <summary>
            Gets the proxy settings.
            </summary>
            <returns>The proxy settings.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.Init">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.IsNumeric(System.String)">
            <summary>
            Checks is the string numeric.
            </summary>
            <param name="str">The checking string.</param>
            <returns>True if string is numeric, otherwise false.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.Done">
            <summary>
            Finishes the form work.
            </summary>
            <returns>Returns true if work has been successfully finished, otherwise false.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.cbFileType_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            SelectedIndexChanged event handler for ComboBox File Type.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.buttonSettings_Click(System.Object,System.EventArgs)">
            <summary>
            Click event handler for Button Settings.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.CloudStorageClientForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            FormClosing event handler for CloudStorageClientForm.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.btnOk_Click(System.Object,System.EventArgs)">
            <summary>
            Click event handler for button OK.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.CloudStorageClientForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.pgFile">
            <summary>
            Page File.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.pgProxy">
            <summary>
            Page Proxy.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.cbFileType">
            <summary>
            ComboBox File Type.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.labelFileType">
            <summary>
            Label File Type.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.buttonSettings">
            <summary>
            Buttons Settings.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.labelColon">
            <summary>
            Label Colon.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.labelPassword">
            <summary>
            Label Password.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.labelUsername">
            <summary>
            Label Username.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.labelServer">
            <summary>
            Label Server.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.tbUsername">
            <summary>
            TextBox Username.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.tbPort">
            <summary>
            TextBox Port.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.tbServer">
            <summary>
            TextBox Server.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.tbPassword">
            <summary>
            TextBox Password.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.CloudStorageClientForm.pageControl1">
            <summary>
            PageControl.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.Dropbox.ApplicationInfoForm">
            <summary>
            Represents the Application Info diabolg form.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Dropbox.ApplicationInfoForm.AccessToken">
            <summary>
            Gets the access token.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.ApplicationInfoForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Dropbox.ApplicationInfoForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.ApplicationInfoForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.Dropbox.ApplicationInfoForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.ApplicationInfoForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.ApplicationInfoForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClient">
            <summary>
            Dropbox cloud storage client.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClient.FILES_PUT_URL_BASE">
            <summary>
            The base URL for files_put command.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClient.AccessToken">
            <summary>
            Gets or sets the application access token.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClient"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClient"/> class.
            </summary>
            <param name="accessToken">The Dropbox application access token.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClient.SaveReport(FastReport.Report,FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClient.SaveStream(System.IO.Stream,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClientForm">
            <summary>
            Represents form of Dropbox storage client.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClientForm.#ctor(System.String,FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClientForm"/> class.
            </summary>
            <param name="accessToken">The Dropbox access token.</param>
            <param name="report">The report template.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClientForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClientForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClientForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.Dropbox.DropboxStorageClientForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.GoogleDrive.ClientInfoForm">
            <summary>
            Represents the Client Info diabolg form.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.GoogleDrive.ClientInfoForm.Id">
            <summary>
            Gets the client ID.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.GoogleDrive.ClientInfoForm.Secret">
            <summary>
            Gets the client secret.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.ClientInfoForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.GoogleDrive.ClientInfoForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.ClientInfoForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.GoogleDrive.ClientInfoForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.ClientInfoForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.ClientInfoForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient">
            <summary>
            Google Drive cloud storage client.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient.ClientInfo">
            <summary>
            Gets or sets the client info.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient.AuthCode">
            <summary>
            Gets or sets the authorization code.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient.#ctor(FastReport.Cloud.StorageClient.SkyDrive.ClientInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient"/> class.
            </summary>
            <param name="clientInfo">The storage client info.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient"/> class.
            </summary>
            <param name="clientId">Client ID.</param>
            <param name="clientSecret">Client Secret.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient.GetAuthorizationUrl">
            <summary>
            Gets the authorization URL.
            </summary>
            <returns>The authorization URL stirng.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient.GetAccessToken">
            <summary>
            Gets the access token.
            </summary>
            <returns>The access token string.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient.SaveReport(FastReport.Report,FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClient.SaveStream(System.IO.Stream,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm">
            <summary>
            Represents form of Google Drive storage client.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm.#ctor(FastReport.Cloud.StorageClient.SkyDrive.ClientInfo,FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm"/> class.
            </summary>
            <param name="clientInfo">The information about Google Drive client application.</param>
            <param name="report">The report template.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm.Init">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm.btnOk_Click(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.GoogleDriveStorageClientForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.GoogleDrive.WebBrowserForm">
            <summary>
            Represents form of the web browser.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.GoogleDrive.WebBrowserForm.AuthCode">
            <summary>
            Gets obtained authorization code.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.WebBrowserForm.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.GoogleDrive.WebBrowserForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.WebBrowserForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.GoogleDrive.WebBrowserForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.SkyDrive.WebBrowserForm">
            <summary>
            Represents form of the web browser.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.SkyDrive.WebBrowserForm.AuthCode">
            <summary>
            Gets obtained authorization code.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.WebBrowserForm.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.SkyDrive.WebBrowserForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.WebBrowserForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.WebBrowserForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.SkyDrive.ClientInfo">
            <summary>
            Represents the information about SkyDrive application.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.SkyDrive.ClientInfo.Name">
            <summary>
            Gets or sets the client name.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.SkyDrive.ClientInfo.Id">
            <summary>
            Gets or sets the client ID.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.SkyDrive.ClientInfo.Secret">
            <summary>
            Gets or sets the client secret.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.ClientInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.SkyDrive.ClientInfo"/> class.
            </summary>
            <param name="name">The client name.</param>
            <param name="id">The client ID.</param>
            <param name="secret">The client secret.</param>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.SkyDrive.ClientInfoForm">
            <summary>
            Represents the Client Info diabolg form.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.SkyDrive.ClientInfoForm.Id">
            <summary>
            Gets the client ID.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.SkyDrive.ClientInfoForm.Secret">
            <summary>
            Gets the client secret.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.ClientInfoForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.SkyDrive.ClientInfoForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.ClientInfoForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.SkyDrive.ClientInfoForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.ClientInfoForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.ClientInfoForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClientForm">
            <summary>
            Represents form of SkyDrive storage client.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClientForm.#ctor(FastReport.Cloud.StorageClient.SkyDrive.ClientInfo,FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClientForm"/> class.
            </summary>
            <param name="clientInfo">The SkyDrive client info.</param>
            <param name="report">The report template.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClientForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClientForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClientForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClientForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient">
            <summary>
            SkyDrive cloud storage client.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient.ClientInfo">
            <summary>
            Gets or sets the client info.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient.AuthCode">
            <summary>
            Gets or sets the authorization code.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient.#ctor(FastReport.Cloud.StorageClient.SkyDrive.ClientInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient"/> class.
            </summary>
            <param name="clientInfo">The client info.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient"/> class.
            </summary>
            <param name="clientId">Client ID.</param>
            <param name="clientSecret">Client Secret.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient.GetAuthorizationUrl">
            <summary>
            Gets the authorization URL.
            </summary>
            <returns>The authorization URL string.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient.GetAccessToken">
            <summary>
            Gets the access token.
            </summary>
            <returns>The access token value.</returns>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient.SaveReport(FastReport.Report,FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.SkyDrive.SkyDriveStorageClient.SaveStream(System.IO.Stream,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Cloud.StorageClient.WebBrowserFormBase">
            <summary>
            Represents the base form for cloud storage web browsers.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.StorageClient.WebBrowserFormBase.Url">
            <summary>
            Gets or sets the url string.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.WebBrowserFormBase.#ctor">
            <summary>
            Initizlizes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.WebBrowserFormBase"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.WebBrowserFormBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.StorageClient.WebBrowserFormBase"/> class.
            </summary>
            <param name="url">The url string.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.WebBrowserFormBase.WebBrowserFormBase_Shown(System.Object,System.EventArgs)">
            <summary>
            Handle the web browser form shown event.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.WebBrowserFormBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.WebBrowserFormBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Cloud.StorageClient.WebBrowserFormBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.StorageClient.WebBrowserFormBase.wbBrowser">
            <summary>
            The web browser component.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.HttpMethod">
            <summary>
            Represents an HTTP request method.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.HttpMethod.Get">
            <summary>
            GET request method.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.HttpMethod.Post">
            <summary>
            POST request method.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.HttpMethod.Put">
            <summary>
            PUT request method.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.HttpUtils">
            <summary>
            Static class that contains HTTP utilities.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.HttpUtils.UrlEncode(System.String)">
            <summary>
            Encodes the URL string.
            </summary>
            <param name="str">The URL string.</param>
            <returns>The encoded URL string.</returns>
        </member>
        <member name="M:FastReport.Cloud.HttpUtils.UrlDataEncode(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Encodes the dictionary with URL parameters.
            </summary>
            <param name="data">The dictionary with parameters.</param>
            <returns>The encoded string.</returns>
        </member>
        <member name="M:FastReport.Cloud.HttpUtils.UrlDecode(System.String)">
            <summary>
            Decodes the URL string.
            </summary>
            <param name="str">The URL string.</param>
            <returns>The decoded URL string.</returns>
        </member>
        <member name="T:FastReport.Cloud.OAuth.ConsumerContext">
            <summary>
            Represents the consumer.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.OAuth.ConsumerContext.ConsumerKey">
            <summary>
            Gets the consumer key.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.OAuth.ConsumerContext.ConsumerSecret">
            <summary>
            Gest the consumer secret.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.OAuth.ConsumerContext.SignatureMethod">
            <summary>
            Gets the consumer's signature method.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.OAuth.ConsumerContext.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.OAuth.ConsumerContext"/> class.
            </summary>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
        </member>
        <member name="T:FastReport.Cloud.OAuth.Parser">
            <summary>
            Represents parser for parse OAuth responses.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.OAuth.Parser.ParseToken(System.IO.Stream)">
            <summary>
            Parses token information in stream.
            </summary>
            <param name="stream">The stream for parse.</param>
            <returns>The OAuth token.</returns>
        </member>
        <member name="M:FastReport.Cloud.OAuth.Parser.ParseSkyDriveToken(System.IO.Stream)">
            <summary>
            Parses token information in stream for SkyDrive.
            </summary>
            <param name="stream">The stream for parse.</param>
            <returns>The SkyDrive access token.</returns>
        </member>
        <member name="M:FastReport.Cloud.OAuth.Parser.ParseGoogleDriveToken(System.IO.Stream)">
            <summary>
            Parses token information in stream for Google Drive.
            </summary>
            <param name="stream">The stream for parse.</param>
            <returns>The Google Drive access token.</returns>
        </member>
        <member name="M:FastReport.Cloud.OAuth.Parser.ParseFastCloudToken(System.IO.Stream)">
            <summary>
            Parses token information in stream for FastCloud.
            </summary>
            <param name="stream">The stream for parse.</param>
            <returns>The FastCloud access token.</returns>
        </member>
        <member name="T:FastReport.Cloud.OAuth.ServiceContext">
            <summary>
            Represents the service provider.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.OAuth.ServiceContext.RequestTokenUrl">
            <summary>
            Gets the request token URL.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.OAuth.ServiceContext.UserAuthorizationUrl">
            <summary>
            Gets the user authorization URL.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.OAuth.ServiceContext.CallbackUrl">
            <summary>
            Gets the callback URL.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.OAuth.ServiceContext.AccessTokenUrl">
            <summary>
            Gets the access token URL.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.OAuth.ServiceContext.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.OAuth.ServiceContext"/> class with a specified parameters.
            </summary>
            <param name="requestTokenUrl">The request token URL.</param>
            <param name="userAuthorizationUrl">The user authorization URL.</param>
            <param name="callbackUrl">The callback URL.</param>
            <param name="accessTokenUrl">The access token URL.</param>
        </member>
        <member name="T:FastReport.Cloud.OAuth.Token">
            <summary>
            Represents the OAuth token credentials.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.OAuth.Token.TokenKey">
            <summary>
            Gets the token key.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.OAuth.Token.TokenSecret">
            <summary>
            Gets the token secret.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.OAuth.Token.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.OAuth.Token"/> class.
            </summary>
            <param name="tokenKey">The token key.</param>
            <param name="tokenSecret">The token secret.</param>
        </member>
        <member name="T:FastReport.Cloud.OAuth.UserContext">
            <summary>
            Represents the user.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.OAuth.Auth">
            <summary>
            API for OAuth protocol.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.OAuth.Auth.BuildSignedUrl(System.String,System.String,FastReport.Cloud.OAuth.ConsumerContext,FastReport.Cloud.OAuth.Token)">
            <summary>
            Builds signed URL.
            </summary>
            <param name="baseTokenUrl">The base token URL.</param>
            <param name="method">The HTTP method.</param>
            <param name="consumer">The consumer context.</param>
            <param name="token">The request token.</param>
            <returns>Signed URL.</returns>
        </member>
        <member name="T:FastReport.Cloud.OAuth.SignatureMethod">
            <summary>
            Represents the signature method.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.OAuth.SignatureMethod.Plaintext">
            <summary>
            Signature method PLAINTEXT.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.OAuth.SignatureMethod.HmacSha1">
            <summary>
            Signature method HMAC-SHA1.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.OAuth.SignatureMethod.RsaSha1">
            <summary>
            Signature method RSA-SHA1.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.CloudProxySettings">
            <summary>
            Represents proxy settings of the cloud storage.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.CloudProxySettings.ProxyType">
            <summary>
            Gets or sets the type of proxy.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.CloudProxySettings.Server">
            <summary>
            Gets or sets the proxy server.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.CloudProxySettings.Port">
            <summary>
            Gets or sets the port number of proxy server.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.CloudProxySettings.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.CloudProxySettings.Password">
            <summary>
            Gets or sets the user's password.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.CloudProxySettings.#ctor(FastReport.Cloud.ProxyType,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Cloud.CloudProxySettings"/> class.
            </summary>
            <param name="proxyType">The type of proxy.</param>
            <param name="server">The proxy server.</param>
            <param name="port">The port number of server.</param>
            <param name="username">The username.</param>
            <param name="password">The user's password.</param>
        </member>
        <member name="T:FastReport.Cloud.ProxyType">
            <summary>
            Represents the type of rpoxy.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.ProxyType.Http">
            <summary>
            The HTTP proxy type.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.ProxyType.Socks4">
            <summary>
            The SOCKS4 proxy type.
            </summary>
        </member>
        <member name="F:FastReport.Cloud.ProxyType.Socks5">
            <summary>
            The SOCKS5 proxy type.
            </summary>
        </member>
        <member name="T:FastReport.Cloud.RequestUtils">
            <summary>
            Provides utils for the web request.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.RequestUtils.SetProxySettings(System.Net.WebRequest,FastReport.Cloud.CloudProxySettings)">
            <summary>
            Sets proxy settings for web request.
            </summary>
            <param name="request">The web request.</param>
            <param name="settings">The cloud proxy settings.</param>
        </member>
        <member name="T:FastReport.Cloud.RequestParameter">
            <summary>
            Represents the parameter of http request.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.RequestParameter.Name">
            <summary>
            Gets the name of a request parameter.
            </summary>
        </member>
        <member name="P:FastReport.Cloud.RequestParameter.Value">
            <summary>
            Gets the value of a request parameter.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.RequestParameter.#ctor(System.String,System.String)">
            <summary>
            Initializes a naw instance of the <see cref="T:FastReport.Cloud.RequestParameter"/> class with a specified parameters.
            </summary>
            <param name="name">The name of a request parameter.</param>
            <param name="value">The value of a request paramter.</param>
        </member>
        <member name="T:FastReport.Cloud.RequestParameterComparer">
            <summary>
            Comparer class for comparing request parameters.
            </summary>
        </member>
        <member name="M:FastReport.Cloud.RequestParameterComparer.Compare(FastReport.Cloud.RequestParameter,FastReport.Cloud.RequestParameter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Code.FindTextArgs">
            <summary>
            This class is used to pass find arguments to some methods of the <b>CodeUtils</b> class.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.StartIndex">
            <summary>
            The start position of the search. After the search, this property points to
            the begin of an expression.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.EndIndex">
            <summary>
            After the search, this property points to the end of an expression.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.OpenBracket">
            <summary>
            The char sequence used to find the expression's begin.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.CloseBracket">
            <summary>
            The char sequence used to find the expression's end.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.Text">
            <summary>
            The text with embedded expressions.
            </summary>
        </member>
        <member name="P:FastReport.Code.FindTextArgs.FoundText">
            <summary>
            The last found expression.
            </summary>
        </member>
        <member name="T:FastReport.Code.CodeUtils">
            <summary>
            This static class contains methods that may be used to find expressions embedded 
            in the object's text.
            </summary>
        </member>
        <member name="M:FastReport.Code.CodeUtils.GetExpressions(System.String,System.String,System.String)">
            <summary>
            Returns expressions found in the text.
            </summary>
            <param name="text">Text that may contain expressions.</param>
            <param name="openBracket">The char sequence used to find the start of expression.</param>
            <param name="closeBracket">The char sequence used to find the end of expression.</param>
            <returns>Array of expressions if found; otherwise return an empty array.</returns>
        </member>
        <member name="M:FastReport.Code.CodeUtils.GetExpression(FastReport.Code.FindTextArgs,System.Boolean)">
            <summary>
            Gets first expression found in the text. 
            </summary>
            <param name="args">Object with find arguments.</param>
            <param name="skipStrings">Indicates whether to skip strings.</param>
            <returns>The expression if found; otherwise, returns an empty string.</returns>
        </member>
        <member name="T:FastReport.ComponentBase">
            <summary>
            Class that implements some object's properties such as location, size and visibility.
            </summary>
        </member>
        <member name="M:FastReport.ComponentBase.CheckNegativeSize(FastReport.Utils.FRMouseEventArgs)">
            <summary>
            Corrects the object's size and sizing point if the size becomes negative.
            </summary>
            <param name="e">Current mouse state.</param>
            <para>Typically you don't need to use or override this method.</para>
            <para>This method is called by the FastReport designer to check if the object's size becomes negative
            when resizing the object by the mouse. Method must correct the object's size and/or position to
            make it positive, also change the sizing point if needed.</para>
        </member>
        <member name="M:FastReport.ComponentBase.CheckParent(System.Boolean)">
            <summary>
            Checks if the object is inside its parent.
            </summary>
            <param name="immediately">if <b>true</b>, check now independent of any conditions.</param>
            <remarks>
            <para>Typically you don't need to use or override this method.</para>
            <para>When you move an object with the mouse, it may be moved outside its parent. If so, this method
            must find a new parent for the object and correct it's <b>Left</b>, <b>Top</b> and <b>Parent</b>
            properties. If <b>immediately</b> parameter is <b>false</b>, you can optimize the method
            to search for new parent only if the object's bounds are outside parent. If this parameter is
            <b>true</b>, you must skip any optimizations and search for a parent immediately.</para>
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the object.
            </summary>
            <param name="e">Paint event args.</param>
            <remarks>
            <para>This method is widely used in the FastReport. It is called each time when the object needs to draw
            or print itself.</para>
            <para>In order to draw the object correctly, you should multiply the object's bounds by the <b>scale</b>
            parameter.</para>
            <para><b>cache</b> parameter is used to optimize the drawing speed. It holds all items such as
            pens, fonts, brushes, string formats that was used before. If the item with requested parameters
            exists in the cache, it will be returned (instead of create new item and then dispose it).</para>
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.DrawDragAcceptFrame(FastReport.Utils.FRPaintEventArgs,System.Drawing.Color)">
            <summary>
            Draw the frame around the object to indicate that it accepts the drag&amp;drop operation.
            </summary>
            <param name="e">Paint event args.</param>
            <param name="color">The color of frame.</param>
        </member>
        <member name="M:FastReport.ComponentBase.DrawSelection(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draw the selection points.
            </summary>
            <param name="e">Paint event args.</param>
            <remarks>
            This method draws a set of selection points returned by the <see cref="M:FastReport.ComponentBase.GetSelectionPoints"/> method.
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ComponentBase.GetPreferredSize">
            <summary>
            Gets the preferred size of an object.
            </summary>
            <returns>Preferred size.</returns>
            <remarks>
            This method is called by the FastReport designer when you insert a new object.
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.GetSmartTag">
            <summary>
            Returns a "smart tag" menu.
            </summary>
            <remarks>
            "Smart tag" is a little button that appears near the object's top-right corner when we are in the
            designer and move the mouse over the object. When you click that button you will see a popup window
            where you can set up some properties of the object. FastReport uses smart tags to quickly choose
            the datasource (for a band) or data column (for objects).
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.HandleDoubleClick">
            <summary>
            Handles double click event in the designer.
            </summary>
            <remarks>
            This method is called when the user doubleclicks the object in the designer. Typical implementation
            invokes the object's editor (calls the <b>InvokeEditor</b> method) and sets the designer's
            <b>Modified</b> flag.
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.HandleDragDrop(FastReport.Utils.FRMouseEventArgs)">
            <summary>
            Handles the DragDrop event in the designer.
            </summary>
            <param name="e">Current mouse state.</param>
            <remarks>
            This method is called when the user drops an item from the Data Tree window into this object.
            This method should copy the information from the <b>e.DraggedObject</b> object and set the
            <b>e.Handled</b> flag to <b>true</b> to complete the drag operation.
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.HandleDragOver(FastReport.Utils.FRMouseEventArgs)">
            <summary>
            Handles the DragOver event in the designer.
            </summary>
            <param name="e">Current mouse state.</param>
            <remarks>
            This method is called when the user drags an item from the Data Tree window. This method should
            check that the mouse (<b>e.X, e.Y</b>) is inside the object, then set the <b>e.Handled</b> flag
            to <b>true</b> if an item can be dragged into this object.
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.HandleKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles KeyDown event in the designer.
            </summary>
            <param name="sender">The designer's workspace.</param>
            <param name="e">Keyboard event parameters.</param>
            <remarks>
            This method is called when the user presses any key in the designer. Typical implementation
            does nothing.
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <summary>
            Handles MouseDown event that occurs when the user clicks the mouse in the designer.
            </summary>
            <remarks>
              <para>This method is called when the user press the mouse button in the designer.
                The standard implementation does the following:</para>
              <list type="bullet">
                <item>checks if the mouse pointer is inside the object;</item>
                <item>add an object to the selected objects list of the designer;</item>
                <item>sets the <b>e.Handled</b> flag to <b>true</b>.</item>
              </list>
            </remarks>
            <param name="e">Current mouse state.</param>
        </member>
        <member name="M:FastReport.ComponentBase.HandleMouseHover(FastReport.Utils.FRMouseEventArgs)">
            <summary>
            Handles MouseMove event that occurs when the user moves the mouse in the designer.
            </summary>
            <remarks>
              <para>This method is called when the user moves the mouse in the designer. Typical
                use of this method is to change the mouse cursor to <b>SizeAll</b> when it is over
                an object. The standard implementation does the following:</para>
              <list type="bullet">
                <item>checks if the mouse pointer is inside the object;</item>
                <item>changes the cursor shape (<b>e.Cursor</b> property);</item>
                <item>sets the <b>e.Handled</b> flag to <b>true</b>.</item>
              </list>
            </remarks>
            <param name="e">Current mouse state.</param>
        </member>
        <member name="M:FastReport.ComponentBase.HandleMouseMove(FastReport.Utils.FRMouseEventArgs)">
            <summary>
            Handles MouseMove event that occurs when the user moves the mouse in the designer.
            </summary>
            <remarks>
              <para>This method is called when the user moves the mouse in the designer. The
                standard implementation does the following:</para>
              <list type="bullet">
                <item>
                        if mouse button is not pressed, check that mouse pointer is inside one of
                        the selection points returned by the <see cref="M:FastReport.ComponentBase.GetSelectionPoints"/>
                        method and set the <b>e.SizingPoint</b> member to the corresponding sizing
                        point;
                    </item>
                <item>if mouse button is pressed, and <b>e.SizingPoint</b> member is not
                    <b>SizingPoint.None</b>, resize the object.</item>
              </list>
            </remarks>
            <param name="e">Current mouse state.</param>
        </member>
        <member name="M:FastReport.ComponentBase.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <summary>
            Handles MouseUp event that occurs when the user releases the mouse button in the designer.
            </summary>
            <remarks>
              <para>This method is called when the user releases the mouse button in the
                designer. The standard implementation does the following:</para>
              <list type="bullet">
                <item>if <b>e.Mode</b> is <b>WorkspaceMode2.SelectionRect</b>, checks if object
                    is inside the selection rectangle and sets <b>e.Handled</b> flag if so;</item>
                <item>
                        checks that object is inside its parent (calls the
                        <see cref="M:FastReport.ComponentBase.CheckParent(System.Boolean)"/> method).
                    </item>
              </list>
            </remarks>
            <param name="e">Current mouse state.</param>
        </member>
        <member name="M:FastReport.ComponentBase.HandleMouseWheel(FastReport.Utils.FRMouseEventArgs)">
            <summary>
            Handles mouse wheel event.
            </summary>
            <param name="e">Current mouse state.</param>
        </member>
        <member name="M:FastReport.ComponentBase.PointInObject(System.Drawing.PointF)">
            <summary>
            Checks if given point is inside the object's bounds.
            </summary>
            <param name="point">point to check.</param>
            <returns><b>true</b> if <b>point</b> is inside the object's bounds.</returns>
            <remarks>
            You can override this method if your objectis not of rectangular form.
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.DrawSelectionPoint(FastReport.Utils.FRPaintEventArgs,System.Drawing.Pen,System.Drawing.Brush,System.Single,System.Single)">
            <summary>
            Draws the selection point.
            </summary>
            <param name="e">Paint event args.</param>
            <param name="p"><see cref="T:System.Drawing.Pen"/> object.</param>
            <param name="b"><see cref="T:System.Drawing.Brush"/> object.</param>
            <param name="x">Left coordinate.</param>
            <param name="y">Top coordinate.</param>
        </member>
        <member name="M:FastReport.ComponentBase.GetSelectionPoints">
            <summary>
            Gets the object's selection points.
            </summary>
            <returns>Array of <see cref="T:FastReport.Utils.SelectionPoint"/> objects.</returns>
            <remarks>
            <para>Selection point is a small square displayed at the object's sides when object is selected
            in the designer. You can drag this square by the mouse to change the object's size. For example,
            the <b>TextObject</b> has eight selection points to change its width and height by the mouse.</para>
            <para>If you are developing a new component for FastReport, you may override this method
            if your object has non-standard set of selection points. For example, if an object has something like
            "AutoSize" property, it would be good to disable all selection points if that property is <b>true</b>,
            to disable resizing of the object by the mouse.</para>
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBase.PointInSelectionPoint(System.Single,System.Single,System.Drawing.PointF)">
            <summary>
            Gets a value indicating that given point is inside selection point.
            </summary>
            <param name="x">point's x coordinate.</param>
            <param name="y">point's y coordinate.</param>
            <param name="point">selection point.</param>
            <returns><b>true</b> if <b>(x,y)</b> is inside the <b>point</b></returns>
        </member>
        <member name="P:FastReport.ComponentBase.AbsBottom">
            <summary>
            Gets the absolute bottom coordinate of the object.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.AbsBounds">
            <summary>
            Gets the absolute bounding rectangle of the object.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.AbsLeft">
            <summary>
            Gets the absolute left coordinate of the object.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.AbsRight">
            <summary>
            Gets the absolute right coordinate of the object.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.AbsTop">
            <summary>
            Gets the absolute top coordinate of the object.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.Anchor">
            <summary>
            Gets or sets the edges of the container to which a control is bound and determines how a control
            is resized with its parent.
            </summary>
            <remarks>
            <para>Use the Anchor property to define how a control is automatically resized as its parent control
            is resized. Anchoring a control to its parent control ensures that the anchored edges remain in the
            same position relative to the edges of the parent control when the parent control is resized.</para>
            <para>You can anchor a control to one or more edges of its container. For example, if you have a band
            with a <b>TextObject</b> whose <b>Anchor</b> property value is set to <b>Top, Bottom</b>, the <b>TextObject</b> is stretched to
            maintain the anchored distance to the top and bottom edges of the band as the height of the band
            is increased.</para>
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Bottom">
            <summary>
            Gets the bottom coordinate of the object in relation to its container.
            </summary>
            <remarks>
            To change the bottom coordinate, change the <see cref="P:FastReport.ComponentBase.Top"/> and/or <see cref="P:FastReport.ComponentBase.Height"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Bounds">
            <summary>
            Gets or sets the bounding rectangle of the object.
            </summary>
            <remarks>
            Assigning a value to this property is equal to assigning values to the <see cref="P:FastReport.ComponentBase.Left"/>,
            <see cref="P:FastReport.ComponentBase.Top"/>, <see cref="P:FastReport.ComponentBase.Width"/>, <see cref="P:FastReport.ComponentBase.Height"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.ClientSize">
            <summary>
            Gets or sets the size of client area of the object.
            </summary>
            <remarks>
            This property is used in the <see cref="T:FastReport.Dialog.DialogPage"/> class.
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Dock">
            <summary>
            Gets or sets which control borders are docked to its parent control and determines how a control
            is resized with its parent.
            </summary>
            <remarks>
            <para>Use the <b>Dock</b> property to define how a control is automatically resized as its parent control is
            resized. For example, setting Dock to <c>DockStyle.Left</c> causes the control to align itself with the
            left edges of its parent control and to resize as the parent control is resized.</para>
            <para>A control can be docked to one edge of its parent container or can be docked to all edges and
            fill the parent container.</para>
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.GroupIndex">
            <summary>
            Gets or sets a group index.
            </summary>
            <remarks>
            Group index is used to group objects in the designer (using "Group" button). When you select
            any object in a group, entire group becomes selected. To reset a group, set the <b>GroupIndex</b>
            to 0 (default value).
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Height">
            <summary>
            Gets or sets the height of the object.
            </summary>
            <remarks>
            This property value is measured in the screen pixels. Use <see cref="T:FastReport.Utils.Units"/> class to
            convert a value to desired units.
            </remarks>
            <example>The following example demonstrates how to convert between pixels and units:<code>
            TextObject text1;
            // set Height to 10mm
            text1.Height = Units.Millimeters * 10;
            // convert a value to millimeters
            MessageBox.Show("Height = " + (text1.Height / Units.Millimeters).ToString() + "mm");
            </code></example>
        </member>
        <member name="P:FastReport.ComponentBase.Left">
            <summary>
            Gets or sets the left coordinate of the object in relation to its container.
            </summary>
            <remarks>
              <para>
                    This property value is measured in the screen pixels. Use
                    <see cref="T:FastReport.Utils.Units"/> class to convert a value to desired units.
                </para>
              <para>
                    To obtain absolute coordinate, use <see cref="P:FastReport.ComponentBase.AbsLeft"/> property.
                </para>
            </remarks>
            <example>The following example demonstrates how to convert between pixels and units:<code>
            TextObject text1;
            // set Left to 10mm
            text1.Left = Units.Millimeters * 10;
            // convert a value to millimeters
            MessageBox.Show("Left = " + (text1.Left / Units.Millimeters).ToString() + "mm");
            </code></example>
        </member>
        <member name="P:FastReport.ComponentBase.Right">
            <summary>
            Gets the right coordinate of the object in relation to its container.
            </summary>
            <remarks>
            To change the right coordinate, change the <see cref="P:FastReport.ComponentBase.Left"/> and/or <see cref="P:FastReport.ComponentBase.Width"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Tag">
            <summary>
            Gets or sets the Tag string for this component.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBase.Top">
            <summary>
            Gets or sets the top coordinate of the object in relation to its container.
            </summary>
            <remarks>
              <para>
                    This property value is measured in the screen pixels. Use
                    <see cref="T:FastReport.Utils.Units"/> class to convert a value to desired units.
                </para>
              <para>
                    To obtain absolute coordinate, use <see cref="P:FastReport.ComponentBase.AbsTop"/> property.
                </para>
            </remarks>
            <example>The following example demonstrates how to convert between pixels and units:<code>
            TextObject text1;
            // set Top to 10mm
            text1.Top = Units.Millimeters * 10;
            // convert a value to millimeters
            MessageBox.Show("Top = " + (text1.Top / Units.Millimeters).ToString() + "mm");
            </code></example>
        </member>
        <member name="P:FastReport.ComponentBase.Visible">
            <summary>
            Gets or sets a value indicating whether the object is displayed in the preview window.
            </summary>
            <remarks>
            Setting this property to <b>false</b> will hide the object in the preview window.
            </remarks>
            <example>The following report script will control the Text1 visibility depending on the value of the
            data column:<code>
            private void Data1_BeforePrint(object sender, EventArgs e)
            {
              Text1.Visible = [Orders.Shipped] == true;
            }
            </code></example>
        </member>
        <member name="P:FastReport.ComponentBase.Printable">
            <summary>
            Gets or sets a value that determines if the object can be printed on the printer.
            </summary>
            <remarks>
            Object with Printable = <b>false</b> is still visible in the preview window, but not on the printout.
            If you want to hide an object in the preview, set the <see cref="P:FastReport.ComponentBase.Visible"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:FastReport.ComponentBase.Width">
            <summary>
            Gets or sets the width of the object.
            </summary>
            <remarks>
            This property value is measured in the screen pixels. Use <see cref="T:FastReport.Utils.Units"/> class to
            convert a value to desired units.
            </remarks>
            <example>The following example demonstrates how to convert between pixels and units:<code>
            TextObject text1;
            // set Width to 10mm
            text1.Width = Units.Millimeters * 10;
            // convert a value to millimeters
            MessageBox.Show("Width = " + (text1.Width / Units.Millimeters).ToString() + "mm");
            </code></example>
        </member>
        <member name="M:FastReport.ComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ComponentBase"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.ComponentBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ComponentBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Controls.FRSplitContainer">
            <summary>
            Split Container Control
            </summary>
        </member>
        <member name="M:FastReport.Controls.FRSplitContainer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:FastReport.Controls.TreeViewMultiSelect">
            <summary>
            TreeView control with multiselect support.
            </summary>
            <remarks>
            This control is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Controls.TreeViewMultiSelect.#ctor">
            <summary>
            Creates a new instance of the TreeViewMultiSelect control.
            </summary>
        </member>
        <member name="P:FastReport.Controls.TreeViewMultiSelect.SelectedNodes">
            <summary>
            Gets a copy of list of selected nodes.
            </summary>
        </member>
        <member name="M:FastReport.Controls.TreeViewMultiSelect.OnGotFocus(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.TreeViewMultiSelect.OnLostFocus(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.TreeViewMultiSelect.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.TreeViewMultiSelect.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.TreeViewMultiSelect.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Controls.DataColumnComboBox">
            <summary>
            Represents the combobox used to select a data column.
            </summary>
        </member>
        <member name="E:FastReport.Controls.DataColumnComboBox.TextChanged">
            <summary>
            Occurs when the text portion of the combobox is changed.
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataColumnComboBox.Text">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Controls.DataColumnComboBox.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataColumnComboBox.Report">
            <summary>
            Gets or sets the Report.
            </summary>
        </member>
        <member name="M:FastReport.Controls.DataColumnComboBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.DataColumnComboBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.DataColumnComboBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.DataColumnComboBox.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.DataColumnComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Controls.DataColumnComboBox"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Controls.TextAlign">
            <summary>
            Specifies how text in a <see cref="T:FastReport.Controls.FRRichTextBox"/> is horizontally aligned.
            </summary>
        </member>
        <member name="F:FastReport.Controls.TextAlign.Left">
            <summary>
            The text is aligned to the left.
            </summary>
        </member>
        <member name="F:FastReport.Controls.TextAlign.Right">
            <summary>
            The text is aligned to the right.
            </summary>
        </member>
        <member name="F:FastReport.Controls.TextAlign.Center">
            <summary>
            The text is aligned in the center.
            </summary>
        </member>
        <member name="F:FastReport.Controls.TextAlign.Justify">
            <summary>
            The text is justified.
            </summary>
        </member>
        <member name="P:FastReport.Controls.FRRichTextBox.SelectionAlignment">
            <summary>
            Gets or sets the alignment to apply to the current
            selection or insertion point.
            </summary>
            <remarks>
            Replaces the SelectionAlignment from <see cref="T:System.Windows.Forms.RichTextBox"/>.
            </remarks>
        </member>
        <member name="M:FastReport.Controls.FRRichTextBox.PixelsToTwips(System.Single)">
            <summary>
            Convert between screen pixels and twips (1/1440 inch, used by Win32 API calls)
            </summary>
            <param name="n">Value in screen pixels</param>
            <returns>Value in twips</returns>
        </member>
        <member name="M:FastReport.Controls.FRRichTextBox.TwipsToPixels(System.Int32)">
            <summary>
            Convert between screen pixels and twips (1/1440 inch, used by Win32 API calls)
            </summary>
            <param name="twips">Value in twips</param>
            <returns>Value in screen pixels</returns>
        </member>
        <member name="M:FastReport.Controls.FRRichTextBox.FormatRange(System.Drawing.Graphics,System.Drawing.Graphics,System.Drawing.RectangleF,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calculate or render the contents of RichTextBox for printing
            </summary>
            <param name="g">Graphics object</param>
            <param name="measureGraphics">Graphics object to measure richtext for</param>
            <param name="displayRect">Bonding rectangle of the RichTextBox</param>
            <param name="charFrom">Index of first character to be printed</param>
            <param name="charTo">Index of last character to be printed</param>
            <param name="measureOnly">If true, only the calculation is performed,
            otherwise the text is rendered as well</param>
            <returns>(Index of last character that fitted on the page) + 1</returns>
        </member>
        <member name="M:FastReport.Controls.FRRichTextBox.FormatRange(System.Drawing.Graphics,System.Drawing.Graphics,System.Drawing.RectangleF,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Calculate or render the contents of RichTextBox for printing
            </summary>
            <param name="g">Graphics object</param>
            <param name="measureGraphics">Graphics object to measure richtext for</param>
            <param name="displayRect">Bonding rectangle of the RichTextBox</param>
            <param name="charFrom">Index of first character to be printed</param>
            <param name="charTo">Index of last character to be printed</param>
            <param name="measureOnly">If true, only the calculation is performed,
            otherwise the text is rendered as well</param>
            <param name="height">The calculated text height</param>
            <returns>(Index of last character that fitted on the page) + 1</returns>
        </member>
        <member name="T:FastReport.Controls.DataTreeSelectedItemType">
            <summary>
            This is an internal enum that represents the selected datatree item type.
            </summary>
        </member>
        <member name="F:FastReport.Controls.DataTreeSelectedItemType.None">
            <summary>
            Nothing selected.
            </summary>
        </member>
        <member name="F:FastReport.Controls.DataTreeSelectedItemType.DataColumn">
            <summary>
            Data column selected.
            </summary>
        </member>
        <member name="F:FastReport.Controls.DataTreeSelectedItemType.Total">
            <summary>
            Total selected.
            </summary>
        </member>
        <member name="F:FastReport.Controls.DataTreeSelectedItemType.Parameter">
            <summary>
            Parameter selected.
            </summary>
        </member>
        <member name="F:FastReport.Controls.DataTreeSelectedItemType.Function">
            <summary>
            Function selected.
            </summary>
        </member>
        <member name="F:FastReport.Controls.DataTreeSelectedItemType.DialogControl">
            <summary>
            Dialog control selected.
            </summary>
        </member>
        <member name="T:FastReport.Controls.DataTreeView">
            <summary>
            This is an internal control that represents the data tree.
            </summary>
            <remarks>
            This control is for internal use only.
            </remarks>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.DataSource">
            <summary>
            DataSource property
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.SelectedItem">
            <summary>
            SelectedItem property
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.SelectedItemType">
            <summary>
            SelectedItemType property
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowDataSources">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowColumns">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowParameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowVariables">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowNone">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowRelations">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowEnabledOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowTotals">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowFunctions">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowDialogs">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ShowCubeSources">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Controls.DataTreeView.ExpandedNodes">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Controls.DataTreeView.CreateNodes(FastReport.Data.Dictionary)">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:FastReport.Controls.DataTreeView.#ctor">
            <summary>
            Creates a new instance of the DataTreeView control.
            </summary>
        </member>
        <member name="T:FastReport.Controls.PageControl">
            <summary>
            Represents a control that may contain several pages. It is similar to the TabControl
            but contains no tabs. This control is widely used in wizards.
            </summary>
        </member>
        <member name="E:FastReport.Controls.PageControl.PageSelected">
            <summary>
            Occurs when page is selected.
            </summary>
        </member>
        <member name="P:FastReport.Controls.PageControl.SelectorWidth">
            <summary>
            Gets or sets a value that determines whether the selector area is visible or not.
            </summary>
        </member>
        <member name="P:FastReport.Controls.PageControl.SelectorTabHeight">
            <summary>
            Gets or sets the height of selector tab.
            </summary>
        </member>
        <member name="P:FastReport.Controls.PageControl.Padding">
            <summary>
            This property is not relevant to this class
            </summary>
        </member>
        <member name="P:FastReport.Controls.PageControl.ActivePage">
            <summary>
            Gets or sets the active page.
            </summary>
        </member>
        <member name="P:FastReport.Controls.PageControl.ActivePageIndex">
            <summary>
            Gets or sets the index of active page.
            </summary>
        </member>
        <member name="P:FastReport.Controls.PageControl.HighlightPageIndex">
            <summary>
            Gets or sets the highlighted page index.
            </summary>
        </member>
        <member name="P:FastReport.Controls.PageControl.Pages">
            <summary>
            Gets the collection of pages.
            </summary>
        </member>
        <member name="M:FastReport.Controls.PageControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.PageControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.PageControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.PageControl.OnMouseLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.PageControl.GetTabAt(System.Drawing.Point)">
            <summary>
            Gets tab at specified mouse point.
            </summary>
            <param name="pt">The mouse point.</param>
            <returns>Index of tab under mouse; -1 if mouse is outside tab area.</returns>
        </member>
        <member name="M:FastReport.Controls.PageControl.SelectNextPage">
            <summary>
            Selects the next page.
            </summary>
        </member>
        <member name="M:FastReport.Controls.PageControl.SelectPrevPage">
            <summary>
            Selects the previous page.
            </summary>
        </member>
        <member name="M:FastReport.Controls.PageControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Controls.PageControl"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Controls.PageControlPage">
            <summary>
            This class represents a single page of the <see cref="T:FastReport.Controls.PageControl"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Controls.PageControlPage.Text">
            <summary>
            Gets or sets the page caption text.
            </summary>
        </member>
        <member name="T:FastReport.Controls.TextBoxButton">
            <summary>
            Represents the control that combines a textbox and a button.
            </summary>
        </member>
        <member name="E:FastReport.Controls.TextBoxButton.TextBoxChanged">
            <summary>
            Occurs when the textbox is changed.
            </summary>
        </member>
        <member name="E:FastReport.Controls.TextBoxButton.ButtonClick">
            <summary>
            Occurs when the button is clicked.
            </summary>
        </member>
        <member name="P:FastReport.Controls.TextBoxButton.Text">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Controls.TextBoxButton.Image">
            <summary>
            Gets or sets the button's image.
            </summary>
        </member>
        <member name="M:FastReport.Controls.TextBoxButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.TextBoxButton.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.TextBoxButton.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.TextBoxButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Controls.TextBoxButton"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Controls.ColorComboBox">
            <summary>
            Represents a combobox that allows to choose a color.
            </summary>
            <remarks>
            This control may be useful if you write own components for FastReport.
            </remarks>
        </member>
        <member name="E:FastReport.Controls.ColorComboBox.ColorSelected">
            <summary>
            This event is raised when you select a color.
            </summary>
        </member>
        <member name="P:FastReport.Controls.ColorComboBox.Color">
            <summary>
            Gets or sets the selected color.
            </summary>
        </member>
        <member name="P:FastReport.Controls.ColorComboBox.ShowColorName">
            <summary>
            Gets or sets value indicating whether it is necessary to show a color name in a combobox.
            </summary>
        </member>
        <member name="M:FastReport.Controls.ColorComboBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.ColorComboBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.ColorComboBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.ColorComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Controls.ColorComboBox"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Controls.ColorDropDown">
            <summary>
            Represents a drop-down control that allows to choose a color.
            </summary>
            <remarks>
            This control may be useful if you write own components for FastReport.
            </remarks>
        </member>
        <member name="E:FastReport.Controls.ColorDropDown.ColorSelected">
            <summary>
            This event is raised when you select a color.
            </summary>
        </member>
        <member name="P:FastReport.Controls.ColorDropDown.Color">
            <summary>
            Gets or sets the selected color.
            </summary>
        </member>
        <member name="M:FastReport.Controls.ColorDropDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Controls.ColorDropDown"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Controls.ColorPopup">
            <summary>
            Represents a popup window that alows to choose a color.
            </summary>
            <remarks>
            This control may be useful if you write own components for FastReport.
            </remarks>
        </member>
        <member name="E:FastReport.Controls.ColorPopup.ColorSelected">
            <summary>
            This event is raised when you select a color.
            </summary>
        </member>
        <member name="P:FastReport.Controls.ColorPopup.Color">
            <summary>
            Gets or sets the selected color.
            </summary>
        </member>
        <member name="M:FastReport.Controls.ColorPopup.#ctor(System.Windows.Forms.Form)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Controls.ColorPopup"/> class with default settings.
            </summary>
            <param name="ownerForm">The main form that owns this popup control.</param>
        </member>
        <member name="T:FastReport.Controls.LabelLine">
            <summary>
            Represents the label with line.
            </summary>
        </member>
        <member name="M:FastReport.Controls.LabelLine.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Controls.LabelLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Controls.LabelLine"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Controls.PopupWindow">
            <summary>
            Represents a popup form.
            </summary>
            <remarks>
            Use this form if you want to show some controls in non-modal borderless form that
            behaves like other standard popup controls such as context menu. This form does not
            move a focus from the parent form.
            </remarks>
        </member>
        <member name="M:FastReport.Controls.PopupWindow.Show(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Shows the form.
            </summary>
            <param name="ctl">The control which location is used as a reference for <b>pt</b> parameter.</param>
            <param name="pt">The location relative to the <b>ctl</b> control.</param>
        </member>
        <member name="M:FastReport.Controls.PopupWindow.Show(System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Shows the form.
            </summary>
            <param name="ctl">The control which location is used as a reference for <b>x</b>, <b>y</b> parameters.</param>
            <param name="x">The x position relative to the <b>ctl</b> control.</param>
            <param name="y">The y position relative to the <b>ctl</b> control.</param>
        </member>
        <member name="M:FastReport.Controls.PopupWindow.Show(System.Drawing.Point)">
            <summary>
            Shows the form.
            </summary>
            <param name="pt">The absolute screen location.</param>
        </member>
        <member name="M:FastReport.Controls.PopupWindow.#ctor(System.Windows.Forms.Form)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Controls.PopupWindow"/> class with default settings.
            </summary>
            <param name="ownerForm">The main form that owns this popup form.</param>
        </member>
        <member name="M:FastReport.Controls.PopupWindow.PopupCancel(System.Object,FastReport.Controls.PopupCancelEventArgs)">
            <summary>
            Handler which allows to prevent canceling of popup window
            </summary>
            <param name="sender">Popup helper</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:FastReport.Controls.PopupClosedEventArgs">
            <summary>
            Contains event information for a <b>PopupClosed</b> event.
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupClosedEventArgs.popup">
            <summary>
            The popup form.
            </summary>
        </member>
        <member name="P:FastReport.Controls.PopupClosedEventArgs.Popup">
            <summary>
            Gets the popup form which is being closed.
            </summary>
        </member>
        <member name="M:FastReport.Controls.PopupClosedEventArgs.#ctor(System.Windows.Forms.Form)">
            <summary>
            Constructs a new instance of this class for the specified
            popup form.
            </summary>
            <param name="popup">Popup Form which is being closed.</param>
        </member>
        <member name="T:FastReport.Controls.PopupCancelEventArgs">
            <summary>
            Arguments to a <b>PopupCancelEvent</b>.  Provides a
            reference to the popup form that is to be closed and 
            allows the operation to be cancelled.
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupCancelEventArgs.cancel">
            <summary>
            Whether to cancel the operation
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupCancelEventArgs.location">
            <summary>
            Mouse down location
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupCancelEventArgs.popup">
            <summary>
            Popup form.
            </summary>
        </member>
        <member name="M:FastReport.Controls.PopupCancelEventArgs.#ctor(System.Windows.Forms.Form,System.Drawing.Point)">
            <summary>
            Constructs a new instance of this class.
            </summary>
            <param name="popup">The popup form</param>
            <param name="location">The mouse location, if any, where the
            mouse event that would cancel the popup occured.</param>
        </member>
        <member name="P:FastReport.Controls.PopupCancelEventArgs.Popup">
            <summary>
            Gets the popup form
            </summary>
        </member>
        <member name="P:FastReport.Controls.PopupCancelEventArgs.CursorLocation">
            <summary>
            Gets the location that the mouse down which would cancel this 
            popup occurred
            </summary>
        </member>
        <member name="P:FastReport.Controls.PopupCancelEventArgs.Cancel">
            <summary>
            Gets/sets whether to cancel closing the form. Set to
            <c>true</c> to prevent the popup from being closed.
            </summary>
        </member>
        <member name="T:FastReport.Controls.PopupClosedEventHandler">
            <summary>
            Represents the method which responds to a <b>PopupClosed</b> event.
            </summary>
        </member>
        <member name="T:FastReport.Controls.PopupCancelEventHandler">
            <summary>
            Represents the method which responds to a <b>PopupCancel</b> event.
            </summary>
        </member>
        <member name="T:FastReport.Controls.PopupWindowHelper">
            <summary>
            A class to assist in creating popup windows like Combo Box drop-downs and Menus.
            This class includes functionality to keep the title bar of the popup owner form
            active whilst the popup is displayed, and to automatically cancel the popup
            whenever the user clicks outside the popup window or shifts focus to another 
            application.
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupWindowHelper.popClosedHandler">
            <summary>
            Event Handler to detect when the popup window is closed
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupWindowHelper.filter">
            <summary>
            Message filter to detect mouse clicks anywhere in the application
            whilst the popup window is being displayed.
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupWindowHelper.popup">
            <summary>
            The popup form that is being shown.
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupWindowHelper.owner">
            <summary>
            The owner of the popup form that is being shown:
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupWindowHelper.popupShowing">
            <summary>
            Whether the popup is showing or not.
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupWindowHelper.skipClose">
            <summary>
            Whether the popup has been cancelled, notified by PopupCancel,
            rather than closed.
            </summary>
        </member>
        <member name="E:FastReport.Controls.PopupWindowHelper.PopupClosed">
            <summary>
            Raised when the popup form is closed.
            </summary>
        </member>
        <member name="E:FastReport.Controls.PopupWindowHelper.PopupCancel">
            <summary>
            Raised when the Popup Window is about to be cancelled.  The
            <see cref="P:FastReport.Controls.PopupCancelEventArgs.Cancel"/> property can be
            set to <c>true</c> to prevent the form from being cancelled.
            </summary>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelper.ShowPopup(System.Windows.Forms.Form,System.Windows.Forms.Form,System.Drawing.Point)">
            <summary>
            Shows the specified Form as a popup window, keeping the
            Owner's title bar active and preparing to cancel the popup
            should the user click anywhere outside the popup window.
            <para>Typical code to use this message is as follows:</para>
            <code>
               frmPopup popup = new frmPopup();
               Point location = this.PointToScreen(new Point(button1.Left, button1.Bottom));
               popupHelper.ShowPopup(this, popup, location);
            </code>
            <para>Put as much initialisation code as possible
            into the popup form's constructor, rather than the <b>System.Windows.Forms.Load</b>
            event as this will improve visual appearance.</para>
            </summary>
            <param name="owner">Main form which owns the popup</param>
            <param name="popup">Window to show as a popup</param>
            <param name="location">Location relative to the screen to show the popup at.</param>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelper.popup_Closed(System.Object,System.EventArgs)">
            <summary>
            Responds to the <see cref="E:System.Windows.Forms.Form.Closed"/>
            event from the popup form.
            </summary>
            <param name="sender">Popup form that has been closed.</param>
            <param name="e">Not used.</param>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelper.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Subclasses the owning form's existing Window Procedure to enables the 
            title bar to remain active when a popup is show, and to detect if
            the user clicks onto another application whilst the popup is visible.
            </summary>
            <param name="m">Window Procedure Message</param>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelper.ClosePopup">
            <summary>
            Called when the popup is being hidden.
            </summary>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelper.OnPopupClosed(FastReport.Controls.PopupClosedEventArgs)">
            <summary>
            Raises the <see cref="E:FastReport.Controls.PopupWindowHelper.PopupClosed"/> event.
            </summary>
            <param name="e"><see cref="T:FastReport.Controls.PopupClosedEventArgs"/> describing the
            popup form that is being closed.</param>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelper.OnPopupCancel(FastReport.Controls.PopupCancelEventArgs)">
            <summary>
            Raises the <see cref="E:FastReport.Controls.PopupWindowHelper.PopupCancel"/> event.
            </summary>
            <param name="e"><see cref="T:FastReport.Controls.PopupCancelEventArgs"/> describing the
            popup form that about to be cancelled.</param>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelper.#ctor">
            <summary>
            Default constructor.
            </summary>
            <remarks>Use the <see cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)"/>
            method to attach this class to the form you want to show popups from.</remarks>
        </member>
        <member name="T:FastReport.Controls.PopupWindowHelperMessageFilter">
            <summary>
            A Message Loop filter which detect mouse events whilst the popup form is shown
            and notifies the owning <see cref="T:FastReport.Controls.PopupWindowHelper"/> class when a mouse
            click outside the popup occurs.
            </summary>
        </member>
        <member name="E:FastReport.Controls.PopupWindowHelperMessageFilter.PopupCancel">
            <summary>
            Raised when the Popup Window is about to be cancelled.  The
            <see cref="P:FastReport.Controls.PopupCancelEventArgs.Cancel"/> property can be
            set to <c>true</c> to prevent the form from being cancelled.
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupWindowHelperMessageFilter.popup">
            <summary>
            The popup form
            </summary>
        </member>
        <member name="F:FastReport.Controls.PopupWindowHelperMessageFilter.owner">
            <summary>
            The owning <see cref="T:FastReport.Controls.PopupWindowHelper"/> object.
            </summary>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelperMessageFilter.#ctor(FastReport.Controls.PopupWindowHelper)">
            <summary>
            Constructs a new instance of this class and sets the owning
            object.
            </summary>
            <param name="owner">The <see cref="T:FastReport.Controls.PopupWindowHelper"/> object
            which owns this class.</param>
        </member>
        <member name="P:FastReport.Controls.PopupWindowHelperMessageFilter.Popup">
            <summary>
            Gets/sets the popup form which is being displayed.
            </summary>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelperMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Checks the message loop for mouse messages whilst the popup
            window is displayed.  If one is detected the position is
            checked to see if it is outside the form, and the owner
            is notified if so.
            </summary>
            <param name="m">Windows Message about to be processed by the
            message loop</param>
            <returns><c>true</c> to filter the message, <c>false</c> otherwise.
            This implementation always returns <c>false</c>.</returns>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelperMessageFilter.OnMouseDown">
            <summary>
            Checks the mouse location and calls the OnCancelPopup method
            if the mouse is outside the popup form.   
            </summary>
        </member>
        <member name="M:FastReport.Controls.PopupWindowHelperMessageFilter.OnCancelPopup(FastReport.Controls.PopupCancelEventArgs)">
            <summary>
            Raises the <see cref="E:FastReport.Controls.PopupWindowHelperMessageFilter.PopupCancel"/> event.
            </summary>
            <param name="e">The <see cref="T:FastReport.Controls.PopupCancelEventArgs"/> associated 
            with the cancel event.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHelper.UpdateTemplateSizes">
            <summary>
            Updates HeaderWidth, HeaderHeight, BodyWidth, BodyHeight properties.
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewObject">
            <summary>
            Represents the crossview object that is used to print cube slice or slicegrid.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ColumnCount">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.RowCount">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.FixedRows">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.FixedColumns">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.CanBreak">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.GrowToBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.RepeatHeaders">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.RepeatRowHeaders">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.RepeatColumnHeaders">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.CrossView.CrossViewObject.ModifyResult">
            <summary>
            Allows to modify the prepared matrix elements such as cells, rows, columns.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ShowTitle">
            <summary>
            Gets or sets a value indicating whether to show a title row.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ShowXAxisFieldsCaption">
            <summary>
            Gets or sets a value indicating whether to show a X Axis fields Caption.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ShowYAxisFieldsCaption">
            <summary>
            Gets or sets a value indicating whether to show a Y Axis fields Caption.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.Style">
            <summary>
            Gets or sets a matrix style.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ModifyResultEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.CrossView.CrossViewObject.ModifyResult"/> event.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.CrossView.CrossViewObject.ModifyResult"/> event for more details.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ColumnDescriptorsIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.RowDescriptorsIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.ColumnTerminalIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.RowTerminalIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.CubeSource">
            <summary>
            Gets or sets a cube source.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewObject.Data">
            <summary>
            Gets the object that holds data of Cube
            </summary>
            <remarks>
            See the <see cref="T:FastReport.CrossView.CrossViewData"/> class for more details.
            </remarks>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.BuildTemplate">
            <summary>
            Creates or updates the matrix template.
            </summary>
            <remarks>
            Call this method after you modify the matrix descriptors using the <see cref="P:FastReport.CrossView.CrossViewObject.Data"/>
            object's properties. 
            </remarks>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.OnModifyResult(System.EventArgs)">
            <summary>
            This method fires the <b>ModifyResult</b> event and the script code connected to the <b>ModifyResultEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossView.CrossViewObject"/> class.
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewMeasureCell">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewMeasureCell.Text">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewAxisDrawCell">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.Level">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.SizeLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.Cell">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.SizeCell">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.MeasureIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.CrossView.CrossViewAxisDrawCell.Text">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewAxisDrawCellHandler">
            <summary>
            
            </summary>
            <param name="crossViewAxisDrawCell"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.CrossView.IBaseCubeLink">
            <summary>
            Represents interface of the source for <see cref="N:FastReport.CrossView"/> object.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.XAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.YAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.MeasuresCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.MeasuresLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.MeasuresInXAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.MeasuresInYAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.DataColumnCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.DataRowCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.IBaseCubeLink.SourceAssigned">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.GetMeasureCell(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.TraverseXAxis(FastReport.CrossView.CrossViewAxisDrawCellHandler)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.TraverseYAxis(FastReport.CrossView.CrossViewAxisDrawCellHandler)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.GetXAxisFieldName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.GetYAxisFieldName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.CrossView.IBaseCubeLink.GetMeasureName(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewCellDescriptor">
            <summary>
            The descriptor that is used to describe one CrossView data cell.
            </summary>
            <remarks>
            The <see cref="T:FastReport.CrossView.CrossViewCellDescriptor"/> class is used to define one data cell of the CrossView.
            To set visual appearance of the data cell, use the <see cref="P:FastReport.CrossView.CrossViewDescriptor.TemplateCell"/> 
            property.
            <para/>The collection of descriptors used to represent the CrossView data cells is stored
            in the <b>CrossViewObject.Data.Cells</b> property.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.IsXGrandTotal">
            <summary>
            Gets a value indicating that this is the "GrandTotal" element on X axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.IsYGrandTotal">
            <summary>
            Gets a value indicating that this is the "GrandTotal" element on Y axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.IsXTotal">
            <summary>
            Gets a value indicating that this is the "Total" element on X axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.IsYTotal">
            <summary>
            Gets a value indicating that this is the "Total" element on Y axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.XFieldName">
            <summary>
            Gets the name of field in X axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.YFieldName">
            <summary>
            Gets the name of field in Y axis.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.MeasureName">
            <summary>
            Gets the name of measure in cube.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.X">
            <summary>
            Gets the x coordinate.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCellDescriptor.Y">
            <summary>
            Gets the y coordinate.
            </summary>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCellDescriptor.Assign(FastReport.CrossView.CrossViewDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCellDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCellDescriptor.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossView.CrossViewCellDescriptor"/> class
            </summary>
            <param name="xFieldName">The Field Name in X axis.</param>
            <param name="yFieldName">The Field Name in Y axis.</param>
            <param name="measureName">The Measure Name.</param>
            <param name="isXTotal">Indicates the "XTotal" element.</param>
            <param name="isYTotal">Indicates the "YTotal" element.</param>
            <param name="isXGrandTotal">Indicates the "XGrandTotal" element.</param>
            <param name="isYGrandTotal">Indicates the "YGrandTotal" element.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCellDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossView.CrossViewCellDescriptor"/> class
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewCells">
            <summary>
            Represents a collection of CrossView data descriptors used in the <see cref="T:FastReport.CrossView.CrossViewObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewCells.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.AddRange(FastReport.CrossView.CrossViewCellDescriptor[])">
            <summary>
            Adds the specified descriptors to the end of this collection.
            </summary>
            <param name="range">Array of descriptors to add.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Add(FastReport.CrossView.CrossViewCellDescriptor)">
            <summary>
            Adds a descriptor to the end of this collection.
            </summary>
            <param name="value">Descriptor to add.</param>
            <returns>Index of the added descriptor.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Insert(System.Int32,FastReport.CrossView.CrossViewCellDescriptor)">
            <summary>
            Inserts a descriptor into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The descriptor to insert.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Remove(FastReport.CrossView.CrossViewCellDescriptor)">
            <summary>
            Removes the specified descriptor from the collection.
            </summary>
            <param name="value">Descriptor to remove.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.IndexOf(FastReport.CrossView.CrossViewCellDescriptor)">
            <summary>
            Returns the zero-based index of the first occurrence of a descriptor.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of descriptor within 
            the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Contains(FastReport.CrossView.CrossViewCellDescriptor)">
            <summary>
            Determines whether a descriptor is in the collection.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns><b>true</b> if descriptor is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.ToArray">
            <summary>
            Copies the elements of this collection to a new array. 
            </summary>
            <returns>An array containing copies of this collection elements. </returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewCells.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewData">
            <summary>
            Contains a set of properties and methods to hold and manipulate the CrossView descriptors.
            </summary>
            <remarks>
            This class contains three collections of descriptors such as <see cref="P:FastReport.CrossView.CrossViewData.Columns"/>,
            <see cref="P:FastReport.CrossView.CrossViewData.Rows"/> and <see cref="P:FastReport.CrossView.CrossViewData.Cells"/>. Descriptors are filled from FastCube Slice.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.XAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.YAxisFieldsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.MeasuresCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.MeasuresLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.MeasuresInXAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.MeasuresInYAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.DataColumnCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.DataRowCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.SourceAssigned">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.ColumnDescriptorsIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.RowDescriptorsIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.ColumnTerminalIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.RowTerminalIndexes">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.Columns">
            <summary>
            Gets a collection of column descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.CrossView.CrossViewObject.BuildTemplate"/> method to refresh the CrossView.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.Rows">
            <summary>
            Gets a collection of row descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.CrossView.CrossViewObject.BuildTemplate"/> method to refresh the CrossView.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewData.Cells">
            <summary>
            Gets a collection of data cell descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.CrossView.CrossViewObject.BuildTemplate"/> method to refresh the CrossView.
            </remarks>
        </member>
        <member name="T:FastReport.CrossView.CrossViewDescriptor">
            <summary>
            The base class for matrix element descriptors such as <see cref="T:FastReport.CrossView.CrossViewHeaderDescriptor"/> and
            <see cref="T:FastReport.CrossView.CrossViewCellDescriptor"/>.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewDescriptor.Expression">
            <summary>
            Gets or sets an expression which value will be used to fill the matrix.
            </summary>
            <remarks>
            <b>Expression</b> may be any valid expression. Usually it's a data column:
            <c>[DataSource.Column]</c>.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewDescriptor.TemplateColumn">
            <summary>
            Gets or sets the template column bound to this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewDescriptor.TemplateRow">
            <summary>
            Gets or sets the template row bound to this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewDescriptor.TemplateCell">
            <summary>
            Gets or sets the template cell bound to this descriptor.
            </summary>
            <remarks>
            Using this property, you may access the matrix cell which is bound to
            this descriptor. It may be useful to change the cell's appearance. 
            <note>
            Before using this property, you must initialize the matrix descriptors by
            calling the <see cref="M:FastReport.CrossView.CrossViewObject.BuildTemplate"/> method.
            </note>
            </remarks>
            <example>
            <code>
            CrossViewObject crossView;
            // change the fill color of the first matrix cell
            crossView.Data.Cells[0].TemplateCell.Fill = new SolidFill(Color.Red);
            </code>
            </example>
        </member>
        <member name="M:FastReport.CrossView.CrossViewDescriptor.Assign(FastReport.CrossView.CrossViewDescriptor)">
            <summary>
            Assigns values from another descriptor.
            </summary>
            <param name="source">Descriptor to assign values from.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewDescriptor.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.CrossView.CrossViewHeader">
            <summary>
            Represents a collection of CrossView header descriptors used in the <see cref="T:FastReport.CrossView.CrossViewObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeader.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.AddRange(FastReport.CrossView.CrossViewHeaderDescriptor[])">
            <summary>
            Adds the specified descriptors to the end of this collection.
            </summary>
            <param name="range">Array of descriptors to add.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Add(FastReport.CrossView.CrossViewHeaderDescriptor)">
            <summary>
            Adds a descriptor to the end of this collection.
            </summary>
            <param name="value">Descriptor to add.</param>
            <returns>Index of the added descriptor.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Insert(System.Int32,FastReport.CrossView.CrossViewHeaderDescriptor)">
            <summary>
            Inserts a descriptor into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The descriptor to insert.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Remove(FastReport.CrossView.CrossViewHeaderDescriptor)">
            <summary>
            Removes the specified descriptor from the collection.
            </summary>
            <param name="value">Descriptor to remove.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.IndexOf(FastReport.CrossView.CrossViewHeaderDescriptor)">
            <summary>
            Returns the zero-based index of the first occurrence of a descriptor.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of descriptor within 
            the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Contains(FastReport.CrossView.CrossViewHeaderDescriptor)">
            <summary>
            Determines whether a descriptor is in the collection.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns><b>true</b> if descriptor is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.ToArray">
            <summary>
            Copies the elements of this collection to a new array. 
            </summary>
            <returns>An array containing copies of this collection elements. </returns>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeader.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:FastReport.CrossView.CrossViewHeaderDescriptor">
            <summary>
            The descriptor that is used to describe one element of the CrossView header.
            </summary>
            <remarks>
            The <see cref="T:FastReport.CrossView.CrossViewHeaderDescriptor"/> class is used to define one header element of the CrossView
            (either the column element or row element). 
            <para/>To set visual appearance of the element, use the <see cref="P:FastReport.CrossView.CrossViewDescriptor.TemplateCell"/> 
            property.
            <para/>The collection of descriptors used to represent the CrossView header is stored
            in the <b>CrossViewObject.Data.Columns</b> and <b>CrossViewObject.Data.Rows</b> properties.
            </remarks>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.IsGrandTotal">
            <summary>
            Gets a value indicating that this is the "GrandTotal" element.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.IsTotal">
            <summary>
            Gets a value indicating that this is the "Total" element.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.IsMeasure">
            <summary>
            Gets a value indicating that this is the "Measure" element.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.FieldName">
            <summary>
            Gets the name of field in cube.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.MeasureName">
            <summary>
            Gets the name of measure in cube.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.Cell">
            <summary>
            Gets the cell coordinate.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.CellSize">
            <summary>
            Gets the size in cell coordinate.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.Level">
            <summary>
            Gets the level coordinate.
            </summary>
        </member>
        <member name="P:FastReport.CrossView.CrossViewHeaderDescriptor.LevelSize">
            <summary>
            Gets the size in level coordinate.
            </summary>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeaderDescriptor.Assign(FastReport.CrossView.CrossViewDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeaderDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeaderDescriptor.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossView.CrossViewHeaderDescriptor"/> class
            </summary>
            <param name="fieldName">The Field Name.</param>
            <param name="measureName">The Measure Name.</param>
            <param name="isTotal">Indicates the "Total" element.</param>
            <param name="isGrandTotal">Indicates the "GrandTotal" element.</param>
            <param name="isMeasure">Indicates the "Measure" element.</param>
        </member>
        <member name="M:FastReport.CrossView.CrossViewHeaderDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossView.CrossViewHeaderDescriptor"/> class
            </summary>
        </member>
        <member name="T:FastReport.Design.ImportPlugins.RDL.RDLImportPlugin">
            <summary>
            Represents the RDL import plugin.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.RDLImportPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ImportPlugins.RDL.RDLImportPlugin"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.RDLImportPlugin.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ImportPlugins.RDL.RDLImportPlugin"/> class with a specified designer.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.RDLImportPlugin.GetFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.RDLImportPlugin.LoadReport(FastReport.Report,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.ImportPlugins.RDL.SizeUnits">
            <summary>
            The RDL Size units.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnits.Millimeter">
            <summary>
            Specifies the units measured in millimeters.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnits.Centimeter">
            <summary>
            Specifies the units measured in centimeters.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnits.Inch">
            <summary>
            Specifies the units measured in inches.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnits.Point">
            <summary>
            Specifies the units measured in points.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnits.Pica">
            <summary>
            Specifies the units measured in picas.
            </summary>
        </member>
        <member name="T:FastReport.Design.ImportPlugins.RDL.SizeUnitsP">
            <summary>
            Defines the constants used to convert between RDL Size and pixels.
            </summary>
            <remarks>
            To convert pixels to inches, use the code:
            <code>inches = pixels / SizeUnitsP.Inch;</code>
            To convert inches to pixels, use the code:
            <code>pixels = inches * SizeUnitsP.Inch;</code>
            </remarks>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnitsP.Millimeter">
            <summary>
            The number of pixels in one millimeter.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnitsP.Centimeter">
            <summary>
            The number of pixels in one centimeter.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnitsP.Inch">
            <summary>
            The number of pixels in one inch.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnitsP.Point">
            <summary>
            The number of pixels in one point.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnitsP.Pica">
            <summary>
            The number of pixels in one pica.
            </summary>
        </member>
        <member name="T:FastReport.Design.ImportPlugins.RDL.SizeUnitsM">
            <summary>
            Defines the constants used to convert between RDL Size and millimeters.
            </summary>
            <remarks>
            To convert millimeters to inches, use the code:
            <code>inches = millimeters / SizeUnitsM.Inch;</code>
            To convert inches to millimeters, use the code:
            <code>millimeters = inches * SizeUnitsM.Inch;</code>
            </remarks>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnitsM.Centimeter">
            <summary>
            The number of millimeters in one centimeter.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnitsM.Inch">
            <summary>
            The number of millimeters in one inch.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnitsM.Point">
            <summary>
            The number of millimeters in one point.
            </summary>
        </member>
        <member name="F:FastReport.Design.ImportPlugins.RDL.SizeUnitsM.Pica">
            <summary>
            The number of millimeters in one pica.
            </summary>
        </member>
        <member name="T:FastReport.Design.ImportPlugins.RDL.UnitsConverter">
            <summary>
            The RDL units converter.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.BooleanToBool(System.String)">
            <summary>
            Converts the RDL Boolean to bool value.
            </summary>
            <param name="boolean">The RDL Boolean value.</param>
            <returns>The bool value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertColor(System.String)">
            <summary>
            Converts the RDL Color to Color.
            </summary>
            <param name="colorName">The RDL Color value.</param>
            <returns>The Color value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.SizeToFloat(System.String,System.String)">
            <summary>
            Converts the RDL Size to float value.
            </summary>
            <param name="size">The RDL Size value.</param>
            <param name="unit">The RDL Size units measure.</param>
            <returns>The float value of RDL Size.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.SizeToInt(System.String,System.String)">
            <summary>
            Converts the RDL Size to int value.
            </summary>
            <param name="size">The RDL Size value.</param>
            <param name="unit">The RDL Size units measure.</param>
            <returns>The int value of RDL Size.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.SizeToMillimeters(System.String)">
            <summary>
            Converts the RDL Size to millimeters.
            </summary>
            <param name="size">The RDL Size value.</param>
            <returns>The float value of RDL Size in millimeters.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.SizeToPixels(System.String)">
            <summary>
            Converts the RDL Size to pixels.
            </summary>
            <param name="size">The RDL Size value.</param>
            <returns>The float value of RDL Size in pixels.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertFontStyle(System.String)">
            <summary>
            Converts the RDL FontStyle to FontStyle.
            </summary>
            <param name="fontStyle">The RDL FontStyle value.</param>
            <returns>The FontStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertFontSize(System.String)">
            <summary>
            Converts the RDL FontSize to float.
            </summary>
            <param name="fontSize">The RDL FontSize value.</param>
            <returns>The float value of RDL FontSize in points.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertTextAlign(System.String)">
            <summary>
            Converts the RDL TextAlign to HorzAlign.
            </summary>
            <param name="textAlign">The RDL TextAlign value.</param>
            <returns>The HorzAlign value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertVerticalAlign(System.String)">
            <summary>
            Converts the RDL TextAlign to VerticalAlign.
            </summary>
            <param name="verticalAlign">The RDL VerticalAlign value.</param>
            <returns>The VertAlign value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertWritingMode(System.String)">
            <summary>
            Converts the RDL WritingMode to Angle.
            </summary>
            <param name="writingMode">The RDL WritingMode value.</param>
            <returns>The int value of RDL WritingMode in degree.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertTextAlignToStringAlignment(System.String)">
            <summary>
            Converts the RDL TextAlign to StringAlignment.
            </summary>
            <param name="textAlign">The RDL TextAling value.</param>
            <returns>The StringAlignment value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertTextAndVerticalAlign(System.String,System.String)">
            <summary>
            Converts the RDL TextAlign and VerticalAlign to ContentAlignment.
            </summary>
            <param name="textAlign">The RDL TextAlign value.</param>
            <param name="vertAlign">The RDL VerticalAlign value.</param>
            <returns>The ContentAlignment value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertBorderStyle(System.String)">
            <summary>
            Converts the RDL BorderStyle to LineStyle.
            </summary>
            <param name="borderStyle">The RDL BorderStyle value.</param>
            <returns>The LineStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertSizing(System.String)">
            <summary>
            Converts the RDL Sizing to PictureBoxSizeMode.
            </summary>
            <param name="sizing">The RDL Sizing value.</param>
            <returns>The PictureBoxSizeMode value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertGradientType(System.String)">
            <summary>
            Converts the RDL GradientType to GradientStyle.
            </summary>
            <param name="gradientType">The RDL GradientType value.</param>
            <returns>The GradientStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertChartType(System.String)">
            <summary>
            Converts the RDL Chart.Type to SeriesChartType.
            </summary>
            <param name="chartType">The RDL Chart.Type value.</param>
            <returns>The SeriesChartType value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertChartPalette(System.String)">
            <summary>
            Converts the RDL Chart.Palette to ChartColorPalette.
            </summary>
            <param name="chartPalette">The RDL Chart.Palette value.</param>
            <returns>The RDL ChartColorPalette value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertChartLegendPosition(System.String,System.Windows.Forms.DataVisualization.Charting.Legend)">
            <summary>
            Converts the RDL Chart.Legend.Position to Legend.Docking and Legend.Alignment.
            </summary>
            <param name="chartLegendPosition">The RDL Chart.Legend.Position value.</param>
            <param name="legend">The Legend instance to convert to.</param>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertChartLegendLayout(System.String)">
            <summary>
            Converts the RDL Chart.Legend.Layout to LegendStyle.
            </summary>
            <param name="chartLegendLayout">The RDL Chart.Legend.Layout value.</param>
            <returns>The LegendStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertBorderStyleToChartDashStyle(System.String)">
            <summary>
            Converts the RDL BorderStyle to ChartDashStyle.
            </summary>
            <param name="borderStyle">The RDL BorderStyle value.</param>
            <returns>The ChartDashStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertAxisVisibleToAxisEnabled(System.String)">
            <summary>
            Converts the RDL Axis.Visible to AxisEnabled.
            </summary>
            <param name="axisVisible">The RDL Axis.Visible value.</param>
            <returns>The AxisEnabled value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertTickMarkStyle(System.String)">
            <summary>
            Converts the RDL TickMarkStyle to TickMarkStyle.
            </summary>
            <param name="tickMarkStyle">The RDL TickMarkStyle value.</param>
            <returns>The TickMarkStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.RDL.UnitsConverter.ConvertShading(System.String)">
            <summary>
            Converts the RDL Shading to LightStyle.
            </summary>
            <param name="shading">The RDL Shading value.</param>
            <returns>The LightStyle value.</returns>
        </member>
        <member name="T:FastReport.Design.ImportPlugins.ComponentsFactory">
            <summary>
            The components factory.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateReportPage(FastReport.Report)">
            <summary>
            Creates a ReportPage instance in the specified Report.
            </summary>
            <param name="report">The Report instance.</param>
            <returns>The ReportPage instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateReportTitleBand(FastReport.ReportPage)">
            <summary>
            Creates a ReportTitleBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The ReportTitleBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateReportSummaryBand(FastReport.ReportPage)">
            <summary>
            Creates a ReportSummaryBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The ReportSummaryBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreatePageHeaderBand(FastReport.ReportPage)">
            <summary>
            Creates a PageHeaderBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The PageHeaderBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreatePageFooterBand(FastReport.ReportPage)">
            <summary>
            Creates a PageFooterBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The PageFooterBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateColumnHeaderBand(FastReport.ReportPage)">
            <summary>
            Creates a ColumnHeaderBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The ColumnHeaderBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateColumnFooterBand(FastReport.ReportPage)">
            <summary>
            Creates a ColumnFooterBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The ColumnFooterBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateDataHeaderBand(FastReport.DataBand)">
            <summary>
            Creates a DataHeaderBand instance in the specified DataBand.
            </summary>
            <param name="data">The DataBand instance.</param>
            <returns>The DataHeaderBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateDataBand(FastReport.ReportPage)">
            <summary>
            Creates a DataBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The DataBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateDataFooterBand(FastReport.DataBand)">
            <summary>
            Creates a DataFooterBand instance in the specified DataBand.
            </summary>
            <param name="data">The DataBand instance.</param>
            <returns>The DataFooterBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateGroupHeaderBand(FastReport.ReportPage)">
            <summary>
            Creates a GroupHeaderBand instance in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The GroupHeaderBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateGroupFooterBand(FastReport.ReportPage)">
            <summary>
            Creates a GroupFooterBand instance in the cpecified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The GroupFooterBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateChildBand(FastReport.BandBase)">
            <summary>
            Creates a ChildBand instance in the specified BandBase.
            </summary>
            <param name="parent">The BandBase instance.</param>
            <returns>The ChildBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateOverlayBand(FastReport.ReportPage)">
            <summary>
            Creates an OverlayBand in the specified ReportPage.
            </summary>
            <param name="page">The ReportPage instance.</param>
            <returns>The OverlayBand instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateTextObject(System.String,FastReport.Base)">
            <summary>
            Creates a TextObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the TextObject instance.</param>
            <param name="parent">The parent of the TextObject instance.</param>
            <returns>The TextObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreatePictureObject(System.String,FastReport.Base)">
            <summary>
            Creates a PictureObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the PictureObject instance.</param>
            <param name="parent">The parent of the PictureObject instance.</param>
            <returns>The PictureObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateLineObject(System.String,FastReport.Base)">
            <summary>
            Creates a LineObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the LineObject instance.</param>
            <param name="parent">The parent of the LineObject instance.</param>
            <returns>The LineObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateShapeObject(System.String,FastReport.Base)">
            <summary>
            Creates a ShapeObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the ShapeObject instance.</param>
            <param name="parent">The parent of the ShapeObject instance.</param>
            <returns>The ShapeObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreatePolyLineObject(System.String,FastReport.Base)">
            <summary>
            Creates a PolyLineObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the PolyLineObject instance.</param>
            <param name="parent">The parent of the PolyLineObject instance.</param>
            <returns>The PolyLineObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreatePolygonObject(System.String,FastReport.Base)">
            <summary>
            Creates a PolygonObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the PolygonObject instance.</param>
            <param name="parent">The parent of the PolygonObject instance.</param>
            <returns>The PolygonObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateSubreportObject(System.String,FastReport.Base)">
            <summary>
            Creates a SubreportObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the SubreportObject instance.</param>
            <param name="parent">The parent of the SubreportObject instance.</param>
            <returns>The SubreportObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateCheckBoxObject(System.String,FastReport.Base)">
            <summary>
            Creates a CheckBoxObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the CheckBoxObject instance.</param>
            <param name="parent">The parent of the CheckBoxObject instance.</param>
            <returns>The CheckBoxObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateHtmlObject(System.String,FastReport.Base)">
            <summary>
            Creates a HtmlObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the HtmlObject instance.</param>
            <param name="parent">The parent of the HtmlObject instance.</param>
            <returns>The HtmlObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateTableObject(System.String,FastReport.Base)">
            <summary>
            Creates a TableObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the TableObject instance.</param>
            <param name="parent">The parent of the TableObject instance.</param>
            <returns>The TableObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateMatrixObject(System.String,FastReport.Base)">
            <summary>
            Creates a MatrixObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the MatrixObject instance.</param>
            <param name="parent">The parent of the MatrixObject instance.</param>
            <returns>The MatrixObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateBarcodeObject(System.String,FastReport.Base)">
            <summary>
            Creates a BarcodeObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the BarcodeObject instance.</param>
            <param name="parent">The parent of the BarcodeObject instance.</param>
            <returns>The BarcodeObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateRichObject(System.String,FastReport.Base)">
            <summary>
            Creates a RichObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the RichObject instance.</param>
            <param name="parent">The parent of the RichObject instance.</param>
            <returns>The RichObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateMSChartObject(System.String,FastReport.Base)">
            <summary>
            Creates a MSChartObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the MSChartObject instance.</param>
            <param name="parent">The parent of the MSChartObject instance.</param>
            <returns>The MSChartObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateSparklineObject(System.String,FastReport.Base)">
            <summary>
            Creates a SparklineObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the SparlineObject instance.</param>
            <param name="parent">The parent of the SparlineObject instance.</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateZipCodeObject(System.String,FastReport.Base)">
            <summary>
            Creates a ZipCodeObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the ZipCodeObject instance.</param>
            <param name="parent">The parent of the ZipCodeObject instance.</param>
            <returns>The ZipCodeObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateCellularTextObject(System.String,FastReport.Base)">
            <summary>
            Creates a CellularTextObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the CellularTextObject instance.</param>
            <param name="parent">The parent ot the CellularTextObject instance.</param>
            <returns>The CellularTextObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateMapObject(System.String,FastReport.Base)">
            <summary>
            Creates a MapObject instance with specified name and parent.
            </summary>
            <param name="name">The name of the MapObject instance.</param>
            <param name="parent">The parent of the MapObject instance.</param>
            <returns>The MapObject instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateLinearGauge(System.String,FastReport.Base)">
            <summary>
            Creates a LinearGauge instance with specified name and parent.
            </summary>
            <param name="name">The name of the LinearGauge instance.</param>
            <param name="parent">The parent of the LinearGauge instance.</param>
            <returns>The LinearGauge instance.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ComponentsFactory.CreateSimpleGauge(System.String,FastReport.Base)">
            <summary>
            Creates a SimpleGauge instance with specified name and parent.
            </summary>
            <param name="name">The name of the SimpleGauge instance.</param>
            <param name="parent">The parent of the SimpleGauge instance.</param>
            <returns>The SimpleGauge instance.</returns>
        </member>
        <member name="T:FastReport.Design.ImportPlugins.DevExpress.DevExpressImportPlugin">
            <summary>
            Represents the DevExpess import plubin.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.DevExpressImportPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ImportPlugins.DevExpress.DevExpressImportPlugin"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.DevExpressImportPlugin.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ImportPlugins.DevExpress.DevExpressImportPlugin"/> class with a specified designer.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.DevExpressImportPlugin.GetFilter">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter">
            <summary>
            The DevExpress units converter.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter.SizeFToPixels(System.String)">
            <summary>
            Converts SizeF to pixels.
            </summary>
            <param name="str">SizeF value as string.</param>
            <returns>The value in pixels.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter.ConvertColor(System.String)">
            <summary>
            Converts DevExpress Color.
            </summary>
            <param name="str">The DevExpress Color value as string.</param>
            <returns>The Color value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter.ConvertBackColor(System.String)">
            <summary>
            Converts DevExpress BackColor.
            </summary>
            <param name="str">The DevExpress BackColor value as string.</param>
            <returns>The Color value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter.ConvertBorderDashStyle(System.String)">
            <summary>
            Converts the DevExpress BorderDashStyle to LineStyle.
            </summary>
            <param name="borderDashStyle">The DevExpress BorderDashStyle value.</param>
            <returns>The LineStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter.ConvertLineStyle(System.String)">
            <summary>
            Converts the DevExpress LineStyle to LineStyle.
            </summary>
            <param name="lineStyle">The DevExpress LineStyle value.</param>
            <returns>The LineStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter.ConvertTextAlignmentToHorzAlign(System.String)">
            <summary>
            Converts the DevExpress TextAlignment to HorzAlignment.
            </summary>
            <param name="textAlignment">The DevExpress TextAlignment value.</param>
            <returns>The HorzAlign value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter.ConvertTextAlignmentToVertAlign(System.String)">
            <summary>
            Converts the DevExpress TextAlignment to VertAlignment.
            </summary>
            <param name="textAlignment">The DevExpress TextAlignment value.</param>
            <returns>The VertAlign value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter.ConvertImageSizeMode(System.String)">
            <summary>
            Converts the DevExpress ImageSizeMode to PictureBoxSizeMode.
            </summary>
            <param name="sizeMode">The ImageSizeMode value as string.</param>
            <returns>The PictureBoxSizeMode value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter.ConvertShape(System.String)">
            <summary>
            Converts the DevExpress Shape to ShapeKind.
            </summary>
            <param name="shape">The DevExpress Shape value as string.</param>
            <returns>The ShapeKind value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.DevExpress.UnitsConverter.ConvertBarcodeSymbology(System.String,FastReport.Barcode.BarcodeObject)">
            <summary>
            Converts the DevExpress Barcode.Symbology to Barcode.Barcode.
            </summary>
            <param name="symbology">The DevExpress Barcode.Symbology value as string.</param>
            <param name="barcode">The BarcodeObject instance.</param>
        </member>
        <member name="T:FastReport.Design.ImportPlugins.ListAndLabel.ListAndLabelImportPlugin">
            <summary>
            Represents the List and Label import plugin.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.ListAndLabelImportPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ImportPlugins.ListAndLabel.ListAndLabelImportPlugin"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.ListAndLabelImportPlugin.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ImportPlugins.ListAndLabel.ListAndLabelImportPlugin"/> class with a specified designer.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.ListAndLabelImportPlugin.GetFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.ListAndLabelImportPlugin.LoadReport(FastReport.Report,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.ImportPlugins.ListAndLabel.UnitsConverter">
            <summary>
            The List and Label units converter.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.UnitsConverter.LLUnitsToMillimeters(System.String)">
            <summary>
            Converts List and Label units to millimeters.
            </summary>
            <param name="str">The List and Label unit as string.</param>
            <returns>The value in millimeters.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.UnitsConverter.LLUnitsToPixels(System.String)">
            <summary>
            Converts List and Label units to pixels.
            </summary>
            <param name="str">The List and Label unit as string.</param>
            <returns>The value in pixels.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.UnitsConverter.ConvertPaperOrientation(System.String)">
            <summary>
            Converts List and Label paper orientation.
            </summary>
            <param name="str">The List and Label paper orientation value as string.</param>
            <returns>Returns <b>true</b> if orientation is landscape.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.UnitsConverter.ConvertBool(System.String)">
            <summary>
            Converts List and Label bool.
            </summary>
            <param name="str">The List and Label bool value as string.</param>
            <returns>A bool value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.UnitsConverter.ConvertTextAlign(System.String)">
            <summary>
            Converts List and Label text Align.
            </summary>
            <param name="str">The List and Label text Align value as string.</param>
            <returns>A HorzAlign value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.UnitsConverter.ConvertLineType(System.String)">
            <summary>
            Convert List and Label LineType to LineStyle.
            </summary>
            <param name="str">The List and Label LineType value as string.</param>
            <returns>A LineStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugins.ListAndLabel.UnitsConverter.ConvertRounding(System.String)">
            <summary>
            Converts List and Label rounding to float.
            </summary>
            <param name="str">The List and Label rounding value as string.</param>
            <returns>A float value.</returns>
        </member>
        <member name="T:FastReport.Design.DesignerCommand">
            <summary>
            The base class for all designer commands.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerCommand.Enabled">
            <summary>
            Gets a value indicating that the command is enabled.
            </summary>
            <remarks>
            If you use own controls that invoke designer commands, use this property to refresh
            the <b>Enabled</b> state of a control that is bound to this command.
            </remarks>
        </member>
        <member name="E:FastReport.Design.DesignerCommand.CustomAction">
             <summary>
             Defines a custom action for this command.
             </summary>
             <remarks>
             Using custom action, you can override the standard behavior of this designer's command.
             </remarks>
             <example>
             This example demonstrates how to override the "New..." command behavior.
             <code>
             // add an event handler that will be fired when the designer is run
             Config.DesignerSettings.DesignerLoaded += new EventHandler(DesignerSettings_DesignerLoaded);
            
             void DesignerSettings_DesignerLoaded(object sender, EventArgs e)
             {
               // override "New..." command behavior
               (sender as Designer).cmdNew.CustomAction += new EventHandler(cmdNew_CustomAction);
             }
            
             void cmdNew_CustomAction(object sender, EventArgs e)
             {
               // show the "Label" wizard instead of standard "Add New Item" dialog
               Designer designer = sender as Designer;
               LabelWizard wizard = new LabelWizard();
               wizard.Run(designer);
             }
             </code>
             </example>
        </member>
        <member name="M:FastReport.Design.DesignerCommand.GetEnabled">
            <summary>
            Gets a value for the <b>Enabled</b> property.
            </summary>
            <returns><b>true</b> if command is enabled.</returns>
        </member>
        <member name="M:FastReport.Design.DesignerCommand.Invoke">
            <summary>
            Invokes the command.
            </summary>
        </member>
        <member name="M:FastReport.Design.DesignerCommand.Invoke(System.Object,System.EventArgs)">
            <summary>
            Invokes the command with specified sender and event args.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event args.</param>
            <remarks>
            This method is compatible with standard <see cref="T:System.EventHandler"/> and can be passed
            to the event handler constructor directly.
            </remarks>
        </member>
        <member name="T:FastReport.Design.NewCommand">
            <summary>
            Represents the "File|New" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.NewCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.NewCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.NewPageCommand">
            <summary>
            Represents the "New Page" toolbar command.
            </summary>
        </member>
        <member name="M:FastReport.Design.NewPageCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.NewPageCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.NewDialogCommand">
            <summary>
            Represents the "New Dialog" toolbar command.
            </summary>
        </member>
        <member name="M:FastReport.Design.NewDialogCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.NewDialogCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.OpenCommand">
            <summary>
            Represents the "File|Open..." command. Also can be used for loading a file
            from the recent files list.
            </summary>
        </member>
        <member name="M:FastReport.Design.OpenCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.OpenCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.OpenCommand.LoadFile(System.String)">
            <summary>
            Loads a specified report file.
            </summary>
            <param name="fileName">File to load.</param>
        </member>
        <member name="T:FastReport.Design.SaveCommand">
            <summary>
            Represents the "File|Save" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.SaveCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.SaveCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.SaveAsCommand">
            <summary>
            Represents the "File|Save As..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.SaveAsCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.SaveAsCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.SaveAllCommand">
            <summary>
            Represents the "File|Save All" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.SaveAllCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.SaveAllCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.CloseCommand">
            <summary>
            Represents the "File|Close" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.CloseCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.CloseCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.CloseAllCommand">
            <summary>
            Represents the "Window|Close All" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.CloseAllCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.PreviewCommand">
            <summary>
            Represents the "File|Preview..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.PreviewCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.PreviewCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.PageSettingsCommand">
            <summary>
            Represents the "File|Page Setup..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.PageSettingsCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.PageSettingsCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.ReportSettingsCommand">
            <summary>
            Represents the "Report|Options..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.ReportSettingsCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ReportSettingsCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.PrinterSettingsCommand">
            <summary>
            Represents the "File|Printer Setup..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.PrinterSettingsCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.PrinterSettingsCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.UndoCommand">
            <summary>
            Represents the "Edit|Undo" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.UndoCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.UndoCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.UndoCommand.Undo(System.Int32)">
            <summary>
            Undo several actions.
            </summary>
            <param name="actionsCount">Number of actions to undo.</param>
        </member>
        <member name="T:FastReport.Design.RedoCommand">
            <summary>
            Represents the "Edit|Redo" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.RedoCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.RedoCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.RedoCommand.Redo(System.Int32)">
            <summary>
            Redo several actions.
            </summary>
            <param name="actionsCount">Number of actions to redo.</param>
        </member>
        <member name="T:FastReport.Design.CutCommand">
            <summary>
            Represents the "Edit|Cut" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.CutCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.CutCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.CopyCommand">
            <summary>
            Represents the "Edit|Copy" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.CopyCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.CopyPageCommand">
            <summary>
            Represents the "Edit|Copy Page" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.CopyPageCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.CopyPageCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.PasteCommand">
            <summary>
            Represents the "Edit|Paste" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.PasteCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.PasteCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.FormatPainterCommand">
            <summary>
            Represents the "Format Painter" toolbar command.
            </summary>
        </member>
        <member name="M:FastReport.Design.FormatPainterCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.FormatPainterCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.DeleteCommand">
            <summary>
            Represents the "Edit|Delete" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.DeleteCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.DeleteCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.DeletePageCommand">
            <summary>
            Represents the "Edit|Delete Page" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.DeletePageCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.DeletePageCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.SelectAllCommand">
            <summary>
            Represents the "Edit|Select All" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.SelectAllCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.SelectAllCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.GroupCommand">
            <summary>
            Represents the "Edit|Group" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.GroupCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.GroupCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.UngroupCommand">
            <summary>
            Represents the "Edit|Ungroup" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.UngroupCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.EditCommand">
            <summary>
            Represents the "Edit" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.EditCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.EditCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.FindCommand">
            <summary>
            Represents the "Edit|Find..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.FindCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.FindCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.ReplaceCommand">
            <summary>
            Represents the "Edit|Replace..." command.
            </summary>
        </member>
        <member name="T:FastReport.Design.BringToFrontCommand">
            <summary>
            Represents the "Bring To Front" context menu command.
            </summary>
        </member>
        <member name="M:FastReport.Design.BringToFrontCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.BringToFrontCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.SendToBackCommand">
            <summary>
            Represents the "Send To Back" context menu command.
            </summary>
        </member>
        <member name="M:FastReport.Design.SendToBackCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.InsertCommand">
            <summary>
            Represents the "Insert" command.
            </summary>
            <remarks>
            This command has no default action associated with it. Check the <b>Enabled</b> property
            to see if the insert operation is enabled.
            </remarks>
        </member>
        <member name="M:FastReport.Design.InsertCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.InsertBandCommand">
            <summary>
            Represents the "Insert Band" command.
            </summary>
            <remarks>
            This command has no default action associated with it. Check the <b>Enabled</b> property
            to see if the insert operation is enabled.
            </remarks>
        </member>
        <member name="M:FastReport.Design.InsertBandCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.AddDataCommand">
            <summary>
            Represents the "Data|Add Data Source..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.AddDataCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.AddDataCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.SortDataSourcesCommand">
            <summary>
            Represents the "Data|Sort Data Sources" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.SortDataSourcesCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.SortDataSourcesCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.ChooseDataCommand">
            <summary>
            Represents the "Data|Choose Report Data..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.ChooseDataCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ChooseDataCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.RecentFilesCommand">
            <summary>
            Represents the "Recent Files" command.
            </summary>
            <remarks>
            This command has no default action associated with it. Check the <b>Enabled</b> property
            to see if the recent files list is enabled.
            </remarks>
        </member>
        <member name="M:FastReport.Design.RecentFilesCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.SelectLanguageCommand">
            <summary>
            Represents the "File|Select Language..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.SelectLanguageCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.OptionsCommand">
            <summary>
            Represents the "View|Options..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.OptionsCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.ViewStartPageCommand">
            <summary>
            Represents the "View|Start Page" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.ViewStartPageCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ViewStartPageCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.PolygonSelectModeCommand">
            <summary>
            Represents the "Select polygon move" command.
            </summary>
        </member>
        <member name="M:FastReport.Design.PolygonSelectModeCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.PolygonSelectModeCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.ReportStylesCommand">
            <summary>
            Represents the "Report|Styles..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.ReportStylesCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ReportStylesCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.HelpContentsCommand">
            <summary>
            Represents the "Help|Help Contents..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.HelpContentsCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.HelpContentsCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.AboutCommand">
            <summary>
            Represents the "Help|About..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.AboutCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.WelcomeCommand">
            <summary>
            Represents the "Show welcome window..." command.
            </summary>
        </member>
        <member name="M:FastReport.Design.WelcomeCommand.GetEnabled">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.WelcomeCommand.Invoke">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.Designer">
            <summary>
            Represents the report's designer control.
            </summary>
            <remarks>
            Usually you don't need to create an instance of this class. The designer can be called
            using the <see cref="M:FastReport.Report.Design"/> method of 
            the <see cref="T:FastReport.Report"/> instance.
            <para/>This control represents pure designer surface + Objects toolbar. If you need
            standard menu, statusbar, toolbars and tool windows, use the 
            <see cref="T:FastReport.Design.StandardDesigner.DesignerControl"/> control instead. Also you may 
            decide to use a designer's form (<see cref="T:FastReport.Design.StandardDesigner.DesignerForm"/>)
            instead of a control.
            <para/>To run a designer, you need to attach a Report instance to it. This can be done via
            the <see cref="P:FastReport.Design.Designer.Report"/> property.
            <para/>To call the designer in MDI (Multi-Document Interface) mode, use the 
            <see cref="P:FastReport.Design.Designer.MdiMode"/> property.
            <para/>To set up some global properties, use the <see cref="T:FastReport.Utils.Config"/> static class
            or <see cref="T:FastReport.EnvironmentSettings"/> component that you can use in the Visual Studio IDE.
            </remarks>
        </member>
        <member name="E:FastReport.Design.Designer.UIStateChanged">
            <summary>
            Occurs when designer's UI state changed.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.Report">
            <summary>
            Gets or sets the edited report.
            </summary>
            <remarks>
            To initialize the designer, you need to pass a Report instance to this property.
            This will create the designer's surface associated with the report.
            <code>
            Designer designer = new Designer();
            designer.Parent = form1;
            designer.Report = report1;
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.Design.Designer.ActiveReport">
            <summary>
            Gets active report object. 
            </summary>
            <remarks>
            May be <b>null</b> if Start Page selected, or no reports opened.
            </remarks>
        </member>
        <member name="P:FastReport.Design.Designer.Plugins">
            <summary>
            Gets a collection of global plugins such as menu, properties window, etc. 
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.Objects">
            <summary>
            Gets a collection of objects on the active page of the active report.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.SelectedObjects">
            <summary>
            Gets a collection of selected objects on the active page of the active report.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.SelectedComponents">
            <summary>
            Gets a collection of selected objects of the <b>ComponentBase</b> type.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.SelectedReportComponents">
            <summary>
            Gets a collection of selected objects of the <b>ReportComponentBase</b> type.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.SelectedTextObjects">
            <summary>
            Gets a collection of selected objects of the <b>TextObject</b> type.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.Modified">
            <summary>
            Gets or sets a value indicating that the report was modified.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.AskSave">
            <summary>
            Gets or sets a value that determines whether to ask user to save changes when closing the designer.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.Restrictions">
            <summary>
            Gets the designer restrictions.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.MdiMode">
            <summary>
            Gets or sets a value indicating that designer is run in MDI mode.
            </summary>
            <remarks>
            <para/>To call the designer in MDI (Multi-Document Interface) mode, use the following code:
            <code>
            DesignerControl designer = new DesignerControl();
            designer.MdiMode = true;
            designer.ShowDialog();
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.Design.Designer.UIStyle">
            <summary>
            Gets or sets the visual style.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.IsPreviewPageDesigner">
            <summary>
            Gets a value indicating that designer is used to edit a preview page.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdNew">
            <summary>
            The "File|New" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdNewPage">
            <summary>
            The "New Page" toolbar command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdNewDialog">
            <summary>
            The "New Dialog" toolbar command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdOpen">
            <summary>
            The "File|Open..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdSave">
            <summary>
            The "File|Save" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdSaveAs">
            <summary>
            The "File|Save As..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdSaveAll">
            <summary>
            The "File|Save All" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdClose">
            <summary>
            The "File|Close" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdCloseAll">
            <summary>
            The "Window|Close All" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdPreview">
            <summary>
            The "File|Preview..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdPrinterSetup">
            <summary>
            The "File|Printer Setup..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdPageSetup">
            <summary>
            The "File|Page Setup..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdAddData">
            <summary>
            The "Data|Add New Data Source..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdSortDataSources">
            <summary>
            The "Data|Sort Data Sources" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdChooseData">
            <summary>
            The "Data|Choose Report Data..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdUndo">
            <summary>
            The "Edit|Undo" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdRedo">
            <summary>
            The "Edit|Redo" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdCut">
            <summary>
            The "Edit|Cut" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdCopy">
            <summary>
            The "Edit|Copy" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdPaste">
            <summary>
            The "Edit|Paste" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdFormatPainter">
            <summary>
            The "Format Painter" toolbar command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdDelete">
            <summary>
            The "Edit|Delete" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdCopyPage">
            <summary>
            The "Edit|Copy Page" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdDeletePage">
            <summary>
            The "Edit|Delete Page" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdSelectAll">
            <summary>
            The "Edit|Select All" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdGroup">
            <summary>
            The "Edit|Group" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdUngroup">
            <summary>
            The "Edit|Ungroup" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdEdit">
            <summary>
            The "Edit" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdFind">
            <summary>
            The "Edit|Find..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.CmdPolySelectMove">
            <summary>
            The "Polygon move command" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.CmdPolySelectPointer">
            <summary>
            The "Polygon point move" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.CmdPolySelectAddPoint">
            <summary>
            The "Polygon add new point" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.CmdPolySelectBezier">
            <summary>
            The "Polygon berier" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.CmdPolySelectRemovePoint">
            <summary>
            The "Polygon remove point" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdReplace">
            <summary>
            The "Edit|Replace..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdBringToFront">
            <summary>
            The "Bring To Front" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdSendToBack">
            <summary>
            The "Send To Back" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdInsert">
            <summary>
            The "Insert" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdInsertBand">
            <summary>
            The "Insert Band" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdRecentFiles">
            <summary>
            The "Recent Files" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdSelectLanguage">
            <summary>
            The "File|Select Language..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdViewStartPage">
            <summary>
            The "View|Start Page" command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdReportSettings">
            <summary>
            The "Report|Options..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdOptions">
            <summary>
            The "View|Options..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdReportStyles">
            <summary>
            The "Report|Styles..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdHelpContents">
            <summary>
            The "Help|Help Contents..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdAbout">
            <summary>
            The "Help|About..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.cmdWelcome">
            <summary>
            The "Show welcome window..." command.
            </summary>
        </member>
        <member name="P:FastReport.Design.Designer.LayoutState">
            <summary>
            Gets or sets the layout state of the designer.
            </summary>
            <remarks>
            This property is used to store layout in Visual Studio design time. You may also use
            it to save and restore the designer's layout in your code. However, consider using the
            <see cref="M:FastReport.Design.Designer.SaveConfig"/> and <see cref="M:FastReport.Design.Designer.RestoreConfig"/> methods that use FastReport 
            configuration file.
            </remarks>
        </member>
        <member name="E:FastReport.Design.Designer.LayoutChangedEvent">
            <summary>
            Fires when the layout is changed.
            </summary>
            <remarks>
            This event is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Design.Designer.InitPlugins">
            <summary>
            Initializes designer plugins such as toolbars and toolwindows.
            </summary>
        </member>
        <member name="M:FastReport.Design.Designer.OnParentChanged(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.Designer.CancelPaste">
            <summary>
            Cancels paste mode.
            </summary>
        </member>
        <member name="M:FastReport.Design.Designer.StartAutoSave">
            <summary>
            AutoSave system initialization.
            </summary>
        </member>
        <member name="M:FastReport.Design.Designer.StopAutoSave">
            <summary>
            Stops the AutoSave system.
            </summary>
        </member>
        <member name="M:FastReport.Design.Designer.SetModified">
            <summary>
            Call this method if you change something in the report. 
            </summary>
            <remarks>
            This method adds the current report state to the undo buffer and updates all plugins.
            </remarks>
        </member>
        <member name="M:FastReport.Design.Designer.SetModified(System.Object,System.String)">
            <summary>
            Call this method if you change something in the report. 
            </summary>
            <param name="sender">The object that was modified.</param>
            <param name="action">The undo action name.</param>
            <remarks>
            This method adds the current report state to the undo buffer and updates all plugins.
            </remarks>
        </member>
        <member name="M:FastReport.Design.Designer.SetModified(System.Object,System.String,System.String)">
            <summary>
            Call this method if you change something in the report.
            </summary>
            <param name="sender">The object that was modified.</param>
            <param name="action">The undo action name.</param>
            <param name="objName">The name of modified object.</param>
        </member>
        <member name="M:FastReport.Design.Designer.SelectionChanged(System.Object)">
            <summary>
            Call this method to tell the designer that current selection is changed.
            </summary>
            <param name="sender">The plugin that changes the selection (may be <b>null</b>).</param>
        </member>
        <member name="M:FastReport.Design.Designer.Lock">
            <summary>
            Locks all plugins. 
            </summary>
            <remarks>
            This method is usually called when we destroy the report to prevent unexpected
            errors - such as trying to draw destroyed objects.
            </remarks>
        </member>
        <member name="M:FastReport.Design.Designer.Unlock">
            <summary>
            Unlocks all plugins. 
            </summary>
            <remarks>
            Call this method after the <b>Lock</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Design.Designer.UpdatePlugins(System.Object)">
            <summary>
            Call this method to refresh all plugins' content.
            </summary>
            <param name="sender">The plugin that we don't need to refresh.</param>
        </member>
        <member name="M:FastReport.Design.Designer.SaveConfig">
            <summary>
            Saves config to a FastReport configuration file.
            </summary>
        </member>
        <member name="M:FastReport.Design.Designer.RestoreConfig">
            <summary>
            Restores config from a FastReport configuration file.
            </summary>
            <remarks>
            Call this method to restore the designer's layout. You need to do this after the
            designer's control is placed on a form.
            </remarks>
        </member>
        <member name="M:FastReport.Design.Designer.RefreshLayout">
            <summary>
            Refresh the designer's toolbars and toolwindows layout.
            </summary>
            <remarks>
            Call this method if you use 
            <see cref="T:FastReport.Design.StandardDesigner.DesignerControl">DesignerControl</see>. To restore
            the layout that you've created in VS design time, you need to call this method in the form's
            <b>Load</b> event handler. If you don't do this, tool windows like Properties, Data, Report Tree
            will not be available.
            </remarks>
        </member>
        <member name="M:FastReport.Design.Designer.BeginInit">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.Designer.EndInit">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.Designer.InitReport">
            <summary>
            Initializes the workspace after the new report is loaded.
            </summary>
        </member>
        <member name="M:FastReport.Design.Designer.CreateEmptyReport">
            <summary>
            Tries to create a new empty report.
            </summary>
            <returns><b>true</b> if report was created successfully; <b>false</b> if user cancels the action.</returns>
        </member>
        <member name="M:FastReport.Design.Designer.ShowMessage(System.String)">
            <summary>
            Displays a message in the "Messages" window.
            </summary>
            <param name="msg">Message text.</param>
        </member>
        <member name="M:FastReport.Design.Designer.ClearMessages">
            <summary>
            Clears the "Messages" window.
            </summary>
        </member>
        <member name="M:FastReport.Design.Designer.ShowStatus(System.String,System.String,System.String)">
            <summary>
            Shows the selected object's information in the designer's statusbar.
            </summary>
            <param name="location">Object's location.</param>
            <param name="size">Object's size.</param>
            <param name="text">Textual information about the selected object.</param>
        </member>
        <member name="M:FastReport.Design.Designer.CloseAll">
            <summary>
            Close all opened reports, ask to save changes.
            </summary>
            <returns><b>true</b> if all tabs closed succesfully.</returns>
            <remarks>
            Use this method to close all opened documents and save changes when you closing the main form
            that contains the designer control. To do this, create an event handler for your form's FormClosing 
            event and call this method inside the handler. If it returns false, set e.Cancel to <b>true</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Design.Designer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.Designer"/> class with default settings.
            </summary>
        </member>
        <member name="F:FastReport.Design.Designer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Design.Designer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Design.ExportPlugin">
            <summary>
            Base class for all export plugins.
            </summary>
        </member>
        <member name="P:FastReport.Design.ExportPlugin.Name">
            <summary>
            Gets or sets the name of plugin.
            </summary>
        </member>
        <member name="P:FastReport.Design.ExportPlugin.Filter">
            <summary>
            Gets or sets the filter string used in the "Save File" dialog.
            </summary>
        </member>
        <member name="P:FastReport.Design.ExportPlugin.Designer">
            <summary>
            Gets or sets reference to the designer.
            </summary>
        </member>
        <member name="P:FastReport.Design.ExportPlugin.Report">
            <summary>
            Gets or sets reference to the report.
            </summary>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ExportPlugin"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ExportPlugin"/> class with a specified designer.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="P:FastReport.Design.ExportPlugin.PluginName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.Lock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.Unlock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.GetOptionsPage">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.UpdateUIStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.GetFilter">
            <summary>
            Returns a file filter for a save dialog.
            </summary>
            <returns>String that contains a file filter, for example: "Bitmap image (*.bmp)|*.bmp"</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugin.SaveReport(FastReport.Report,System.String)">
            <summary>
            Saves the specified report into specified file.
            </summary>
            <param name="report">Report object.</param>
            <param name="filename">File name.</param>
        </member>
        <member name="T:FastReport.Design.ExportPlugins.FR3.FR3ExportPlugin">
            <summary>
            Represents the FR3 export plugin.
            </summary>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.FR3ExportPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ExportPlugins.FR3.FR3ExportPlugin"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.FR3ExportPlugin.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ExportPlugins.FR3.FR3ExportPlugin"/> class with a specified designer.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.FR3ExportPlugin.GetFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.FR3ExportPlugin.SaveReport(FastReport.Report,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.ExportPlugins.FR3.UnitsConverter">
            <summary>
            The FR3 units converter.
            </summary>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ColorToTColor(System.Drawing.Color)">
            <summary>
            Converts Color to TColor.
            </summary>
            <param name="color">Color value.</param>
            <returns>String that contains TColor value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertFontStyle(System.Drawing.FontStyle)">
            <summary>
            Converts font style.
            </summary>
            <param name="fontStyle">FontStyle value.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertHorzAlign(FastReport.HorzAlign)">
            <summary>
            Converts horizontal alignment of text.
            </summary>
            <param name="ha">HorzAlign value.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertVertAlign(FastReport.VertAlign)">
            <summary>
            Converts vertical alignment of text.
            </summary>
            <param name="va">VertAlign value.</param>
            <returns>String that contains coverted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertFontSize(System.Single)">
            <summary>
            Converts font size to delphi font height.
            </summary>
            <param name="size">Font size value.</param>
            <returns>String that contains font height value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertLineStyle(FastReport.LineStyle)">
            <summary>
            Convert line style to frame style.
            </summary>
            <param name="style">Line style value.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertBarcodeType(FastReport.Barcode.BarcodeBase)">
            <summary>
            Converts barcode type.
            </summary>
            <param name="barcode">BarcodeBase instance.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertBorderLines(FastReport.BorderLines)">
            <summary>
            Converts BorderLines value.
            </summary>
            <param name="lines">BorderLines instance.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertCheckedSymbol(FastReport.CheckedSymbol)">
            <summary>
            Converts CheckedSymbol value.
            </summary>
            <param name="symbol">CheckeSymbol instance.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertScaleDock(FastReport.Map.ScaleDock)">
            <summary>
            Converts ScaleDock value.
            </summary>
            <param name="dock">ScaleDock instance.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertDashStyle(System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Converts DashStyle value.
            </summary>
            <param name="ds">DashStyle instance.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertTotalType(FastReport.Data.TotalType)">
            <summary>
            Converts TotalType value.
            </summary>
            <param name="tt">TotalType instance.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertMapLabelKind(FastReport.Map.MapLabelKind)">
            <summary>
            Converts MapLabelKind value.
            </summary>
            <param name="kind">MapLabelKind instance.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertMapPalette(FastReport.Map.MapPalette)">
            <summary>
            Converts MapPalette value.
            </summary>
            <param name="palette">MapPalette instance.</param>
            <returns>String that contains converted value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.FR3.UnitsConverter.ConvertShapeKind(FastReport.ShapeKind)">
            <summary>
            Converts ShapeKind value.
            </summary>
            <param name="sk">ShapeKind instance.</param>
            <returns>String that contains coverted value.</returns>
        </member>
        <member name="T:FastReport.Design.ExportPlugins.RDL.RDLExportPlugin">
            <summary>
            Represents the RDL export plugin.
            </summary>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.RDLExportPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ExportPlugins.RDL.RDLExportPlugin"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.RDLExportPlugin.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ExportPlugins.RDL.RDLExportPlugin"/> class with a specified designer.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.RDLExportPlugin.GetFilter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.RDLExportPlugin.SaveReport(FastReport.Report,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Design.ExportPlugins.RDL.UnitsConverter">
            <summary>
            The FR units converter.
            </summary>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.PixelsToMillimeters(System.Single)">
            <summary>
            Converts the float size in pixels to string value in millimeters.
            </summary>
            <param name="pixels">The float value in pixels.</param>
            <returns>The string value in millimeters.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.MillimetersToString(System.Single)">
            <summary>
            Converts the float size in millimeters to string value in millimeters.
            </summary>
            <param name="millimeters">The float value in millimeters.</param>
            <returns>The string value in millimeters.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertBool(System.Boolean)">
            <summary>
            Converts the bool value to string.
            </summary>
            <param name="value">The bool value.</param>
            <returns>The string value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertPixels(System.Int32)">
            <summary>
            Converts the int size in pixels to string value in pt.
            </summary>
            <param name="pixels">The int value in pixels.</param>
            <returns>The string value in pt.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertColor(System.Drawing.Color)">
            <summary>
            Converts the Color value to string.
            </summary>
            <param name="color">The Color value.</param>
            <returns>The string representation of Color value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertLineStyle(FastReport.LineStyle)">
            <summary>
            Converts the LineStyle value to RDL BorderStyle value.
            </summary>
            <param name="ls">The LineStyle value.</param>
            <returns>The string with RDL BorderStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertGradientStyle(System.Windows.Forms.DataVisualization.Charting.GradientStyle)">
            <summary>
            Converts the GradientStyle value to RDL GradientType value.
            </summary>
            <param name="gs">The GradientStyle value.</param>
            <returns>The string with RDL GradientType value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertFontStyle(System.Drawing.FontStyle)">
            <summary>
            Converts the FontStyle value to RDL FontStyle value.
            </summary>
            <param name="fs">The FontStyle value.</param>
            <returns>The string with RDL FontStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertFontFamily(System.Drawing.FontFamily)">
            <summary>
            Converts the FontFamily value to RDL FontFamily value.
            </summary>
            <param name="ff">The FontFamily value.</param>
            <returns>The string with RDL FontFamily value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertHorzAlign(FastReport.HorzAlign)">
            <summary>
            Converts the HorzAlign value to RDL TextAlign value.
            </summary>
            <param name="ha">The HorzAlign value.</param>
            <returns>The string with RDL TextAling value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertVertAlign(FastReport.VertAlign)">
            <summary>
            Converts the VertAling value to RDL VerticalAling value.
            </summary>
            <param name="va">The VertAling value.</param>
            <returns>The string with RDL VerticalAlign value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertAngleToWritingMode(System.Int32)">
            <summary>
            Converts the Angle value to RDL WritingMode value.
            </summary>
            <param name="angle">The Angle value.</param>
            <returns>The string with RDL WritingMode value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertFontSize(System.Single)">
            <summary>
            Converts the FontSize value to RDL FontSize value.
            </summary>
            <param name="fs">The FontSize value.</param>
            <returns>The string with RDL FontSize value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertSizeMode(System.Windows.Forms.PictureBoxSizeMode)">
            <summary>
            Converts the PictureBoxSizeMode value to RDL Sizing value.
            </summary>
            <param name="sm">The PictureBoxSizeMode value.</param>
            <returns>The string with RDL Sizing value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertChartType(System.Windows.Forms.DataVisualization.Charting.SeriesChartType)">
            <summary>
            Converts the SeriesChartType value to RDL Chart.Type value.
            </summary>
            <param name="type">The SeriesChartType value.</param>
            <returns>The string with RDL Chart.Type value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertChartPalette(System.Windows.Forms.DataVisualization.Charting.ChartColorPalette)">
            <summary>
            Converts the ChartColorPalette value to RDL Chart.Palette value.
            </summary>
            <param name="palette">The ChartColorPalette value.</param>
            <returns>The string with RDL Chart.Palette value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertLegendDockingAndAlignment(System.Windows.Forms.DataVisualization.Charting.Docking,System.Drawing.StringAlignment)">
            <summary>
            Converts the Legend.Docking and Legend.Alignment values to RDL Chart.Legend.Position value.
            </summary>
            <param name="docking">The Legend.Docking value.</param>
            <param name="alignment">The Legend.Alignment value.</param>
            <returns>The string with RDL Chart.Legend.Position value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertLegendStyle(System.Windows.Forms.DataVisualization.Charting.LegendStyle)">
            <summary>
            Converts the LegendStyle value to Chart.Legend.Layout value.
            </summary>
            <param name="ls">The LegendStyle value.</param>
            <returns>The string with RDL Chart.Legend.Layout value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertLightStyle(System.Windows.Forms.DataVisualization.Charting.LightStyle)">
            <summary>
            Converts the LightStyle value to RDL Shading value.
            </summary>
            <param name="ls">The LightStyle value.</param>
            <returns>The string with RDL Shading value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertChartDashStyle(System.Windows.Forms.DataVisualization.Charting.ChartDashStyle)">
            <summary>
            Converts the ChartDashStyle value to RDL BorderStyle value.
            </summary>
            <param name="cds">The ChartDashStyle value.</param>
            <returns>The string with RDL ChartDahsStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ContentAlignmentToTextAlign(System.Drawing.ContentAlignment)">
            <summary>
            Converts the ContentAlignment value to RDL TextAlign value.
            </summary>
            <param name="ca">The ContentAlignment value.</param>
            <returns>The string with RDL TextAlign value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ContentAlignmentToVerticalAlign(System.Drawing.ContentAlignment)">
            <summary>
            Converts the ContentAlignment value to RDL VerticalAlign value.
            </summary>
            <param name="ca">The ContentAlignment value.</param>
            <returns>The string with RDL VerticalAlign value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertAxisEnabled(System.Windows.Forms.DataVisualization.Charting.AxisEnabled)">
            <summary>
            Converts the AxisEnabled value to RDL Axis.Visible value.
            </summary>
            <param name="ae">The AxisEnabled value.</param>
            <returns>The string with RDL Axis.Visible value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertTickMarkStyle(System.Windows.Forms.DataVisualization.Charting.TickMarkStyle)">
            <summary>
            Converts the TickMarkStyle value to RDL TickMarkStyle value.
            </summary>
            <param name="style">The TickMarkStyle value.</param>
            <returns>The string with RDL TickMarkStyle value.</returns>
        </member>
        <member name="M:FastReport.Design.ExportPlugins.RDL.UnitsConverter.ConvertStringAlignment(System.Drawing.StringAlignment)">
            <summary>
            Converts the StringAlignment value to RDL TextAlign value.
            </summary>
            <param name="sa">The StringAlignment value.</param>
            <returns>The string with RDL TextAlign value.</returns>
        </member>
        <member name="T:FastReport.Design.StandardDesigner.DesignerControl">
            <summary>
            Represents the standard report designer.
            </summary>
            <remarks>
            This control extends the <see cref="T:FastReport.Design.Designer"/> control with 
            standard menu, status bar, and toolbars.
            <para/>To choose toolbars and tool windows in design-time, click the "View" menu
            in this control and select what you want to see. Toolbars can be reordered using the mouse.
            <para/>To restore the designer layout at runtime, you need to call the 
            <see cref="M:FastReport.Design.Designer.RefreshLayout">RefreshLayout</see> method in your
            form's <b>Load</b> event handler. 
            </remarks>
        </member>
        <member name="P:FastReport.Design.StandardDesigner.DesignerControl.MainMenu">
            <summary>
            Gets the main menu.
            </summary>
        </member>
        <member name="P:FastReport.Design.StandardDesigner.DesignerControl.ShowMainMenu">
            <summary>
            Gets or sets a value indicating whether the main menu should be displayed or not.
            </summary>
        </member>
        <member name="P:FastReport.Design.StandardDesigner.DesignerControl.ShowStatusBar">
            <summary>
            Gets or sets a value indicating whether the status bar should be displayed or not.
            </summary>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerControl.InitPlugins">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerControl.ShowStatus(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.StandardDesigner.DesignerControl"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerControl.#ctor(FastReport.DevComponents.DotNetBar.LabelItem,FastReport.DevComponents.DotNetBar.LabelItem,FastReport.DevComponents.DotNetBar.LabelItem)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.StandardDesigner.DesignerControl"/> class for compatibility with new statusbar and using with ribbon UI.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Design.StandardDesigner.DesignerForm">
            <summary>
            Represents standard designer's form.
            </summary>
            <remarks>
            This form contains the <see cref="T:FastReport.Design.StandardDesigner.DesignerControl"/>. Use the <see cref="P:FastReport.Design.StandardDesigner.DesignerForm.Designer"/> 
            property to get access to this control.
            <para/>Usually you don't need to create an instance of this class. The designer can be called
            using the <see cref="M:FastReport.Report.Design"/> method of 
            the <see cref="T:FastReport.Report"/> instance.
            <para/>If you decided to use this class, you need:
            <list type="bullet">
              <item>
                <description>create an instance of this class;</description>
              </item>
              <item>
                <description>set the <b>Designer.Report</b> property to report that you need to design;</description>
              </item>
              <item>
                <description>call either <b>ShowModal</b> or <b>Show</b> methods to display a form.</description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Design.StandardDesigner.DesignerForm.Designer">
            <summary>
            Gets a reference to the <see cref="P:FastReport.Design.StandardDesigner.DesignerForm.Designer"/> control which is actually a designer.
            </summary>
        </member>
        <member name="P:FastReport.Design.StandardDesigner.DesignerForm.Items">
            <summary>
            Gets a list of File menu buttons
            </summary>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:FastReport.Design.StandardDesigner.DesignerForm"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:FastReport.Design.StandardDesigner.DesignerForm"/> class with default settings.
            </summary>
            <param name="welcome">enables welcome window</param>
        </member>
        <member name="P:FastReport.Design.StandardDesigner.DesignerForm.PluginName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.Lock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.Unlock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.GetOptionsPage">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.UpdateUIStyle">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Design.StandardDesigner.DesignerMenu">
            <summary>
            Represents the designer's main menu.
            </summary>
            <remarks>
            To get this menu, use the following code:
            <code>
            Designer designer;
            DesignerMenu menu = designer.Plugins.FindType("DesignerMenu") as DesignerMenu;
            </code>
            </remarks>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFile">
            <summary>
            The "File" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFileNew">
            <summary>
            The "File|New..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFileOpen">
            <summary>
            The "File|Open..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFileClose">
            <summary>
            The "File|Close" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFileSave">
            <summary>
            The "File|Save" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFileSaveAs">
            <summary>
            The "File|Save as..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFileSaveAll">
            <summary>
            The "File|Save All" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFilePageSetup">
            <summary>
            The "File|Page Setup..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFilePrinterSetup">
            <summary>
            The "File|Printer Setup..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFilePreview">
            <summary>
            The "File|Preview..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFileSelectLanguage">
            <summary>
            The "File|Select Language" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miFileExit">
            <summary>
            The "File|Exit" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEdit">
            <summary>
            The "Edit" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditUndo">
            <summary>
            The "Edit|Undo" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditRedo">
            <summary>
            The "Edit|Redo" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditCut">
            <summary>
            The "Edit|Cut" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditCopy">
            <summary>
            The "Edit|Copy" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditPaste">
            <summary>
            The "Edit|Paste" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditDelete">
            <summary>
            The "Edit|Delete" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditNewPage">
            <summary>
            The "Edit|NewPage" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditCopyPage">
            <summary>
            The "Edit|Copy Page" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditDeletePage">
            <summary>
            The "Edit|Delete Page" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditSelectAll">
            <summary>
            The "Edit|Select All" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditGroup">
            <summary>
            The "Edit|Group" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditUngroup">
            <summary>
            The "Edit|Ungroup" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditFind">
            <summary>
            The "Edit|Find..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miEditReplace">
            <summary>
            The "Edit|Replace..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miView">
            <summary>
            The "View" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miViewToolbars">
            <summary>
            The "View|Toolbars" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miViewStartPage">
            <summary>
            The "View|Start Page" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miViewOptions">
            <summary>
            The "View|Options..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miInsert">
            <summary>
            The "Insert" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miReport">
            <summary>
            The "Report" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miReportOptions">
            <summary>
            The "Report|Options..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miData">
            <summary>
            The "Data" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miDataChoose">
            <summary>
            The "Data|Choose Report Data..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miDataAdd">
            <summary>
            The "Data|Add Data Source..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miDataShowData">
            <summary>
            The "Data|Show Data Dictionary" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miWindow">
            <summary>
            The "Window" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miWindowCloseAll">
            <summary>
            The "Window|Close All" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miHelp">
            <summary>
            The "Help" menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miHelpContents">
            <summary>
            The "Help|Help Contents..." menu.
            </summary>
        </member>
        <member name="F:FastReport.Design.StandardDesigner.DesignerMenu.miHelpAbout">
            <summary>
            The "Help|About..." menu.
            </summary>
        </member>
        <member name="P:FastReport.Design.StandardDesigner.DesignerMenu.PluginName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.Lock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.Unlock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.GetOptionsPage">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.UpdateUIStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.CreateMenuItem">
            <summary>
            Creates a new menu item.
            </summary>
            <returns>New menu item.</returns>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.CreateMenuItem(System.EventHandler)">
            <summary>
            Creates a new menu item.
            </summary>
            <param name="click">Click handler.</param>
            <returns>New menu item.</returns>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.CreateMenuItem(System.Drawing.Image,System.EventHandler)">
            <summary>
            Creates a new menu item.
            </summary>
            <param name="image">Item's image.</param>
            <param name="click">Click handler.</param>
            <returns>New menu item.</returns>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.CreateMenuItem(System.String,System.EventHandler)">
            <summary>
            Creates a new menu item.
            </summary>
            <param name="text">Item's text.</param>
            <param name="click">Click handler.</param>
            <returns>New menu item.</returns>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.CreateMenuItem(System.Drawing.Image,System.String,System.EventHandler)">
            <summary>
            Creates a new menu item.
            </summary>
            <param name="image">Item's image.</param>
            <param name="text">Item's text.</param>
            <param name="click">Click handler.</param>
            <returns>New menu item.</returns>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerMenu.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.StandardDesigner.DesignerMenu"/> class with default settings.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="T:FastReport.Design.StandardDesigner.DesignerStatusBar">
            <summary>
            Represents the designer's statusbar.
            </summary>
        </member>
        <member name="P:FastReport.Design.StandardDesigner.DesignerStatusBar.PluginName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.Lock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.Unlock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.GetOptionsPage">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.UpdateUIStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.UpdateLocationAndSize(System.String,System.String)">
            <summary>
            Updates the information about location and size.
            </summary>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.UpdateText(System.String)">
            <summary>
            Updates the name and text information.
            </summary>
            <param name="s">The text.</param>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.DesignerStatusBar.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.StandardDesigner.DesignerStatusBar"/> class with default settings.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="T:FastReport.Design.StandardDesigner.ToolbarBase">
            <summary>
            Base class for all designer toolbars.
            </summary>
            <remarks>
            Use this class to write own designer's toolbar. To do this:
            <para>- in the constructor, set the <b>Name</b> property and create toolbar buttons. 
            The <b>Name</b> will be used to restore toolbar's state;</para>
            <para>- override the <b>SelectionChanged</b> method. This method is called when current selection
            is changed. In this method, you should update buttons state to reflect the current selection. 
            Selected objects can be accessed via <b>Designer.SelectedObjects</b> property;</para>
            <para>- override the <b>UpdateContent</b> method. This method is called when the report
            content was changed. Typically you need to do the same actions in <b>SelectionChanged</b> and
            <b>UpdateContent</b> methods;</para>
            <para>- to register a toolbar, add its type to the <see cref="T:FastReport.Design.DesignerPlugins"/> global collection:
            <code>
            DesignerPlugins.Add(typeof(MyToolbar));
            </code>
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.Design.StandardDesigner.ToolbarBase.Designer">
            <summary>
            Gets the report designer.
            </summary>
        </member>
        <member name="P:FastReport.Design.StandardDesigner.ToolbarBase.PluginName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.Lock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.Unlock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.GetOptionsPage">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.UpdateUIStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.CreateButton(System.String,System.Drawing.Image,System.EventHandler)">
            <summary>
            Creates a new button.
            </summary>
            <param name="name">Button's name.</param>
            <param name="image">Button's image.</param>
            <param name="click">Click handler.</param>
            <returns>New button.</returns>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.CreateButton(System.String,System.Drawing.Image,System.String,System.EventHandler)">
            <summary>
            Creates a new button.
            </summary>
            <param name="name">Button's name.</param>
            <param name="image">Button's image.</param>
            <param name="tooltip">Button's tooltip text.</param>
            <param name="click">Click handler.</param>
            <returns>New button.</returns>
        </member>
        <member name="M:FastReport.Design.StandardDesigner.ToolbarBase.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.StandardDesigner.ToolbarBase"/> class with default settings.
            </summary>
            <param name="designer">The report designer.</param>
            <remarks>
            You don't need to call this constructor. The designer will do this automatically.
            </remarks>
        </member>
        <member name="T:FastReport.Design.ReportLoadedEventArgs">
            <summary>
            Provides a data for the designer ReportLoaded event.
            </summary>
        </member>
        <member name="P:FastReport.Design.ReportLoadedEventArgs.Report">
            <summary>
            The current report.
            </summary>
        </member>
        <member name="T:FastReport.Design.ReportLoadedEventHandler">
            <summary>
            Represents the method that will handle the designer ReportLoaded event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.Design.ObjectInsertedEventArgs">
            <summary>
            Provides a data for the designer ObjectInserted event.
            </summary>
        </member>
        <member name="P:FastReport.Design.ObjectInsertedEventArgs.Object">
            <summary>
            Gets the inserted object.
            </summary>
        </member>
        <member name="P:FastReport.Design.ObjectInsertedEventArgs.InsertSource">
            <summary>
            Gets the source where the object is inserted from.
            </summary>
        </member>
        <member name="T:FastReport.Design.ObjectInsertedEventHandler">
            <summary>
            Represents the method that will handle the designer ObjectInserted event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.Design.OpenSaveDialogEventArgs">
            <summary>
            Provides a data for the designer's custom dialog events.
            </summary>
        </member>
        <member name="P:FastReport.Design.OpenSaveDialogEventArgs.FileName">
            <summary>
            Gets or sets a file name.
            </summary>
            <remarks>
            This property contains the location of a report. If you work with files (like the 
            standard "Open" and "Save" dialogs do), treat this property as a file name. 
            </remarks>
        </member>
        <member name="P:FastReport.Design.OpenSaveDialogEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating that the dialog was cancelled.
            </summary>
            <remarks>
            This property is used to tell the designer that the user was cancelled the dialog.
            </remarks>
        </member>
        <member name="P:FastReport.Design.OpenSaveDialogEventArgs.Data">
            <summary>
            Gets or sets the custom data that is shared across events.
            </summary>
            <remarks>
            You may set the Data in the OpenDialog event and use it later in the OpenReport event.
            </remarks>
        </member>
        <member name="P:FastReport.Design.OpenSaveDialogEventArgs.Designer">
            <summary>
            Gets a report designer.
            </summary>
        </member>
        <member name="T:FastReport.Design.OpenSaveDialogEventHandler">
            <summary>
            Represents the method that will handle the designer's custom dialogs event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.Design.OpenSaveReportEventArgs">
            <summary>
            Provides a data for the designer's custom dialog events.
            </summary>
        </member>
        <member name="P:FastReport.Design.OpenSaveReportEventArgs.Report">
            <summary>
            Gets a report.
            </summary>
            <remarks>
            Use this report in the load/save operations.
            </remarks>
        </member>
        <member name="P:FastReport.Design.OpenSaveReportEventArgs.FileName">
            <summary>
            Gets a file name.
            </summary>
            <remarks>
            This property contains the location of a report that was selected by the user in the 
            open/save dialogs. If you work with files (like the standard "Open" and "Save" dialogs do), 
            treat this property as a file name. 
            </remarks>
        </member>
        <member name="P:FastReport.Design.OpenSaveReportEventArgs.Data">
            <summary>
            Gets the custom data that was set in the OpenDialog event.
            </summary>
        </member>
        <member name="T:FastReport.Design.OpenSaveReportEventHandler">
            <summary>
            Represents the method that will handle the designer's custom dialogs event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.Design.FilterConnectionTablesEventArgs">
            <summary>
            Provides data for the FilterConnectionTables event.
            </summary>
        </member>
        <member name="P:FastReport.Design.FilterConnectionTablesEventArgs.Connection">
            <summary>
            Gets the Connection object.
            </summary>
        </member>
        <member name="P:FastReport.Design.FilterConnectionTablesEventArgs.TableName">
            <summary>
            Gets the table name.
            </summary>
        </member>
        <member name="P:FastReport.Design.FilterConnectionTablesEventArgs.Skip">
            <summary>
            Gets or sets a value that indicates whether this table should be skipped.
            </summary>
        </member>
        <member name="T:FastReport.Design.FilterConnectionTablesEventHandler">
            <summary>
            Represents the method that will handle the FilterConnectionTables event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.Design.CustomQueryBuilderEventArgs">
            <summary>
            Provides data for the CustomQueryBuilder event.
            </summary>
        </member>
        <member name="P:FastReport.Design.CustomQueryBuilderEventArgs.Connection">
            <summary>
            Gets the Connection object.
            </summary>
        </member>
        <member name="P:FastReport.Design.CustomQueryBuilderEventArgs.SQL">
            <summary>
            Gets or sets the query text.
            </summary>
        </member>
        <member name="P:FastReport.Design.CustomQueryBuilderEventArgs.Parameters">
            <summary>
            Gets or sets the query parameters.
            </summary>
        </member>
        <member name="T:FastReport.Design.CustomQueryBuilderEventHandler">
            <summary>
            Represents the method that will handle the CustomQueryBuilder event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.Design.DesignerSettings">
            <summary>
            This class contains settings that will be applied to the report designer.
            </summary>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.DesignerLoaded">
            <summary>
            Occurs when the designer is loaded.
            </summary>
            <remarks>
            Use this event if you want to customize some aspects of the designer, for example,
            to hide some menu items.
            </remarks>
            <example>
            This example demonstrates how to hide the "File|Select Language..." menu item.
            <code>
            Config.DesignerSettings.DesignerLoaded += new EventHandler(DesignerSettings_DesignerLoaded);
            
            void DesignerSettings_DesignerLoaded(object sender, EventArgs e)
            {
              (sender as DesignerControl).MainMenu.miFileSelectLanguage.Visible = false;
            }
            </code>
            </example>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.DesignerClosed">
            <summary>
            Occurs when the designer is closed.
            </summary>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.ReportLoaded">
            <summary>
            Occurs when the report is loaded.
            </summary>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.PageAdded">
            <summary>
            Occurs when a report page or a dialog form is added to the report.
            </summary>
            <remarks>
            Use this event if you want to customize the page properties.
            </remarks>
            <example>
            This example demonstrates how to change the default page margins.
            <code>
            Config.DesignerSettings.PageAdded += new EventHandler(DesignerSettings_PageAdded);
            
            void DesignerSettings_PageAdded(object sender, EventArgs e)
            {
              if (sender is ReportPage)
                (sender as ReportPage).TopMargin = 0;
            }
            </code>
            </example>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.ObjectInserted">
            <summary>
            Occurs when object is inserted.
            </summary>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.CustomOpenDialog">
            <summary>
        Occurs when the report designer is about to show the "Open" dialog.
        </summary><remarks>
        Use this event to attach own "Open" dialog to the designer. In the event handler, you must 
        display a dialog window to allow user to choose a report file.
        If dialog was executed successfully, you must return <b>e.Cancel</b> = <b>false</b> and set the 
        <b>e.FileName</b> to the selected file name.
        <para />You also need to use <see cref="E:FastReport.Design.DesignerSettings.CustomOpenReport" /> event to provide code that
        will open the report.
        </remarks>
            <example>
        This example shows how to attach own "Open" and "Save" dialogs to the designer. 
        It uses the following events: <see cref="E:FastReport.Design.DesignerSettings.CustomOpenDialog" />, <see cref="E:FastReport.Design.DesignerSettings.CustomSaveDialog" />, 
        <see cref="E:FastReport.Design.DesignerSettings.CustomOpenReport" />, <see cref="E:FastReport.Design.DesignerSettings.CustomSaveReport" />.
        <code>
        private void CustomOpenDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (OpenFileDialog dialog = new OpenFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomSaveDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (SaveFileDialog dialog = new SaveFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";
            // get default file name from e.FileName
            dialog.FileName = e.FileName;

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomOpenReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // load the report from the given e.FileName
          e.Report.Load(e.FileName);
        }

        private void CustomSaveReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // save the report to the given e.FileName
          e.Report.Save(e.FileName);
        }
        </code>
      </example>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.CustomSaveDialog">
            <summary>
        Occurs when the report designer is about to show the "Save" dialog.
        </summary><remarks>
        Use this event to attach own "Save" dialog to the designer. In the event handler, you must 
        display a dialog window to allow user to choose a report file.
        If dialog was executed successfully, you must return <b>e.Cancel</b> = <b>false</b> and set the 
        <b>e.FileName</b> to the selected file name.
        <para />You also need to use <see cref="E:FastReport.Design.DesignerSettings.CustomSaveReport" /> event to provide code that
        will save the report.
        </remarks>
            <example>
        This example shows how to attach own "Open" and "Save" dialogs to the designer. 
        It uses the following events: <see cref="E:FastReport.Design.DesignerSettings.CustomOpenDialog" />, <see cref="E:FastReport.Design.DesignerSettings.CustomSaveDialog" />, 
        <see cref="E:FastReport.Design.DesignerSettings.CustomOpenReport" />, <see cref="E:FastReport.Design.DesignerSettings.CustomSaveReport" />.
        <code>
        private void CustomOpenDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (OpenFileDialog dialog = new OpenFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomSaveDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (SaveFileDialog dialog = new SaveFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";
            // get default file name from e.FileName
            dialog.FileName = e.FileName;

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomOpenReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // load the report from the given e.FileName
          e.Report.Load(e.FileName);
        }

        private void CustomSaveReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // save the report to the given e.FileName
          e.Report.Save(e.FileName);
        }
        </code>
      </example>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.CustomOpenReport">
            <summary>
        Occurs when the report designer is about to load the report.
        </summary><remarks>
        <para />This event is used together with the <see cref="E:FastReport.Design.DesignerSettings.CustomOpenDialog" /> event.
        <para />Use this event to attach own "Open" dialog to the designer. In the event handler, you must 
        load the <b>e.Report</b> from the location specified in the <b>e.FileName</b> property.
        For example, if you work with files: <c>e.Report.Load(e.FileName);</c>
        </remarks>
            <example>
        This example shows how to attach own "Open" and "Save" dialogs to the designer. 
        It uses the following events: <see cref="E:FastReport.Design.DesignerSettings.CustomOpenDialog" />, <see cref="E:FastReport.Design.DesignerSettings.CustomSaveDialog" />, 
        <see cref="E:FastReport.Design.DesignerSettings.CustomOpenReport" />, <see cref="E:FastReport.Design.DesignerSettings.CustomSaveReport" />.
        <code>
        private void CustomOpenDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (OpenFileDialog dialog = new OpenFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomSaveDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (SaveFileDialog dialog = new SaveFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";
            // get default file name from e.FileName
            dialog.FileName = e.FileName;

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomOpenReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // load the report from the given e.FileName
          e.Report.Load(e.FileName);
        }

        private void CustomSaveReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // save the report to the given e.FileName
          e.Report.Save(e.FileName);
        }
        </code>
      </example>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.CustomSaveReport">
            <summary>
        Occurs when the report designer is about to save the report.
        </summary><remarks>
        <para />This event is used together with the <see cref="E:FastReport.Design.DesignerSettings.CustomSaveDialog" /> event.
        <para />Use this event to attach own "Save" dialog to the designer. In the event handler, you must 
        save the <b>e.Report</b> to the location specified in the <b>e.FileName</b> property.
        For example, if you work with files: <c>e.Report.Save(e.FileName);</c>
        </remarks>
            <example>
        This example shows how to attach own "Open" and "Save" dialogs to the designer. 
        It uses the following events: <see cref="E:FastReport.Design.DesignerSettings.CustomOpenDialog" />, <see cref="E:FastReport.Design.DesignerSettings.CustomSaveDialog" />, 
        <see cref="E:FastReport.Design.DesignerSettings.CustomOpenReport" />, <see cref="E:FastReport.Design.DesignerSettings.CustomSaveReport" />.
        <code>
        private void CustomOpenDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (OpenFileDialog dialog = new OpenFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomSaveDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (SaveFileDialog dialog = new SaveFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";
            // get default file name from e.FileName
            dialog.FileName = e.FileName;

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomOpenReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // load the report from the given e.FileName
          e.Report.Load(e.FileName);
        }

        private void CustomSaveReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // save the report to the given e.FileName
          e.Report.Save(e.FileName);
        }
        </code>
      </example>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.CustomPreviewReport">
            <summary>
            Occurs when previewing a report from the designer.
            </summary>
            <remarks>
            Use this event to show own preview window.
            </remarks>
            <example>
            <code>
            Config.DesignerSettings.CustomPreviewReport += new EventHandler(MyPreviewHandler);
            
            private void MyPreviewHandler(object sender, EventArgs e)
            {
              Report report = sender as Report;
              using (MyPreviewForm form = new MyPreviewForm())
              {
                report.Preview = form.previewControl1;
                report.ShowPreparedReport();
                form.ShowDialog();
              }
            }
            </code>
            </example>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.FilterConnectionTables">
            <summary>
            Occurs when getting available table names from the connection.
            </summary>
            <remarks>
            Use this handler to filter the list of tables returned by the connection object.
            </remarks>
            <example>
            This example demonstrates how to hide the table with "Table 1" name from the Data Wizard.
            <code>
            Config.DesignerSettings.FilterConnectionTables += DesignerSettings_FilterConnectionTables;
            
            private void DesignerSettings_FilterConnectionTables(object sender, FilterConnectionTablesEventArgs e)
            {
              if (e.TableName == "Table 1")
                e.Skip = true;
            }
            </code>
            </example>
        </member>
        <member name="E:FastReport.Design.DesignerSettings.CustomQueryBuilder">
            <summary>
            Occurs when the query builder is called.
            </summary>
            <remarks>
            Subscribe to this event if you want to replace the embedded query builder with your own one.
            </remarks>
        </member>
        <member name="P:FastReport.Design.DesignerSettings.Icon">
            <summary>
            Gets or sets the icon for the designer window.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerSettings.DefaultFont">
            <summary>
            Gets or sets the default font used in a report.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerSettings.ShowInTaskbar">
            <summary>
            Gets or sets a value indicating whether the designer window is displayed in the Windows taskbar. 
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerSettings.Restrictions">
            <summary>
            Gets the designer restrictions flags.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerSettings.Text">
            <summary>
            Gets or sets the title text for the designer window.
            </summary>
            <remarks>
            If no text is set, the default text "FastReport -" will be used.
            </remarks>
        </member>
        <member name="P:FastReport.Design.DesignerSettings.ApplicationConnection">
            <summary>
            Gets or sets application-defined DbConnection object that will be used in the designer 
            to create a new datasource.
            </summary>
            <remarks>
            The application connection object is used in the "Data Wizard" to create new datasources. 
            In this mode, you can't create any other connections in the wizard; only application
            connection is available. You still able to choose tables or create a new queries inside 
            this connection. The connection information (ConnectionString) is not stored in the report file.
            </remarks>
        </member>
        <member name="P:FastReport.Design.DesignerSettings.ToolStripRenderer">
            <summary>
            Gets the toolstrip renderer.
            </summary>
        </member>
        <member name="M:FastReport.Design.DesignerSettings.AddCustomConnection(System.Type,System.String)">
            <summary>
            Adds a custom connection used in the "Data Wizard" window.
            </summary>
            <remarks>
            Use this method to provide own connection strings for the "Data Wizard" dialog. To do this, you need 
            to pass the type of connection object and connection string associated with it. You must use one of the
            connection objects registered in FastReport that inherit from the 
            <see cref="T:FastReport.Data.DataConnectionBase"/> class.
            <para/>To clear the custom connections, use the <see cref="M:FastReport.Design.DesignerSettings.ClearCustomConnections"/> method.
            </remarks>
            <example>
            This example shows how to add own connection string.
            <code>
            Config.DesignerSettings.AddCustomConnection(typeof(MsAccessDataConnection), @"Data Source=c:\data.mdb");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Design.DesignerSettings.ClearCustomConnections">
            <summary>
            Clears the custom connections added by the <b>AddCustomConnection</b> method.
            </summary>
        </member>
        <member name="M:FastReport.Design.DesignerSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.DesignerSettings"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Design.ImportPlugin">
            <summary>
            Base class for all import plugins.
            </summary>
        </member>
        <member name="P:FastReport.Design.ImportPlugin.Name">
            <summary>
            Gets or sets the name of plugin.
            </summary>
        </member>
        <member name="P:FastReport.Design.ImportPlugin.Filter">
            <summary>
            Gets or sets the filter string used in the "Open File" dialog.
            </summary>
        </member>
        <member name="P:FastReport.Design.ImportPlugin.Designer">
            <summary>
            Gets or sets reference to the designer.
            </summary>
        </member>
        <member name="P:FastReport.Design.ImportPlugin.Report">
            <summary>
            Gets or sets reference to the report.
            </summary>
        </member>
        <member name="P:FastReport.Design.ImportPlugin.PluginName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ImportPlugin"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ImportPlugin"/> class with a specified designer.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.Lock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.Unlock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.GetOptionsPage">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.UpdateUIStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.GetFilter">
            <summary>
            Returns a file filter for a open dialog.
            </summary>
            <returns>String that contains a file filter, for example: "Bitmap image (*.bmp)|*.bmp"</returns>
        </member>
        <member name="M:FastReport.Design.ImportPlugin.LoadReport(FastReport.Report,System.String)">
            <summary>
            Loads the specified file into specified report.
            </summary>
            <param name="report">Report object.</param>
            <param name="filename">File name.</param>
        </member>
        <member name="T:FastReport.Design.DesignerRestrictions">
            <summary>
            Represents a set of designer's restrictions.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontLoadReport">
            <summary>
            Gets or sets a value that enables or disables the "Open" action.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontSaveReport">
            <summary>
            Gets or sets a value that enables or disables the "Save/Save as" actions.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontCreateReport">
            <summary>
            Gets or sets a value that enables or disables the "New..." action.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontPreviewReport">
            <summary>
            Gets or sets a value that enables or disables the "Preview" action.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontShowRecentFiles">
            <summary>
            Gets or sets a value that enables or disables the recent files list.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontEditCode">
            <summary>
            Gets or sets a value that enables or disables the "Code" tab.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontEditData">
            <summary>
            Gets or sets a value that enables or disables the "Data" menu.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontCreateData">
            <summary>
            Gets or sets a value that enables or disables the "Data|Add New Data Source..." menu.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontSortDataSources">
            <summary>
            Gets or sets a value that enables or disables the "Data|Sort Data Sources" menu.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontChangeReportOptions">
            <summary>
            Gets or sets a value that enables or disables the "Report|Options..." menu.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontInsertObject">
            <summary>
            Gets or sets a value that enables or disables insertion of objects.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontInsertBand">
            <summary>
            Gets or sets a value that enables or disables the insertion of bands.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontDeletePage">
            <summary>
            Gets or sets a value that enables or disables the "Delete Page" action.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontCreatePage">
            <summary>
            Gets or sets a value that enables or disables the creation of report/dialog pages.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontCopyPage">
            <summary>
            Gets or set a value that enables or disbles the "Copy Page" action.
            </summary>
        </member>
        <member name="P:FastReport.Design.DesignerRestrictions.DontChangePageOptions">
            <summary>
            Gets or sets a value that enables or disables the "Page Setup" action.
            </summary>
        </member>
        <member name="M:FastReport.Design.DesignerRestrictions.Assign(FastReport.Design.DesignerRestrictions)">
            <summary>
            Copies the contents of another, similar object.
            </summary>
            <param name="source">Source object to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Design.DesignerRestrictions.Clone">
            <summary>
            Creates exact copy of this object.
            </summary>
            <returns>The copy of this object.</returns>
        </member>
        <member name="T:FastReport.Design.ToolWindows.MessagesWindow">
            <summary>
            Represents the "Messages" window.
            </summary>
            <remarks>
            To get this window, use the following code:
            <code>
            Designer designer;
            MessagesWindow window = designer.Plugins.FindType("MessagesWindow") as MessagesWindow;
            </code>
            </remarks>
        </member>
        <member name="M:FastReport.Design.ToolWindows.MessagesWindow.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.MessagesWindow.ClearMessages">
            <summary>
            Clears the message list.
            </summary>
        </member>
        <member name="M:FastReport.Design.ToolWindows.MessagesWindow.AddMessage(System.String,System.String)">
            <summary>
            Adds a new message.
            </summary>
            <param name="description">The message text.</param>
            <param name="objName">The name of object related to a message.</param>
        </member>
        <member name="M:FastReport.Design.ToolWindows.MessagesWindow.AddMessage(System.String,System.Int32,System.Int32)">
            <summary>
            Adds a new script-related message.
            </summary>
            <param name="description">The message text.</param>
            <param name="line">The line of the script.</param>
            <param name="column">The column of the script.</param>
        </member>
        <member name="M:FastReport.Design.ToolWindows.MessagesWindow.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ToolWindows.MessagesWindow"/> class with default settings.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="T:FastReport.Design.ToolWindows.DictionaryWindow">
            <summary>
            Represents the "Data Dictionary" window.
            </summary>
        </member>
        <member name="M:FastReport.Design.ToolWindows.DictionaryWindow.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.DictionaryWindow.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.DictionaryWindow.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.DictionaryWindow.UpdateUIStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.DictionaryWindow.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.DictionaryWindow.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.DictionaryWindow.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ToolWindows.DictionaryWindow"/> class with default settings.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="T:FastReport.Design.ToolWindows.DictionaryWindow.DraggedItem">
            <summary>
            Describes an item dragged from the "Data Dictionary" window.
            </summary>
        </member>
        <member name="F:FastReport.Design.ToolWindows.DictionaryWindow.DraggedItem.obj">
            <summary>
            The dragged object.
            </summary>
        </member>
        <member name="F:FastReport.Design.ToolWindows.DictionaryWindow.DraggedItem.text">
            <summary>
            The text of dragged object.
            </summary>
        </member>
        <member name="T:FastReport.Design.ToolWindows.DictionaryWindow.DraggedItemCollection">
            <summary>
            Collection of dragged items.
            </summary>
        </member>
        <member name="T:FastReport.Design.ToolWindows.PropertiesWindow">
            <summary>
            Represents the "Properties" window.
            </summary>
        </member>
        <member name="M:FastReport.Design.ToolWindows.PropertiesWindow.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.PropertiesWindow.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.PropertiesWindow.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.PropertiesWindow.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.PropertiesWindow.Lock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.PropertiesWindow.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.PropertiesWindow.UpdateUIStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.PropertiesWindow.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ToolWindows.PropertiesWindow"/> class with default settings.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="T:FastReport.Design.ToolWindows.ReportTreeWindow">
            <summary>
            Represents the "Report Tree" window.
            </summary>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ReportTreeWindow.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ReportTreeWindow.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ReportTreeWindow.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ReportTreeWindow.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ToolWindows.ReportTreeWindow"/> class with default settings.
            </summary>
            <param name="designer">The report designer.</param>
        </member>
        <member name="T:FastReport.Design.ToolWindows.ToolWindowBase">
            <summary>
            Base class for all tool windows such as "Properties", "Data Dictionary" etc.
            </summary>
            <remarks>
            <para>Use this class to create own tool window. To do this:</para>
            <para>- in the constructor, set the <b>Name</b> and <b>Image</b> properties and create necessary controls. 
            The <b>Name</b> will be used to restore window's state;</para>
            <para>- override the <b>SelectionChanged</b> method. This method is called when current selection
            is changed. In this method, you should update buttons state to reflect the current selection. 
            Selected objects can be accessed via <b>Designer.SelectedObjects</b> property;</para>
            <para>- override the <b>UpdateContent</b> method. This method is called when the report
            content was changed. Typically you need to do the same actions in <b>SelectionChanged</b> and
            <b>UpdateContent</b> methods;</para>
            <para>- to register a toolwindow, add its type to the <see cref="T:FastReport.Design.DesignerPlugins"/> global collection:
            <code>
            DesignerPlugins.Add(typeof(MyToolWindow));
            </code>
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.Design.ToolWindows.ToolWindowBase.Designer">
            <summary>
            Gets the report designer.
            </summary>
        </member>
        <member name="P:FastReport.Design.ToolWindows.ToolWindowBase.Locked">
            <summary>
            Gets a value indicating that window is locked.
            </summary>
        </member>
        <member name="P:FastReport.Design.ToolWindows.ToolWindowBase.Shortcut">
            <summary>
            Gets or sets shortcut keys used to show this toolwindow.
            </summary>
        </member>
        <member name="P:FastReport.Design.ToolWindows.ToolWindowBase.PluginName">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Design.ToolWindows.ToolWindowBase.CanHide">
            <summary>
            Gets or sets a value indicating that the toolwindow can be closed by the x button.
            </summary>
        </member>
        <member name="P:FastReport.Design.ToolWindows.ToolWindowBase.ParentControl">
            <summary>
            Gets a parent control that contains all controls.
            </summary>
            <remarks>
            Add your control to the parent control Controls collection.
            </remarks>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.OnContainerChanged(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.Show">
            <summary>
            Shows the toolwindow.
            </summary>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.Hide">
            <summary>
            Hides the toolwindow.
            </summary>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.Lock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.Unlock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.GetOptionsPage">
            <summary>
            Implements <see cref="M:FastReport.Design.IDesignerPlugin.GetOptionsPage"/> method.
            </summary>
            <returns>The options page, if implemented; otherwise, <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.UpdateUIStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ToolWindows.ToolWindowBase.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Design.ToolWindows.ToolWindowBase"/> class with default settings.
            </summary>
            <param name="designer">The report designer.</param>
            <remarks>
            You don't need to call this constructor. The designer will do this automatically.
            </remarks>
        </member>
        <member name="T:FastReport.Design.PluginCollection">
            <summary>
            Represents collection of designer plugins.
            </summary>
            <remarks>
            <para>This class is used in the <b>Designer.Plugins</b> property.</para>
            <para>To register own plugin, add its type to the <see cref="T:FastReport.Design.DesignerPlugins"/> global collection:
            <code>
            DesignerPlugins.Add(typeof(MyToolbar));
            </code>
            </para>
            </remarks>
        </member>
        <member name="M:FastReport.Design.PluginCollection.Find(System.String)">
            <summary>
            Finds a plugin by its name.
            </summary>
            <param name="pluginName">The plugin's name.</param>
            <returns>The plugin, if found; otherwise, <b>null</b>.</returns>
            <example>This example shows how to find a plugin.
            <code>
            MessagesWindow window = designer.Plugins.Find("MessagesWindow") as MessagesWindow;
            </code>
            </example>
        </member>
        <member name="M:FastReport.Design.PluginCollection.FindType(System.String)">
            <summary>
            Finds a plugin by its type name.
            </summary>
            <param name="typeName">The plugin's type name.</param>
            <returns>The plugin, if found; otherwise, <b>null</b>.</returns>
            <example>This example shows how to find a plugin.
            <code>
            MessagesWindow window = designer.Plugins.FindType("MessagesWindow") as MessagesWindow;
            </code>
            </example>
        </member>
        <member name="T:FastReport.Design.DesignerPlugins">
            <summary>
            Represents list of registered design plugins.
            </summary>
        </member>
        <member name="M:FastReport.Design.DesignerPlugins.Add(System.Type)">
            <summary>
            Adds a new plugin's type.
            </summary>
            <param name="plugin">The type of a plugin.</param>
        </member>
        <member name="T:FastReport.Design.IDesignerPlugin">
            <summary>
            Provides functionality required for report designer plugins such as toolbars and toolwindows.
            </summary>
        </member>
        <member name="P:FastReport.Design.IDesignerPlugin.PluginName">
            <summary>
            Gets the plugin name.
            </summary>
        </member>
        <member name="M:FastReport.Design.IDesignerPlugin.SaveState">
            <summary>
            Saves the plugin state.
            </summary>
            <example>This example shows how to save the state:
            <code>
            public void SaveState()
            {
              XmlItem xi = Config.Root.FindItem("Designer").FindItem(Name);
              xi.SetProp("ShowGrid", DialogWorkspace.ShowGrid ? "1" : "0");
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Design.IDesignerPlugin.RestoreState">
            <summary>
            Restores the plugin state.
            </summary>
            <example>This example shows how to restore the state:
            <code>
            public void RestoreState()
            {
              XmlItem xi = Config.Root.FindItem("Designer").FindItem(Name);
              DialogWorkspace.ShowGrid = xi.GetProp("ShowGrid") != "0";
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Design.IDesignerPlugin.SelectionChanged">
            <summary>
            Updates plugin state when current selection was changed.
            </summary>
            <remarks>
            Typically you need to do the same work in the <see cref="M:FastReport.Design.IDesignerPlugin.SelectionChanged"/> and
            <see cref="M:FastReport.Design.IDesignerPlugin.UpdateContent"/> methods.
            </remarks>
        </member>
        <member name="M:FastReport.Design.IDesignerPlugin.UpdateContent">
            <summary>
            Updates plugin state when the report was modified.
            </summary>
            <remarks>
            Typically you need to do the same work in the <see cref="M:FastReport.Design.IDesignerPlugin.SelectionChanged"/> and
            <see cref="M:FastReport.Design.IDesignerPlugin.UpdateContent"/> methods.
            </remarks>
        </member>
        <member name="M:FastReport.Design.IDesignerPlugin.Lock">
            <summary>
            Locks the plugin.
            </summary>
            <remarks>
            This method is called by the designer when report is loading. It may be needed to disable 
            some operations (like painting) that use the report.
            </remarks>
        </member>
        <member name="M:FastReport.Design.IDesignerPlugin.Unlock">
            <summary>
            Unlocks the plugin.
            </summary>
            This method is called by the designer when report is loaded. It follows the <b>Lock</b>
            method call and must reset the lock.
        </member>
        <member name="M:FastReport.Design.IDesignerPlugin.Localize">
            <summary>
            Localizes the plugin.
            </summary>
            <remarks>
            This method is called by the designer when current localization is changed.
            </remarks>
        </member>
        <member name="M:FastReport.Design.IDesignerPlugin.GetOptionsPage">
            <summary>
            Gets an options page that will be used in the Designer Options dialog to edit the plugin options.
            </summary>
            <returns>The options page, if implemented; otherwise, <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Design.IDesignerPlugin.UpdateUIStyle">
            <summary>
            Updates UI style of the plugin.
            </summary>
            <remarks>
            The plugin should update its style according to the designer's <b>UIStyle</b> property.
            </remarks>
        </member>
        <member name="P:FastReport.Design.ObjectsToolbar.PluginName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ObjectsToolbar.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ObjectsToolbar.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ObjectsToolbar.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ObjectsToolbar.UpdateContent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ObjectsToolbar.Lock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ObjectsToolbar.Unlock">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ObjectsToolbar.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ObjectsToolbar.GetOptionsPage">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Design.ObjectsToolbar.UpdateUIStyle">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Dialog.CheckBoxControl">
            <summary>
            Represents a Windows CheckBox.
            Wraps the <see cref="T:System.Windows.Forms.CheckBox"/> control.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.CheckBoxControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.CheckBoxControl.CheckedChanged">
            <summary>
            Occurs when the value of the <b>Checked</b> property changes.
            Wraps the <see cref="E:System.Windows.Forms.CheckBox.CheckedChanged"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckBoxControl.CheckBox">
            <summary>
            Gets an internal <b>CheckBox</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckBoxControl.Appearance">
            <summary>
            Gets or sets the value that determines the appearance of a CheckBox control.
            Wraps the <see cref="P:System.Windows.Forms.CheckBox.Appearance"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckBoxControl.CheckAlign">
            <summary>
            Gets or sets the horizontal and vertical alignment of the check mark on a CheckBox control.
            Wraps the <see cref="P:System.Windows.Forms.CheckBox.CheckAlign"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckBoxControl.Checked">
            <summary>
            Gets or set a value indicating whether the CheckBox is in the checked state.
            Wraps the <see cref="P:System.Windows.Forms.CheckBox.Checked"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckBoxControl.CheckState">
            <summary>
            Gets or sets the state of the CheckBox.
            Wraps the <see cref="P:System.Windows.Forms.CheckBox.CheckState"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckBoxControl.ThreeState">
            <summary>
            Gets or sets a value indicating whether the CheckBox will allow three check states rather than two.
            Wraps the <see cref="P:System.Windows.Forms.CheckBox.ThreeState"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckBoxControl.CheckedChangedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.CheckBoxControl.CheckedChanged"/> event.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.CheckBoxControl.AttachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.CheckBoxControl.DetachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.CheckBoxControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.CheckBoxControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.CheckBoxControl.OnCheckedChanged(System.EventArgs)">
            <summary>
            This method fires the <b>CheckedChanged</b> event and the script code connected to the <b>CheckedChangedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.CheckBoxControl.#ctor">
            <summary>
            Initializes a new instance of the <b>CheckBoxControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.ComboBoxControl">
            <summary>
            Represents a Windows combo box control.
            Wraps the <see cref="T:System.Windows.Forms.ComboBox"/> control.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.ShouldSerializeBackColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.ShouldSerializeForeColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.ComboBoxControl.SelectedIndexChanged">
            <summary>
            Occurs after the selection has been changed.
            Wraps the <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.ComboBoxControl.MeasureItem">
            <summary>
            Occurs each time an owner-drawn <b>ComboBox</b> item needs to be drawn and 
            when the sizes of the list items are determined.
            Wraps the <see cref="E:System.Windows.Forms.ComboBox.MeasureItem"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.ComboBoxControl.DrawItem">
            <summary>
            Occurs when a visual aspect of an owner-drawn <b>ComboBox</b> changes. 
            Wraps the <see cref="E:System.Windows.Forms.ComboBox.DrawItem"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.ComboBox">
            <summary>
            Gets an internal <b>ComboBox</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.DrawMode">
            <summary>
            Gets or sets a value indicating whether your code or the operating system will handle drawing of elements in the list.
            Wraps the <see cref="P:System.Windows.Forms.ComboBox.DrawMode"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.DropDownStyle">
            <summary>
            Gets or sets a value specifying the style of the combo box.
            Wraps the <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.DropDownWidth">
            <summary>
            Gets or sets the width of the of the drop-down portion of a combo box.
            Wraps the <see cref="P:System.Windows.Forms.ComboBox.DropDownWidth"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.DropDownHeight">
            <summary>
            Gets or sets the height in pixels of the drop-down portion of the ComboBox.
            Wraps the <see cref="P:System.Windows.Forms.ComboBox.DropDownHeight"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.ItemHeight">
            <summary>
            Gets or sets the height of an item in the combo box.
            Wraps the <see cref="P:System.Windows.Forms.ComboBox.ItemHeight"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.Items">
            <summary>
            Gets a collection of the items contained in this ComboBox.
            Wraps the <see cref="P:System.Windows.Forms.ComboBox.Items"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.MaxDropDownItems">
            <summary>
            Gets or sets the maximum number of items to be shown in the drop-down portion of the ComboBox.
            Wraps the <see cref="P:System.Windows.Forms.ComboBox.MaxDropDownItems"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.Sorted">
            <summary>
            Gets or sets a value indicating whether the items in the combo box are sorted.
            Wraps the <see cref="P:System.Windows.Forms.ComboBox.Sorted"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.ItemsText">
            <summary>
            Gets or sets the string that contains all items text.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.SelectedIndex">
            <summary>
            Gets or sets the index specifying the currently selected item.
            Wraps the <see cref="P:System.Windows.Forms.ComboBox.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.SelectedItem">
            <summary>
            Gets or sets currently selected item in the ComboBox.
            Wraps the <see cref="P:System.Windows.Forms.ComboBox.SelectedItem"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.SelectedIndexChangedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.ComboBoxControl.SelectedIndexChanged"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.MeasureItemEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.ComboBoxControl.MeasureItem"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ComboBoxControl.DrawItemEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.ComboBoxControl.DrawItem"/> event.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.AttachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.DetachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.FillData(FastReport.Data.DataSourceBase,FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.OnLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            This method fires the <b>SelectedIndexChanged</b> event and the script code connected to the <b>SelectedIndexChangedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
            <summary>
            This method fires the <b>MeasureItem</b> event and the script code connected to the <b>MeasureItemEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            This method fires the <b>DrawItem</b> event and the script code connected to the <b>DrawItemEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.ComboBoxControl.#ctor">
            <summary>
            Initializes a new instance of the <b>ComboBoxControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.ButtonBaseControl">
            <summary>
            Implements base behavior of button controls.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonBaseControl.AutoFill">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonBaseControl.AutoSize">
            <summary>
            Gets or sets a value that indicates whether the control resizes based on its contents.
            Wraps the <see cref="P:System.Windows.Forms.ButtonBase.AutoSize"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonBaseControl.Image">
            <summary>
            Gets or sets the image that is displayed on a button control.
            Wraps the <see cref="P:System.Windows.Forms.ButtonBase.Image"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonBaseControl.ImageAlign">
            <summary>
            Gets or sets the alignment of the image on the button control.
            Wraps the <see cref="P:System.Windows.Forms.ButtonBase.ImageAlign"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonBaseControl.TextAlign">
            <summary>
            Gets or sets the alignment of the text on the button control.
            Wraps the <see cref="P:System.Windows.Forms.ButtonBase.TextAlign"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonBaseControl.TextImageRelation">
            <summary>
            Gets or sets the position of text and image relative to each other.
            Wraps the <see cref="P:System.Windows.Forms.ButtonBase.TextImageRelation"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ButtonBaseControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ButtonBaseControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Dialog.ButtonControl">
            <summary>
            Represents a Windows button control. 
            Wraps the <see cref="T:System.Windows.Forms.Button"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonControl.AutoSize">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.ButtonControl.TextAlign">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.ButtonControl.AutoFilter">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonControl.DataColumn">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonControl.ReportParameter">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonControl.FilterOperation">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonControl.Button">
            <summary>
            Gets an internal <b>Button</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ButtonControl.DialogResult">
            <summary>
            Gets or sets a value that is returned to the parent form when the button is clicked.
            Wraps the <see cref="P:System.Windows.Forms.Button.DialogResult"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ButtonControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ButtonControl.#ctor">
            <summary>
            Initializes a new instance of the <b>ButtonControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.CheckedListBoxControl">
            <summary>
            Displays a ListBox in which a check box is displayed to the left of each item.
            Wraps the <see cref="T:System.Windows.Forms.CheckedListBox"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckedListBoxControl.DrawMode">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckedListBoxControl.ItemHeight">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.CheckedListBoxControl.ItemCheck">
            <summary>
            Occurs after item's check state was changed.
            Wraps the <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckedListBoxControl.CheckedListBox">
            <summary>
            Gets an internal <b>CheckedListBox</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckedListBoxControl.CheckOnClick">
            <summary>
            Gets or sets a value indicating whether the check box should be toggled when an item is selected.
            Wraps the <see cref="P:System.Windows.Forms.CheckedListBox.CheckOnClick"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckedListBoxControl.CheckedIndices">
            <summary>
            Collection of checked indexes in this CheckedListBox.
            Wraps the <see cref="P:System.Windows.Forms.CheckedListBox.CheckedIndices"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckedListBoxControl.CheckedItems">
            <summary>
            Collection of checked items in this CheckedListBox.
            Wraps the <see cref="P:System.Windows.Forms.CheckedListBox.CheckedItems"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.CheckedListBoxControl.ItemCheckEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.CheckedListBoxControl.ItemCheck"/> event.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.CheckedListBoxControl.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.CheckedListBoxControl.AttachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.CheckedListBoxControl.DetachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.CheckedListBoxControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.CheckedListBoxControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.CheckedListBoxControl.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)">
            <summary>
            This method fires the <b>ItemCheck</b> event and the script code connected to the <b>ItemCheckEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.CheckedListBoxControl.#ctor">
            <summary>
            Initializes a new instance of the <b>CheckedListBoxControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.TreeViewControl">
            <summary>
            Displays a hierarchical collection of labeled items, each represented by a TreeNode.
            Wraps the <see cref="T:System.Windows.Forms.TreeView"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TreeViewControl.Text">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.TreeViewControl.ShouldSerializeBackColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.TreeViewControl.ShouldSerializeForeColor">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.TreeViewControl.AfterSelect">
            <summary>
            Occurs after the tree node is selected.
            Wraps the <see cref="E:System.Windows.Forms.TreeView.AfterSelect"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TreeViewControl.TreeView">
            <summary>
            Gets an internal <b>TreeView</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TreeViewControl.CheckBoxes">
            <summary>
            Gets or sets a value indicating whether check boxes are displayed next to the tree nodes in the tree view control.
            Wraps the <see cref="P:System.Windows.Forms.TreeView.CheckBoxes"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TreeViewControl.ShowLines">
            <summary>
            Gets or sets a value indicating whether lines are drawn between tree nodes in the tree view control.
            Wraps the <see cref="P:System.Windows.Forms.TreeView.ShowLines"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TreeViewControl.ShowRootLines">
            <summary>
            Gets or sets a value indicating whether lines are drawn between the tree nodes that are at the root of the tree view.
            Wraps the <see cref="P:System.Windows.Forms.TreeView.ShowRootLines"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TreeViewControl.ImageList">
            <summary>
            Gets or sets the <b>ImageList</b> that contains the <b>Image</b> objects used by the tree nodes.
            Wraps the <see cref="P:System.Windows.Forms.TreeView.ImageList"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TreeViewControl.Nodes">
            <summary>
            Gets the collection of tree nodes that are assigned to the tree view control.
            Wraps the <see cref="P:System.Windows.Forms.TreeView.Nodes"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TreeViewControl.SelectedNode">
            <summary>
            Gets or sets the tree node that is currently selected in the tree view control.
            Wraps the <see cref="P:System.Windows.Forms.TreeView.SelectedNode"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TreeViewControl.AfterSelectEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.TreeViewControl.AfterSelect"/> event.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.TreeViewControl.AttachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.TreeViewControl.DetachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.TreeViewControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.TreeViewControl.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            This method fires the <b>AfterSelect</b> event and the script code connected to the <b>AfterSelectEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.TreeViewControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Dialog.TreeViewControl"/> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.TextBoxControl">
            <summary>
            Represents a Windows text box control.
            Wraps the <see cref="T:System.Windows.Forms.TextBox"/> control.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.TextBoxControl.ShouldSerializeBackColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.TextBoxControl.ShouldSerializeCursor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.TextBoxControl.ShouldSerializeForeColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.TextBoxControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.TextBox">
            <summary>
            Gets an internal <b>TextBox</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.AcceptsReturn">
            <summary>
            Gets or sets a value indicating whether pressing ENTER in a multiline TextBox control creates a new line of text in the control or activates the default button for the form. 
            Wraps the <see cref="P:System.Windows.Forms.TextBox.AcceptsReturn"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.AcceptsTab">
            <summary>
            Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.
            Wraps the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.CharacterCasing">
            <summary>
            Gets or sets whether the TextBox control modifies the case of characters as they are typed.
            Wraps the <see cref="P:System.Windows.Forms.TextBox.CharacterCasing"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.MaxLength">
            <summary>
            Gets or sets the maximum number of characters the user can type or paste into the text box control.
            Wraps the <see cref="P:System.Windows.Forms.TextBoxBase.MaxLength"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.Multiline">
            <summary>
            Gets or sets a value indicating whether this is a multiline TextBox control. 
            Wraps the <see cref="P:System.Windows.Forms.TextBox.Multiline"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.ReadOnly">
            <summary>
            Gets or sets a value indicating whether text in the text box is read-only. 
            Wraps the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.ScrollBars">
            <summary>
            Gets or sets which scroll bars should appear in a multiline TextBox control.
            Wraps the <see cref="P:System.Windows.Forms.TextBox.ScrollBars"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.TextAlign">
            <summary>
            Gets or sets how text is aligned in a TextBox control.
            Wraps the <see cref="P:System.Windows.Forms.TextBox.TextAlign"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.UseSystemPasswordChar">
            <summary>
            Gets or sets a value indicating whether the text in the TextBox control should appear as the default password character.
            Wraps the <see cref="P:System.Windows.Forms.TextBox.UseSystemPasswordChar"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.TextBoxControl.WordWrap">
            <summary>
            Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.
            Wraps the <see cref="P:System.Windows.Forms.TextBoxBase.WordWrap"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.TextBoxControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.TextBoxControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.TextBoxControl.OnLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.TextBoxControl.#ctor">
            <summary>
            Initializes a new instance of the <b>TextBoxControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.RadioButtonControl">
            <summary>
            Enables the user to select a single option from a group of choices when paired with other RadioButton controls.
            Wraps the <see cref="T:System.Windows.Forms.RadioButton"/> control.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.RadioButtonControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.RadioButtonControl.CheckedChanged">
            <summary>
            Occurs when the value of the Checked property changes.
            Wraps the <see cref="E:System.Windows.Forms.RadioButton.CheckedChanged"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.RadioButtonControl.RadioButton">
            <summary>
            Gets an internal <b>RadioButton</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.RadioButtonControl.CheckAlign">
            <summary>
            Gets or sets the location of the check box portion of the RadioButton. 
            Wraps the <see cref="P:System.Windows.Forms.RadioButton.CheckAlign"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.RadioButtonControl.Checked">
            <summary>
            Gets or sets a value indicating whether the control is checked.
            Wraps the <see cref="P:System.Windows.Forms.RadioButton.Checked"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.RadioButtonControl.CheckedChangedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.RadioButtonControl.CheckedChanged"/> event.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.RadioButtonControl.AttachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.RadioButtonControl.DetachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.RadioButtonControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.RadioButtonControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.RadioButtonControl.OnCheckedChanged(System.EventArgs)">
            <summary>
            This method fires the <b>CheckedChanged</b> event and the script code connected to the <b>CheckedChangedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.RadioButtonControl.#ctor">
            <summary>
            Initializes a new instance of the <b>RadioButtonControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.PictureBoxControl">
            <summary>
            Represents a Windows picture box control for displaying an image.
            Wraps the <see cref="T:System.Windows.Forms.PictureBox"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.PictureBoxControl.Text">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.PictureBoxControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.PictureBoxControl.PictureBox">
            <summary>
            Gets an internal <b>PictureBox</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.PictureBoxControl.BorderStyle">
            <summary>
            Indicates the border style for the control.
            Wraps the <see cref="P:System.Windows.Forms.PictureBox.BorderStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.PictureBoxControl.Image">
            <summary>
            Gets or sets the image that the PictureBox displays.
            Wraps the <see cref="P:System.Windows.Forms.PictureBox.Image"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.PictureBoxControl.SizeMode">
            <summary>
            Indicates how the image is displayed. 
            Wraps the <see cref="P:System.Windows.Forms.PictureBox.SizeMode"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.PictureBoxControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.PictureBoxControl.#ctor">
            <summary>
            Initializes a new instance of the <b>PictureBoxControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.ParentControl">
            <summary>
            Base class for controls that may contain child controls.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.DrawSelection(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.HandleMouseHover(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.ParentControl.Controls">
            <summary>
            Gets the collection of child controls.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ParentControl.#ctor">
            <summary>
            Initializes a new instance of the <b>ParentControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.PanelControl">
            <summary>
            Used to group collections of controls.
            Wraps the <see cref="T:System.Windows.Forms.Panel"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.PanelControl.Text">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.PanelControl.Panel">
            <summary>
            Gets an internal <b>Panel</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.PanelControl.BorderStyle">
            <summary>
            Indicates the border style for the control. 
            Wraps the <see cref="P:System.Windows.Forms.Panel.BorderStyle"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.PanelControl.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.PanelControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.PanelControl.#ctor">
            <summary>
            Initializes a new instance of the <b>PanelControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.NumericUpDownControl">
            <summary>
            Represents a Windows spin box (also known as an up-down control) that displays numeric values.
            Wraps the <see cref="T:System.Windows.Forms.NumericUpDown"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.NumericUpDownControl.Text">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.NumericUpDownControl.ShouldSerializeBackColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.NumericUpDownControl.ShouldSerializeForeColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.NumericUpDownControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.NumericUpDownControl.ValueChanged">
            <summary>
            Occurs when the Value property has been changed in some way.
            Wraps the <see cref="E:System.Windows.Forms.NumericUpDown.ValueChanged"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.NumericUpDownControl.NumericUpDown">
            <summary>
            Gets an internal <b>NumericUpDown</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.NumericUpDownControl.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places to display in the up-down control. 
            Wraps the <see cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.NumericUpDownControl.Hexadecimal">
            <summary>
            Gets or sets a value indicating whether the up-down control should display the value it contains in hexadecimal format.
            Wraps the <see cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.NumericUpDownControl.Increment">
            <summary>
            Gets or sets the value to increment or decrement the up-down control when the up or down buttons are clicked.
            Wraps the <see cref="P:System.Windows.Forms.NumericUpDown.Increment"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.NumericUpDownControl.Maximum">
            <summary>
            Gets or sets the maximum value for the up-down control. 
            Wraps the <see cref="P:System.Windows.Forms.NumericUpDown.Maximum"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.NumericUpDownControl.Minimum">
            <summary>
            Gets or sets the minimum value for the up-down control. 
            Wraps the <see cref="P:System.Windows.Forms.NumericUpDown.Minimum"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.NumericUpDownControl.ThousandsSeparator">
            <summary>
            Gets or sets a value indicating whether a thousands separator is displayed in the up-down control when appropriate.
            Wraps the <see cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.NumericUpDownControl.Value">
            <summary>
            Gets or sets the value assigned to the up-down control.
            Wraps the <see cref="P:System.Windows.Forms.NumericUpDown.Value"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.NumericUpDownControl.ValueChangedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.NumericUpDownControl.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.NumericUpDownControl.AttachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.NumericUpDownControl.DetachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.NumericUpDownControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.NumericUpDownControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.NumericUpDownControl.OnLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.NumericUpDownControl.OnValueChanged(System.EventArgs)">
            <summary>
            This method fires the <b>ValueChanged</b> event and the script code connected to the <b>ValueChangedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.NumericUpDownControl.#ctor">
            <summary>
            Initializes a new instance of the <b>NumericUpDownControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.MonthCalendarControl">
            <summary>
            Represents a Windows control that enables the user to select a date using a visual monthly calendar display.
            Wraps the <see cref="T:System.Windows.Forms.MonthCalendar"/> control.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.MonthCalendarControl.ShouldSerializeBackColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MonthCalendarControl.ShouldSerializeForeColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MonthCalendarControl.ShouldSerializeCalendarDimensions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MonthCalendarControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.MonthCalendarControl.DateChanged">
            <summary>
            Occurs when the date selected in the MonthCalendar changes.
            Wraps the <see cref="E:System.Windows.Forms.MonthCalendar.DateChanged"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.MonthCalendar">
            <summary>
            Gets an internal <b>MonthCalendar</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.CalendarDimensions">
            <summary>
            Gets or sets the number of columns and rows of months displayed. 
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.CalendarDimensions"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.FirstDayOfWeek">
            <summary>
            Gets or sets the first day of the week as displayed in the month calendar.
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.FirstDayOfWeek"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.MaxDate">
            <summary>
            Gets or sets the maximum allowable date.
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.MaxDate"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.MaxSelectionCount">
            <summary>
            Gets or sets the maximum number of days that can be selected in a month calendar control. 
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.MaxSelectionCount"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.MinDate">
            <summary>
            Gets or sets the minimum allowable date. 
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.MinDate"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.ShowToday">
            <summary>
            Gets or sets a value indicating whether the date represented by the <b>TodayDate</b> property is displayed at the bottom of the control.
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.ShowToday"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.ShowTodayCircle">
            <summary>
            Gets or sets a value indicating whether today's date is circled. 
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.ShowTodayCircle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.ShowWeekNumbers">
            <summary>
            Gets or sets a value indicating whether the month calendar control displays week numbers (1-52) to the left of each row of days.
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.ShowWeekNumbers"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.TodayDate">
            <summary>
            Gets or sets the value that is used by MonthCalendar as today's date.
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.TodayDate"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.AnnuallyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which annual days are displayed in bold.
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.AnnuallyBoldedDates"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.BoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which nonrecurring dates are displayed in bold.
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.BoldedDates"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.MonthlyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determine which monthly days to bold. 
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.MonthlyBoldedDates"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.SelectionEnd">
            <summary>
            Gets or sets the end date of the selected range of dates.
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.SelectionEnd"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.SelectionRange">
            <summary>
            Gets or sets the selected range of dates for a month calendar control. 
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.SelectionRange"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.SelectionStart">
            <summary>
            Gets or sets the start date of the selected range of dates.
            Wraps the <see cref="P:System.Windows.Forms.MonthCalendar.SelectionStart"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MonthCalendarControl.DateChangedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.MonthCalendarControl.DateChanged"/> event.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.MonthCalendarControl.AttachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MonthCalendarControl.DetachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MonthCalendarControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MonthCalendarControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MonthCalendarControl.OnDateChanged(System.Windows.Forms.DateRangeEventArgs)">
            <summary>
            This method fires the <b>DateChanged</b> event and the script code connected to the <b>DateChangedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.MonthCalendarControl.#ctor">
            <summary>
            Initializes a new instance of the <b>MonthCalendarControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.MaskedTextBoxControl">
            <summary>
            Uses a mask to distinguish between proper and improper user input.
            Wraps the <see cref="T:System.Windows.Forms.MaskedTextBox"/> control.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.MaskedTextBoxControl.ShouldSerializeBackColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MaskedTextBoxControl.ShouldSerializeCursor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MaskedTextBoxControl.ShouldSerializeForeColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MaskedTextBoxControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.MaskedTextBoxControl.MaskedTextBox">
            <summary>
            Gets an internal <b>MaskedTextBox</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MaskedTextBoxControl.Mask">
            <summary>
            Gets or sets the input mask to use at run time.
            Wraps the <see cref="P:System.Windows.Forms.MaskedTextBox.Mask"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MaskedTextBoxControl.SkipLiterals">
            <summary>
            Gets or sets a value indicating whether the user is allowed to reenter literal values.
            Wraps the <see cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.MaskedTextBoxControl.TextAlign">
            <summary>
            Gets or sets how text is aligned in a masked text box control.
            Wraps the <see cref="P:System.Windows.Forms.MaskedTextBox.TextAlign"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.MaskedTextBoxControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MaskedTextBoxControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MaskedTextBoxControl.OnLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.MaskedTextBoxControl.#ctor">
            <summary>
            Initializes a new instance of the <b>MaskedTextBoxControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.ListViewControl">
            <summary>
            Represents a Windows list view control, which displays a collection of items that can be displayed using one of four different views.
            Wraps the <see cref="T:System.Windows.Forms.ListView"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.Text">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ListViewControl.ShouldSerializeBackColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListViewControl.ShouldSerializeForeColor">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.ListViewControl.ItemChecked">
            <summary>
            Occurs when the checked state of an item changes.
            Wraps the <see cref="E:System.Windows.Forms.ListView.ItemChecked"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.ListViewControl.SelectedIndexChanged">
            <summary>
            Occurs when the index of the selected item in the list view control changes.
            Wraps the <see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.ListView">
            <summary>
            Gets an internal <b>ListView</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.CheckBoxes">
            <summary>
            Gets or sets a value indicating whether a check box appears next to each item in the control.
            Wraps the <see cref="P:System.Windows.Forms.ListView.CheckBoxes"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.MultiSelect">
            <summary>
            Gets or sets a value indicating whether multiple items can be selected.
            Wraps the <see cref="P:System.Windows.Forms.ListView.MultiSelect"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.ShowGroups">
            <summary>
            Gets or sets a value indicating whether items are displayed in groups.
            Wraps the <see cref="P:System.Windows.Forms.ListView.ShowGroups"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.View">
            <summary>
            Gets or sets how items are displayed in the control.
            Wraps the <see cref="P:System.Windows.Forms.ListView.View"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.ItemCheckedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.ListViewControl.ItemChecked"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.SelectedIndexChangedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.ListViewControl.SelectedIndexChanged"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.CheckedIndices">
            <summary>
            Gets the indexes of the currently checked items in the control.
            Wraps the <see cref="P:System.Windows.Forms.ListView.CheckedIndices"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.CheckedItems">
            <summary>
            Gets the currently checked items in the control.
            Wraps the <see cref="P:System.Windows.Forms.ListView.CheckedItems"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.Columns">
            <summary>
            Gets the collection of all column headers that appear in the control.
            Wraps the <see cref="P:System.Windows.Forms.ListView.Columns"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.Groups">
            <summary>
            Gets the collection of ListViewGroup objects assigned to the control.
            Wraps the <see cref="P:System.Windows.Forms.ListView.Groups"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.Items">
            <summary>
            Gets a collection containing all items in the control.
            Wraps the <see cref="P:System.Windows.Forms.ListView.Items"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.LargeImageList">
            <summary>
            Gets or sets the ImageList to use when displaying items as large icons in the control.
            Wraps the <see cref="P:System.Windows.Forms.ListView.LargeImageList"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.SelectedIndices">
            <summary>
            Gets the indexes of the selected items in the control. 
            Wraps the <see cref="P:System.Windows.Forms.ListView.SelectedIndices"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.SelectedItems">
            <summary>
            Gets the items that are selected in the control.
            Wraps the <see cref="P:System.Windows.Forms.ListView.SelectedItems"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListViewControl.SmallImageList">
            <summary>
            Gets or sets the ImageList to use when displaying items as small icons in the control.
            Wraps the <see cref="P:System.Windows.Forms.ListView.SmallImageList"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ListViewControl.AttachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListViewControl.DetachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListViewControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListViewControl.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)">
            <summary>
            This method fires the <b>ItemChecked</b> event and the script code connected to the <b>ItemCheckedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.ListViewControl.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            This method fires the <b>SelectedIndexChanged</b> event and the script code connected to the <b>SelectedIndexChangedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.ListViewControl.#ctor">
            <summary>
            Initializes a new instance of the <b>ListViewControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.ListBoxBaseControl">
            <summary>
            Base class for list box controls such as <b>ListBoxControl</b>, <b>CheckedListBoxControl</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.Text">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ListBoxBaseControl.ShouldSerializeBackColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListBoxBaseControl.ShouldSerializeForeColor">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.ListBoxBaseControl.SelectedIndexChanged">
            <summary>
            Occurs when the <b>SelectedIndex</b> property has changed.
            Wraps the <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.ListBoxBaseControl.MeasureItem">
            <summary>
            Occurs when an owner-drawn ListBox is created and the sizes of the list items are determined.
            Wraps the <see cref="E:System.Windows.Forms.ListBox.MeasureItem"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.ListBoxBaseControl.DrawItem">
            <summary>
            Occurs when a visual aspect of an owner-drawn ListBox changes.
            Wraps the <see cref="E:System.Windows.Forms.ListBox.DrawItem"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.ColumnWidth">
            <summary>
            Gets or sets the width of columns in a multicolumn ListBox.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.ColumnWidth"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.DrawMode">
            <summary>
            Gets or sets the drawing mode for the control.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.DrawMode"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.ItemHeight">
            <summary>
            Gets or sets the height of an item in the ListBox.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.ItemHeight"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.Items">
            <summary>
            Gets the items of the ListBox.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.Items"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.MultiColumn">
            <summary>
            Gets or sets a value indicating whether the ListBox supports multiple columns.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.MultiColumn"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.SelectionMode">
            <summary>
            Gets or sets the method in which items are selected in the ListBox.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.SelectionMode"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.Sorted">
            <summary>
            Gets or sets a value indicating whether the items in the ListBox are sorted alphabetically.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.Sorted"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.UseTabStops">
            <summary>
            Gets or sets a value indicating whether the ListBox can recognize and expand tab characters when drawing its strings.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.UseTabStops"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.ItemsText">
            <summary>
            Gets or sets the string that contains all items text.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.SelectedIndex">
            <summary>
            Gets or sets the zero-based index of the currently selected item in a ListBox.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.SelectedIndices">
            <summary>
            Gets a collection that contains the zero-based indexes of all currently selected items in the ListBox.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.SelectedIndices"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.SelectedItem">
            <summary>
            Gets or sets the currently selected item in the ListBox.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.SelectedItem"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.SelectedItems">
            <summary>
            Gets a collection containing the currently selected items in the ListBox.
            Wraps the <see cref="P:System.Windows.Forms.ListBox.SelectedItems"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.SelectedIndexChangedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.ListBoxBaseControl.SelectedIndexChanged"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.MeasureItemEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.ListBoxBaseControl.MeasureItem"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxBaseControl.DrawItemEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.ListBoxBaseControl.DrawItem"/> event.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ListBoxBaseControl.AttachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListBoxBaseControl.DetachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListBoxBaseControl.FillData(FastReport.Data.DataSourceBase,FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListBoxBaseControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListBoxBaseControl.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            This method fires the <b>SelectedIndexChanged</b> event and the script code connected to the <b>SelectedIndexChangedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.ListBoxBaseControl.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
            <summary>
            This method fires the <b>MeasureItem</b> event and the script code connected to the <b>MeasureItemEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.ListBoxBaseControl.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            This method fires the <b>DrawItem</b> event and the script code connected to the <b>DrawItemEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="T:FastReport.Dialog.LabelControl">
            <summary>
            Represents a standard Windows label.
            Wraps the <see cref="T:System.Windows.Forms.Label"/> control.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.LabelControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.LabelControl.Label">
            <summary>
            Gets an internal <b>Label</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.LabelControl.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            Wraps the <see cref="P:System.Windows.Forms.Label.AutoSize"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.LabelControl.TextAlign">
            <summary>
            Gets or sets the alignment of text in the label.
            Wraps the <see cref="P:System.Windows.Forms.Label.TextAlign"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.LabelControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.LabelControl.#ctor">
            <summary>
            Initializes a new instance of the <b>LabelControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.GridControl">
            <summary>
            Displays data in a customizable grid.
            Wraps the <see cref="T:System.Windows.Forms.DataGridView"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.BackColor">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.ForeColor">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.Text">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.GridControl.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.GridControl.DataGridView">
            <summary>
            Gets an internal <b>DataGridView</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.DataSource">
            <summary>
            Gets or sets the data source that the DataGridView is displaying data for.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.AllowUserToAddRows">
            <summary>
            Gets or sets a value indicating whether the option to add rows is displayed to the user.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.AllowUserToDeleteRows">
            <summary>
            Gets or sets a value indicating whether the user is allowed to delete rows from the DataGridView.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.AlternatingRowsDefaultCellStyle">
            <summary>
            Gets or sets the default cell style applied to odd-numbered rows of the DataGridView.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.AutoSizeColumnsMode">
            <summary>
            Gets or sets a value indicating how column widths are determined.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.AutoSizeRowsMode">
            <summary>
            Gets or sets a value indicating how row heights are determined.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.BackgroundColor">
            <summary>
            Gets or sets the background color of the DataGridView.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.BackgroundColor"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.BorderStyle">
            <summary>
            Gets or sets the border style for the DataGridView.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.BorderStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.CellBorderStyle">
            <summary>
            Gets the cell border style for the DataGridView.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.CellBorderStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.ColumnHeadersBorderStyle">
            <summary>
            Gets the border style applied to the column headers.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.ColumnHeadersDefaultCellStyle">
            <summary>
            Gets or sets the default column header style.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.ColumnHeadersHeight">
            <summary>
            Gets or sets the height, in pixels, of the column headers row.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.ColumnHeadersHeightSizeMode">
            <summary>
            Gets or sets a value indicating whether the height of the column headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.ColumnHeadersVisible">
            <summary>
            Gets or sets a value indicating whether the column header row is displayed.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.Columns">
            <summary>
            Gets the collection of <see cref="T:FastReport.Dialog.GridControlColumn"/> objects that represents the grid columns.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.DefaultCellStyle">
            <summary>
            Gets or sets the default cell style to be applied to the cells in the DataGridView if no other cell style properties are set.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.GridColor">
            <summary>
            Gets or sets the color of the grid lines separating the cells of the DataGridView.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.GridColor"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the user is allowed to select more than one cell, row, or column of the DataGridView at a time.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.MultiSelect"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.ReadOnly">
            <summary>
            Gets a value indicating whether the user can edit the cells of the DataGridView control.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.ReadOnly"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.RowHeadersBorderStyle">
            <summary>
            Gets or sets the border style of the row header cells.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.RowHeadersDefaultCellStyle">
            <summary>
            Gets or sets the default style applied to the row header cells.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.RowHeadersVisible">
            <summary>
            Gets or sets a value indicating whether the column that contains row headers is displayed.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.RowHeadersWidth">
            <summary>
            Gets or sets the width, in pixels, of the column that contains the row headers.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidth"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.RowHeadersWidthSizeMode">
            <summary>
            Gets or sets a value indicating whether the width of the row headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.RowsDefaultCellStyle">
            <summary>
            Gets or sets the default style applied to the row cells of the DataGridView.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.ScrollBars">
            <summary>
            Gets or sets the type of scroll bars to display for the DataGridView control.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.ScrollBars"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControl.SelectionMode">
            <summary>
            Gets or sets a value indicating how the cells of the DataGridView can be selected.
            Wraps the <see cref="P:System.Windows.Forms.DataGridView.SelectionMode"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.GridControl.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.Clear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.InitializeControl">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.FinalizeControl">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControl.#ctor">
            <summary>
            Initializes a new instance of the <b>GridControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.DialogPage">
            <summary>
            Represents the special kind of report page that wraps the <see cref="T:System.Windows.Forms.Form"/>
            and used to display dialog forms.
            </summary>
            <remarks>
            Use the <see cref="P:FastReport.Dialog.DialogPage.Controls"/> property to add/remove controls to/from a dialog form.
            <para/>If you set the <b>Visible</b> property to <b>false</b>, this dialog form will be
            skippen when you run a report.
            </remarks>
            <example>This example shows how to create a dialog form with one button in code.
            <code>
            DialogPage form = new DialogPage();
            // set the width and height in pixels
            form.Width = 200;
            form.Height = 200;
            form.Name = "Form1";
            // create a button
            ButtonControl button = new ButtonControl();
            button.Location = new Point(20, 20);
            button.Size = new Size(75, 25);
            button.Text = "The button";
            // add the button to the form
            form.Controls.Add(button);
            </code>
            </example>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.Left">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.SnapSize">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.Top">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.DrawSelection(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.GetPageDesignerType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.HandleDoubleClick">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.HandleMouseHover(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.SetDefaults">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.DialogPage.Load">
            <summary>
            Occurs before a form is displayed for the first time.
            Wraps the <see cref="E:System.Windows.Forms.Form.Load"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogPage.FormClosed">
            <summary>
            Occurs after the form is closed.
            Wraps the <see cref="E:System.Windows.Forms.Form.FormClosed"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogPage.FormClosing">
            <summary>
            Occurs before the form is closed.
            Wraps the <see cref="E:System.Windows.Forms.Form.FormClosing"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogPage.Shown">
            <summary>
            Occurs whenever the form is first displayed.
            Wraps the <see cref="E:System.Windows.Forms.Form.Shown"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogPage.Resize">
            <summary>
            Occurs when the form is resized.
            Wraps the <see cref="E:System.Windows.Forms.Control.Resize"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogPage.Paint">
            <summary>
            Occurs when the form is redrawn.
            Wraps the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.Form">
            <summary>
            Gets an internal <b>Form</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.ActiveInWeb">
            <summary>
            Gets or sets an active state in Web application.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.AcceptButton">
            <summary>
            Gets or sets the button on the form that is clicked when the user presses the ENTER key.
            Wraps the <see cref="P:System.Windows.Forms.Form.AcceptButton"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.CancelButton">
            <summary>
            Gets or sets the button control that is clicked when the user presses the ESC key.
            Wraps the <see cref="P:System.Windows.Forms.Form.CancelButton"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.BackColor">
            <summary>
            Gets or sets the background color for the form.
            Wraps the <see cref="P:System.Windows.Forms.Form.BackColor"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            Wraps the <see cref="P:System.Windows.Forms.Control.Font"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.FormBorderStyle">
            <summary>
            Gets or sets the border style of the form.
            Wraps the <see cref="P:System.Windows.Forms.Form.FormBorderStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.RightToLeft">
            <summary>
            Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.
            Wraps the <see cref="P:System.Windows.Forms.Control.RightToLeft"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.Text">
            <summary>
            Gets or sets the text associated with this form.
            Wraps the <see cref="P:System.Windows.Forms.Form.Text"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.LoadEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogPage.Load"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.FormClosedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogPage.FormClosed"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.FormClosingEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogPage.FormClosing"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.ShownEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogPage.Shown"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.ResizeEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogPage.Resize"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.PaintEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogPage.Paint"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.Controls">
            <summary>
            Gets the collection of controls contained within the form.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.Height">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogPage.ClientSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.ShowDialog">
            <summary>
            Shows the form as a modal dialog box with the currently active window set as its owner.
            Wraps the <see cref="M:System.Windows.Forms.Form.ShowDialog"/> method.
            </summary>
            <returns>One of the <b>DialogResult</b> values.</returns>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.OnLoad(System.EventArgs)">
            <summary>
            This method fires the <b>Load</b> event and the script code connected to the <b>LoadEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            This method fires the <b>FormClosed</b> event and the script code connected to the <b>FormClosedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This method fires the <b>FormClosing</b> event and the script code connected to the <b>FormClosingEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.OnShown(System.EventArgs)">
            <summary>
            This method fires the <b>Shown</b> event and the script code connected to the <b>ShownEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.OnResize(System.EventArgs)">
            <summary>
            This method fires the <b>Resize</b> event and the script code connected to the <b>ResizeEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method fires the <b>Paint</b> event and the script code connected to the <b>PaintEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogPage.#ctor">
            <summary>
            Initializes a new instance of the <b>DialogPage</b> class. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.DialogControl">
            <summary>
            Base class for all dialog controls such as <b>ButtonControl</b>, <b>TextBoxControl</b>.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.ShouldSerializeBackColor">
            <summary>
            Determines whether is necessary to serialize the <b>BackColor</b> property.
            </summary>
            <returns><b>true</b> if serialization is necessary.</returns>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.ShouldSerializeCursor">
            <summary>
            Determines whether is necessary to serialize the <b>Cursor</b> property.
            </summary>
            <returns><b>true</b> if serialization is necessary.</returns>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.ShouldSerializeForeColor">
            <summary>
            Determines whether is necessary to serialize the <b>ForeColor</b> property.
            </summary>
            <returns><b>true</b> if serialization is necessary.</returns>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.DrawSelectionPoint(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Brush,System.Single,System.Single)">
            <summary>
            Draws the selection point.
            </summary>
            <param name="g"><b>Graphics</b> object to draw on.</param>
            <param name="p"><see cref="T:System.Drawing.Pen"/> object.</param>
            <param name="b"><see cref="T:System.Drawing.Brush"/> object.</param>
            <param name="x">Left coordinate.</param>
            <param name="y">Top coordinate.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.CheckParent(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.DrawSelection(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.InvokeEditor">
            <summary>
            Creates the empty event handler for the <b>ClickEvent</b> event in the report's script.
            </summary>
            <returns><b>true</b> if event handler was created successfully.</returns>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.Click">
            <summary>
            Occurs when the control is clicked.
            Wraps the <see cref="E:System.Windows.Forms.Control.Click"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.DoubleClick">
            <summary>
            Occurs when the control is double-clicked.
            Wraps the <see cref="E:System.Windows.Forms.Control.DoubleClick"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.Enter">
            <summary>
            Occurs when the control is entered.
            Wraps the <see cref="E:System.Windows.Forms.Control.Enter"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.Leave">
            <summary>
            Occurs when the input focus leaves the control.
            Wraps the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.KeyDown">
            <summary>
            Occurs when a key is pressed while the control has focus.
            Wraps the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.KeyPress">
            <summary>
            Occurs when a key is pressed while the control has focus.
            Wraps the <see cref="E:System.Windows.Forms.Control.KeyPress"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.KeyUp">
            <summary>
            Occurs when a key is released while the control has focus.
            Wraps the <see cref="E:System.Windows.Forms.Control.KeyUp"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.MouseDown">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is pressed.
            Wraps the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the control.
            Wraps the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.MouseUp">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is released.
            Wraps the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.MouseEnter">
            <summary>
            Occurs when the mouse pointer enters the control.
            Wraps the <see cref="E:System.Windows.Forms.Control.MouseEnter"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.MouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the control.
            Wraps the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.Resize">
            <summary>
            Occurs when the control is resized.
            Wraps the <see cref="E:System.Windows.Forms.Control.Resize"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.TextChanged">
            <summary>
            Occurs when the Text property value changes.
            Wraps the <see cref="E:System.Windows.Forms.Control.TextChanged"/> event.
            </summary>
        </member>
        <member name="E:FastReport.Dialog.DialogControl.Paint">
            <summary>
            Occurs when the control is redrawn.
            Wraps the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Control">
            <summary>
            Gets an internal <b>Control</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.BackColor">
            <summary>
            Gets or sets the background color for the control.
            Wraps the <see cref="P:System.Windows.Forms.Control.BackColor"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Cursor">
            <summary>
            Gets or sets the cursor that is displayed when the mouse pointer is over the control.
            Wraps the <see cref="P:System.Windows.Forms.Control.Cursor"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            Wraps the <see cref="P:System.Windows.Forms.Control.Enabled"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            Wraps the <see cref="P:System.Windows.Forms.Control.Font"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            Wraps the <see cref="P:System.Windows.Forms.Control.ForeColor"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.RightToLeft">
            <summary>
            Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.
            Wraps the <see cref="P:System.Windows.Forms.Control.RightToLeft"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.TabIndex">
            <summary>
            Gets or sets the tab order of the control within its container.
            Wraps the <see cref="P:System.Windows.Forms.Control.TabIndex"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.
            Wraps the <see cref="P:System.Windows.Forms.Control.TabStop"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Text">
            <summary>
            Gets or sets the text associated with this control.
            Wraps the <see cref="P:System.Windows.Forms.Control.Text"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Dock">
            <summary>
            Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.
            Wraps the <see cref="P:System.Windows.Forms.Control.Dock"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Anchor">
            <summary>
            Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.
            Wraps the <see cref="P:System.Windows.Forms.Control.Anchor"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Visible">
            <summary>
            Gets or sets a value indicating whether the control is displayed.
            Wraps the <see cref="P:System.Windows.Forms.Control.Visible"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.BindableProperty">
            <summary>
            Gets or sets a property that returns actual data contained in a control. This value is used
            in the "Data" window.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.ClickEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.Click"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.DoubleClickEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.DoubleClick"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.EnterEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.Enter"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.LeaveEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.Leave"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.KeyDownEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.KeyDown"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.KeyPressEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.KeyPress"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.KeyUpEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.KeyUp"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.MouseDownEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.MouseDown"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.MouseMoveEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.MouseMove"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.MouseUpEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.MouseUp"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.MouseEnterEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.MouseEnter"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.MouseLeaveEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.MouseLeave"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.ResizeEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.Resize"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.TextChangedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.TextChanged"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.PaintEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DialogControl.Paint"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Left">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Top">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogControl.Height">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnEnabledChanged">
            <summary>
            Called when the control's Enabled state changed.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.AttachEvents">
            <summary>
            Attaches <b>Control</b> events to its event handlers.
            </summary>
            <remarks>
            Override this method if your custom control has own events.
            </remarks>
            <example>See the example of <b>AttachEvents</b> implementation used in the <b>CheckBoxControl</b>:
            <code>
            protected override void AttachEvents()
            {
              base.AttachEvents();
              CheckBox.CheckedChanged += new EventHandler(CheckBox_CheckedChanged);
            }
            
            private void CheckBox_CheckedChanged(object sender, EventArgs e)
            {
              if (CheckedChanged != null)
                CheckedChanged(this, e);
              InvokeEvent(CheckedChangedEvent, e);
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.DetachEvents">
            <summary>
            Detaches <b>Control</b> events from its event handlers.
            </summary>
            <remarks>
            Override this method if your custom control has own events. In this method, you should
            detach control's events that were attached in the <see cref="M:FastReport.Dialog.DialogControl.AttachEvents"/> method.
            </remarks>
            <example>See the example of <b>DetachEvents</b> implementation used in the <b>CheckBoxControl</b>:
            <code>
            protected override void DetachEvents()
            {
              base.DetachEvents();
              CheckBox.CheckedChanged -= new EventHandler(CheckBox_CheckedChanged);
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.SetParent(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.InitializeControl">
            <summary>
            Initializes the control before display it in the dialog form.
            </summary>
            <remarks>
            This method is called when report is run.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.FinalizeControl">
            <summary>
            Finalizes the control after its parent form is closed.
            </summary>
            <remarks>
            This method is called when report is run.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.Hide">
            <summary>
            Conceals the control from the user.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.Show">
            <summary>
            Displays the control to the user.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnClick(System.EventArgs)">
            <summary>
            This method fires the <b>Click</b> event and the script code connected to the <b>ClickEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnDoubleClick(System.EventArgs)">
            <summary>
            This method fires the <b>DoubleClick</b> event and the script code connected to the <b>DoubleClickEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnEnter(System.EventArgs)">
            <summary>
            This method fires the <b>Enter</b> event and the script code connected to the <b>EnterEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnLeave(System.EventArgs)">
            <summary>
            This method fires the <b>Leave</b> event and the script code connected to the <b>LeaveEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method fires the <b>KeyDown</b> event and the script code connected to the <b>KeyDownEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            This method fires the <b>KeyPress</b> event and the script code connected to the <b>KeyPressEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method fires the <b>KeyUp</b> event and the script code connected to the <b>KeyUpEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method fires the <b>MouseDown</b> event and the script code connected to the <b>MouseDownEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method fires the <b>MouseMove</b> event and the script code connected to the <b>MouseMoveEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method fires the <b>MouseUp</b> event and the script code connected to the <b>MouseUpEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnMouseEnter(System.EventArgs)">
            <summary>
            This method fires the <b>MouseEnter</b> event and the script code connected to the <b>MouseEnterEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnMouseLeave(System.EventArgs)">
            <summary>
            This method fires the <b>MouseLeave</b> event and the script code connected to the <b>MouseLeaveEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnResize(System.EventArgs)">
            <summary>
            This method fires the <b>Resize</b> event and the script code connected to the <b>ResizeEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnTextChanged(System.EventArgs)">
            <summary>
            This method fires the <b>TextChanged</b> event and the script code connected to the <b>TextChangedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DialogControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method fires the <b>Paint</b> event and the script code connected to the <b>PaintEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="T:FastReport.Dialog.DialogComponentBase">
            <summary>
            Base class for all dialog components.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogComponentBase.Left">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogComponentBase.Top">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogComponentBase.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogComponentBase.Height">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DialogComponentBase.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogComponentBase.Size">
            <summary>
            Gets or sets the height and width of the control.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DialogComponentBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DialogComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <b>DialogComponentBase</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.DataSelectorControl">
            <summary>
            Represents the control with two lists (available items and selected items).
            </summary>
            <remarks>
            The control allows to select one or several items and then filter the datasource which it is connected to.
            All you need is to setup the <b>DataColumn</b> property.
            </remarks>
        </member>
        <member name="P:FastReport.Dialog.DataSelectorControl.AutoFill">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DataSelectorControl.AutoFilter">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DataSelectorControl.Sorted">
            <summary>
            Gets or sets a value indicating that the items must be sorted.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DataSelectorControl.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Dialog.DataSelectorControl.Height">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DataSelectorControl.FillData(FastReport.Data.DataSourceBase,FastReport.Data.Column)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DataSelectorControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DataSelectorControl.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DataSelectorControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DataSelectorControl.#ctor">
            <summary>
            Initializes a new instance of the <b>DataSelectorControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.DateTimePickerControl">
            <summary>
            Represents a Windows control that allows the user to select a date and a time and to display the date and time with a specified format.
            Wraps the <see cref="T:System.Windows.Forms.DateTimePicker"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.Text">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DateTimePickerControl.ShouldSerializeBackColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DateTimePickerControl.ShouldSerializeForeColor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DateTimePickerControl.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Dialog.DateTimePickerControl.ValueChanged">
            <summary>
            Occurs after the date has been changed.
            Wraps the <see cref="E:System.Windows.Forms.DateTimePicker.ValueChanged"/> event.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.DateTimePicker">
            <summary>
            Gets an internal <b>DateTimePicker</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.Checked">
            <summary>
            Gets or sets a value indicating whether the Value property has been set with a valid date/time value and the displayed value is able to be updated.
            Wraps the <see cref="P:System.Windows.Forms.DateTimePicker.Checked"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.CustomFormat">
            <summary>
            Gets or sets the custom date/time format string.
            Wraps the <see cref="P:System.Windows.Forms.DateTimePicker.CustomFormat"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.DropDownAlign">
            <summary>
            Gets or sets the alignment of the drop-down calendar on the DateTimePicker control.
            Wraps the <see cref="P:System.Windows.Forms.DateTimePicker.DropDownAlign"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.Format">
            <summary>
            Gets or sets the format of the date and time displayed in the control.
            Wraps the <see cref="P:System.Windows.Forms.DateTimePicker.Format"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.MaxDate">
            <summary>
            Gets or sets the maximum date and time that can be selected in the control.
            Wraps the <see cref="P:System.Windows.Forms.DateTimePicker.MaxDate"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.MinDate">
            <summary>
            Gets or sets the minimum date and time that can be selected in the control.
            Wraps the <see cref="P:System.Windows.Forms.DateTimePicker.MinDate"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.ShowCheckBox">
            <summary>
            Gets or sets a value indicating whether a check box is displayed to the left of the selected date.
            Wraps the <see cref="P:System.Windows.Forms.DateTimePicker.ShowCheckBox"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.ShowUpDown">
            <summary>
            Gets or sets a value indicating whether a spin button control (also known as an up-down control) is used to adjust the date/time value.
            Wraps the <see cref="P:System.Windows.Forms.DateTimePicker.ShowUpDown"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.Value">
            <summary>
            Gets or sets the date/time value assigned to the control.
            Wraps the <see cref="P:System.Windows.Forms.DateTimePicker.Value"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DateTimePickerControl.ValueChangedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DateTimePickerControl.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DateTimePickerControl.AttachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DateTimePickerControl.DetachEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DateTimePickerControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DateTimePickerControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DateTimePickerControl.OnValueChanged(System.EventArgs)">
            <summary>
            This method fires the <b>ValueChanged</b> event and the script code connected to the <b>ValueChangedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DateTimePickerControl.#ctor">
            <summary>
            Initializes a new instance of the <b>DateTimePickerControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.GridControlColumn">
            <summary>
            Represents the <see cref="T:FastReport.Dialog.GridControl"/>'s column.
            Wraps the <see cref="T:System.Windows.Forms.DataGridViewTextBoxColumn"/> class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControlColumn.AutoSizeMode">
            <summary>
            Gets or sets the mode by which the column automatically adjusts its width.
            Wraps the <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControlColumn.DataColumn">
            <summary>
            Gets or sets the data column attached to this column.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControlColumn.HeaderText">
            <summary>
            Gets or sets the caption text on the column's header cell.
            Wraps the <see cref="P:System.Windows.Forms.DataGridViewColumn.HeaderText"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControlColumn.DefaultCellStyle">
            <summary>
            Gets or sets the column's default cell style.
            Wraps the <see cref="P:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControlColumn.FillWeight">
            <summary>
            Gets or sets a value that represents the width of the column when it is in fill mode relative to the widths of other fill-mode columns in the control.
            Wraps the <see cref="P:System.Windows.Forms.DataGridViewColumn.FillWeight"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControlColumn.Width">
            <summary>
            Gets or sets the current width of the column.
            Wraps the <see cref="P:System.Windows.Forms.DataGridViewColumn.Width"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControlColumn.Visible">
            <summary>
            Gets or sets a value indicating whether the column is visible.
            Wraps the <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControlColumn.Name">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControlColumn.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.GridControlColumn.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControlColumn.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControlColumn.#ctor">
            <summary>
            Initializes a new instance of the <b>GridControlColumn</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.GridControlColumnCollection">
            <summary>
            Represents the collection of <b>GridControl</b> columns.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GridControlColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets a column.
            </summary>
            <param name="index">The index of a column in this collection.</param>
            <returns>The column with specified index.</returns>
        </member>
        <member name="M:FastReport.Dialog.GridControlColumnCollection.OnInsert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControlColumnCollection.OnRemove(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.GridControlColumnCollection.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the collection.
            </summary>
            <param name="writer">Writer object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.GridControlColumnCollection.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the collection.
            </summary>
            <param name="reader">Reader object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.GridControlColumnCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Dialog.GridControlColumnCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.GridControlColumnCollection.#ctor(FastReport.Dialog.GridControl)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Dialog.GridControlColumnCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Dialog.RichTextBoxControl">
            <summary>
            Represents a Windows rich text box control.
            Wraps the <see cref="T:System.Windows.Forms.RichTextBox"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.RichTextBoxControl.RichTextBox">
            <summary>
            Gets an internal <b>RichTextBox</b>.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.RichTextBoxControl.Rtf">
            <summary>
            Gets or sets the text of the RichTextBox control, including all rich text format (RTF) codes.
            Wraps the <see cref="P:System.Windows.Forms.RichTextBox.Rtf"/> property.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.RichTextBoxControl.ScrollBars">
            <summary>
            Gets or sets the type of scroll bars to display in the RichTextBox control.
            Wraps the <see cref="P:System.Windows.Forms.RichTextBox.ScrollBars"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.RichTextBoxControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.RichTextBoxControl.LoadFile(System.String)">
            <summary>
            Loads rtf from a file.
            </summary>
            <param name="path">File to load from.</param>
        </member>
        <member name="M:FastReport.Dialog.RichTextBoxControl.LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Loads rtf from a stream using specified stream type.
            </summary>
            <param name="data">Stream to load from.</param>
            <param name="fileType">Type of a stream.</param>
        </member>
        <member name="M:FastReport.Dialog.RichTextBoxControl.LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Loads rtf from a file using specified stream type.
            </summary>
            <param name="path">File to load from.</param>
            <param name="fileType">Type of a stream.</param>
        </member>
        <member name="M:FastReport.Dialog.RichTextBoxControl.#ctor">
            <summary>
            Initializes a new instance of the <b>RichTextBoxControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.GroupBoxControl">
            <summary>
            Represents a Windows control that displays a frame around a group of controls with an optional caption.
            Wraps the <see cref="T:System.Windows.Forms.GroupBox"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.GroupBoxControl.GroupBox">
            <summary>
            Gets an internal <b>GroupBox</b>.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.GroupBoxControl.#ctor">
            <summary>
            Initializes a new instance of the <b>GroupBoxControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.DataFilterBaseControl">
            <summary>
            The base class for all controls that support the data filtering feature.
            </summary>
            <remarks>
            <para/>The data filtering allows you to bind the control to a <see cref="P:FastReport.Dialog.DataFilterBaseControl.DataColumn"/>. 
            It will be automatically filled by data from the datasource's column. When you select/check 
            item(s) and close the dialog with OK button, it will filter the datasource according to your selection.
            <para/>You can set the filter operation using the <see cref="P:FastReport.Dialog.DataFilterBaseControl.FilterOperation"/> property.
            </remarks>
        </member>
        <member name="E:FastReport.Dialog.DataFilterBaseControl.DataLoaded">
            <summary>
            Occurs after the control is filled with data.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DataFilterBaseControl.AutoFill">
            <summary>
            Gets or sets a value that determines whether to fill the control with data automatically.
            </summary>
            <remarks>
            The default value of this property is <b>true</b>. If you set it to <b>false</b>,
            you need to call the <see cref="M:FastReport.Dialog.DataFilterBaseControl.FillData"/> method manually.
            </remarks>
        </member>
        <member name="P:FastReport.Dialog.DataFilterBaseControl.AutoFilter">
            <summary>
            Gets or sets a value that determines whether to filter the datasource automatically 
            when you close the dialog by OK button.
            </summary>
            <remarks>
            The default value of this property is <b>true</b>. If you set it to <b>false</b>,
            you need to call the <see cref="M:FastReport.Dialog.DataFilterBaseControl.FilterData"/> method manually.
            </remarks>
        </member>
        <member name="P:FastReport.Dialog.DataFilterBaseControl.DataColumn">
            <summary>
            Gets or sets a data column name that will be used to fill this control with data.
            </summary>
            <remarks>
            This property must contain both datasource name and column name, for example:
            <b>Orders.OrderID</b>. You also may use relations, for example: <b>Orders.Customers.CompanyName</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Dialog.DataFilterBaseControl.ReportParameter">
            <summary>
            Gets or sets name of report parameter which value will be set to value contained 
            in this control when you close the dialog.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DataFilterBaseControl.FilterOperation">
            <summary>
            Gets or sets a value that specifies the filter operation.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DataFilterBaseControl.DetailControl">
            <summary>
            Gets or sets the detail control used in cascaded filtering.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DataFilterBaseControl.DataLoadedEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Dialog.DataFilterBaseControl.DataLoaded"/> event.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.FillData(FastReport.Data.DataSourceBase,FastReport.Data.Column)">
            <summary>
            Fills the control with data.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="column">The data column.</param>
            <example>Here is the example of <b>FillData</b> method implementation:
            <code>
            protected override void FillData(DataSourceBase dataSource, Column column)
            {
              Items.Clear();
              dataSource.First();
              while (dataSource.HasMoreRows)
              {
                Items.Add(dataSource[column].ToString());
                dataSource.Next();
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.GetListOfData(FastReport.Data.DataSourceBase,FastReport.Data.Column)">
            <summary>
            Returns list of values that can be used to fill control with data.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="column">The data column.</param>
            <returns>List of string values.</returns>
            <remarks>
            This method is used by the <b>FillData</b> method to fill list-type controls
            such as ListBox with data. The result list contains distinct values.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.GetValue">
            <summary>
            Returns value entered in the control.
            </summary>
            <returns>The value of type supported by this control.</returns>
            <remarks>
            This method must return a value entered by the user. For example, TextBox 
            control must return its Text property value. If this control supports multi-selection,
            return selected values in an array, for example string[] array for CheckedListBox.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.OnFilterChanged">
            <summary>
            Handles the cascaded filter internal logic.
            </summary>
            <remarks>
            This method should be called in your custom dialog control that supports data filtering.
            Call it when the value in your control is changed.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.OnEnabledChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.InitializeControl">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.FillData">
            <summary>
            Fills the control with data from a datasource.
            </summary>
            <remarks>
            Call this method if you set the <see cref="P:FastReport.Dialog.DataFilterBaseControl.AutoFill"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.FillData(FastReport.Data.DataSourceBase)">
            <summary>
            Fills the control with data from a datasource.
            </summary>
            <param name="parentData">Parent data source</param>
            <remarks>
            Call this method if you need to implement cascaded filter. In the <b>parentData</b> parameter,
            pass the parent data source that will be used to set up master-detail relationship with
            data source in this control.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.FillData(FastReport.Dialog.DataFilterBaseControl)">
            <summary>
            Fills the control with data from a datasource.
            </summary>
            <param name="parentControl">Parent control</param>
            <remarks>
            Call this method if you need to implement cascaded filter. In the <b>parentControl</b> parameter,
            pass the parent control which performs filtering on a parent data source.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.FilterData">
            <summary>
            Applies the filter to a datasource.
            </summary>
            <remarks>
            Call this method if you set the <see cref="P:FastReport.Dialog.DataFilterBaseControl.AutoFilter"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.ResetFilter">
            <summary>
            Resets the filter set by this control.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.OnDataLoaded(System.EventArgs)">
            <summary>
            This method fires the <b>DataLoaded</b> event and the script code connected to the <b>DataLoadedEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Dialog.DataFilterBaseControl.#ctor">
            <summary>
            Initializes a new instance of the <b>DataFilterBaseControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Dialog.DialogComponentCollection">
            <summary>
            Represents the collection of dialog components.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.DialogComponentCollection.Item(System.Int32)">
            <summary>
            Gets or sets a component.
            </summary>
            <param name="index">The index of a component in this collection.</param>
            <returns>The component with specified index.</returns>
        </member>
        <member name="M:FastReport.Dialog.DialogComponentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Dialog.DialogComponentCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.DialogComponentCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Dialog.DialogComponentCollection"/> class with default settings.
            </summary>
            <param name="owner">The owner of this collection.</param>
        </member>
        <member name="T:FastReport.Dialog.ListBoxControl">
            <summary>
            Represents a Windows control to display a list of items.
            Wraps the <see cref="T:System.Windows.Forms.ListBox"/> control.
            </summary>
        </member>
        <member name="P:FastReport.Dialog.ListBoxControl.ListBox">
            <summary>
            Gets an internal <b>ListBox</b>.
            </summary>
        </member>
        <member name="M:FastReport.Dialog.ListBoxControl.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListBoxControl.OnSelectedIndexChanged(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Dialog.ListBoxControl.#ctor">
            <summary>
            Initializes a new instance of the <b>ListBoxControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Forms.DxfExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Dxf.DxfExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DxfExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.DxfExportForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DxfExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.DxfExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.DxfExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Forms.DxfExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DxfExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.DxfExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ExportsOptionsEditorForm.#ctor">
            <summary>
            Editor for rearrangement Exports Menu elements
            </summary>
        </member>
        <member name="M:FastReport.Forms.ExportsOptionsEditorForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Forms.ExportsOptionsEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ExportsOptionsEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ExportsOptionsEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.FastM1nesweeperForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.FastM1nesweeperForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.FastM1nesweeperForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:FastReport.Forms.FormsFonts.#ctor">
            
        </member>
        <member name="F:FastReport.Forms.FormsFonts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.FormsFonts.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.FormsFonts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.MessageBoxWithEditorForm">
            <summary>
            The form for message box with text editor
            </summary>
        </member>
        <member name="P:FastReport.Forms.MessageBoxWithEditorForm.InnerText">
            <summary>
            Gets or sets text
            </summary>
        </member>
        <member name="M:FastReport.Forms.MessageBoxWithEditorForm.#ctor">
            <summary>
            Defualt constructor
            </summary>
        </member>
        <member name="M:FastReport.Forms.MessageBoxWithEditorForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Forms.MessageBoxWithEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.MessageBoxWithEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.MessageBoxWithEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.JsonEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.JsonEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.JsonEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.Excel2003ExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.Excel2003ExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.Excel2003ExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.CsvExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Csv.CSVExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.CsvExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.CsvExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.CsvExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.CsvExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.CsvExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.CsvExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.CsvExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.CsvExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.DbfExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Dbf.DBFExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DbfExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.DbfExportForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DbfExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.DbfExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.DbfExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Forms.DbfExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DbfExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.DbfExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.HTMLExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Html.HTMLExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.HTMLExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.HTMLExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.HTMLExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.HTMLExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.HTMLExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.HTMLExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.HTMLExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.HTMLExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.MHTExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Mht.MHTExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.MHTExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.MHTExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.MHTExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.MHTExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.MHTExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.MHTExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.MHTExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.MHTExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.ImageExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Image.ImageExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ImageExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.ImageExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.ImageExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.ImageExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.ImageExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.ImageExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ImageExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ImageExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.JsonExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Json.JsonExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.JsonExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.JsonExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.JsonExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.JsonExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.JsonExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.JsonExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.LaTeXExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.LaTeX.LaTeXExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.LaTeXExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.LaTeXExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.LaTeXExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.LaTeXExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.LaTeXExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.LaTeXExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.Word2007ExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.OoXML.Word2007Export"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.Word2007ExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.Word2007ExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.Word2007ExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.Word2007ExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.Word2007ExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.Word2007ExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.Word2007ExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.Word2007ExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.PowerPoint2007ExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.OoXML.PowerPoint2007Export"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PowerPoint2007ExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PowerPoint2007ExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PowerPoint2007ExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PowerPoint2007ExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.PowerPoint2007ExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PowerPoint2007ExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PowerPoint2007ExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PowerPoint2007ExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.XpsExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.OoXML.XPSExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.XpsExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.XpsExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.XpsExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.XpsExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.XpsExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.XpsExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.XpsExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.XpsExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.Excel2007ExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.OoXML.Excel2007Export"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.Excel2007ExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.Excel2007ExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.Excel2007ExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.Excel2007ExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.Excel2007ExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.Excel2007ExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.Excel2007ExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.Excel2007ExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.ZplExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Zpl.ZplExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ZplExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.ZplExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.ZplExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.ZplExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.ZplExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.ZplExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ZplExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ZplExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.ODFExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Odf.ODFExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ODFExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.ODFExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.ODFExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.ODFExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.ODFExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.ODFExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ODFExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ODFExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.PDFExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Pdf.PDFExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PDFExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PDFExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PDFExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PDFExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.PDFExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PDFExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PDFExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PDFExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.PPMLExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Ppml.PPMLExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PPMLExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PPMLExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PPMLExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PPMLExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.PPMLExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PPMLExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PPMLExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PPMLExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.PSExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.PS.PSExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PSExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PSExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PSExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.PSExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.PSExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PSExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PSExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PSExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.RTFExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.RichText.RTFExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.RTFExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.RTFExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.RTFExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.RTFExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.RTFExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.RTFExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.RTFExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.RTFExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.SVGExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Svg.SVGExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.SVGExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.SVGExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.SVGExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.SVGExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.SVGExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.SVGExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.SVGExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.SVGExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.TextExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Text.TextExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.TextExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.TextExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.TextExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.TextExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.TextExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.TextExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.TextExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.XAMLExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.XAML.XAMLExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.XAMLExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.XAMLExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.XAMLExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.XAMLExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.XAMLExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.XAMLExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.XAMLExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.XAMLExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.XMLExportForm">
            <summary>
            Form for <see cref="T:FastReport.Export.Xml.XMLExport"/>.
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Forms.XMLExportForm.Init(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.XMLExportForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.XMLExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.XMLExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.XMLExportForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.XMLExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.XMLExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.XMLExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.BaseExportForm">
            <summary>
            Base form for all export options dialog forms.
            </summary>
        </member>
        <member name="P:FastReport.Forms.BaseExportForm.OpenAfterVisible">
            <summary>
            Represents the "Open after export" button visibility.
            </summary>
        </member>
        <member name="P:FastReport.Forms.BaseExportForm.Export">
            <summary>
            Gets a reference to the currently editing export filter.
            </summary>
        </member>
        <member name="M:FastReport.Forms.BaseExportForm.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.BaseExportForm.OnShown(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.BaseExportForm.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.BaseExportForm.Done">
            <summary>
            Called when editing is done.
            </summary>
            <remarks>
            Override this method to pass edited values from the dialog controls to the export filter.
            </remarks>
            <example>See the example of this method implementation that is used in the <b>ImageExport</b>.
            <code>
            protected override void Done()
            {
              base.Done();
              ImageExport imageExport = Export as ImageExport;
              imageExport.ImageFormat = (ImageExportFormat)cbxImageFormat.SelectedIndex;
              imageExport.Resolution = (int)udResolution.Value;
              imageExport.JpegQuality = (int)udQuality.Value;
              imageExport.SeparateFiles = cbSeparateFiles.Checked;
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Forms.BaseExportForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.BaseExportForm.Init(FastReport.Export.ExportBase)">
            <summary>
            Initializes controls with initial values.
            </summary>
            <param name="export">The export filter to edit.</param>
            <remarks>
            Override this method to pass values from the export filter to the dialog controls.
            </remarks>
            <example>See the example of this method implementation that is used in the <b>ImageExport</b>.
            <code>
            public override void Init(ExportBase export)
            {
              base.Init(export);
              ImageExport imageExport = Export as ImageExport;
              cbxImageFormat.SelectedIndex = (int)imageExport.ImageFormat;
              udResolution.Value = imageExport.Resolution;
              udQuality.Value = imageExport.JpegQuality;
              cbSeparateFiles.Checked = imageExport.SeparateFiles;
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Forms.BaseExportForm.ShowDialog(FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.BaseExportForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.BaseExportForm"/> class with default settings.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.BaseExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.BaseExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseExportForm.gbPageRange">
            <summary>
            "Page Range" groupbox.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseExportForm.lblHint">
            <summary>
            "Page Numbers" label.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseExportForm.tbNumbers">
            <summary>
            "Page Numbers" textbox.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseExportForm.rbNumbers">
            <summary>
            "Page Numbers" radiobutton.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseExportForm.rbCurrent">
            <summary>
            "Current Page" radiobutton.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseExportForm.rbAll">
            <summary>
            "All Pages" radiobutton.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseExportForm.pcPages">
            <summary>
            PageControl.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseExportForm.panPages">
            <summary>
            Pages panel.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseExportForm.cbOpenAfter">
            <summary>
            "Open after export" checkbox.
            </summary>
        </member>
        <member name="F:FastReport.Forms.DataBandColumnEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DataBandColumnEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.DataBandColumnEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.SVGEditorAdvancedForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.SVGEditorAdvancedForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.SVGEditorAdvancedForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.SVGEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.SVGEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.SVGEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.DataViewForm">
            <summary>
            Represents a Windows Form used to show a table when View Data clicked on a DataSource.
            </summary>
        </member>
        <member name="P:FastReport.Forms.DataViewForm.Grid">
            <summary>
            Gets or sets the data grid.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DataViewForm.#ctor(FastReport.Data.DataSourceBase)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.DataViewForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.DataViewForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DataViewForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.DataViewForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.OutlineEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.OutlineEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.OutlineEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.SplashForm">
            <summary>
            Represents the Splash Screen showing during loading designer
            </summary>
        </member>
        <member name="M:FastReport.Forms.SplashForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.SplashForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Forms.SplashForm.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters mouse events.
            For internal use only.
            </summary>
        </member>
        <member name="F:FastReport.Forms.SplashForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.SplashForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.SplashForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.WelcomeForm">
            <summary>
            Represents the Welcome window displayed on the designer startup
            </summary>
        </member>
        <member name="M:FastReport.Forms.WelcomeForm.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.WelcomeForm"/> class.
            </summary>
            <param name="designer"></param>
        </member>
        <member name="F:FastReport.Forms.WelcomeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.WelcomeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.WelcomeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.LoadAutoSaveForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.LoadAutoSaveForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.LoadAutoSaveForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.SavingPageOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.SavingPageOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.SavingPageOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.AdvancedConnectionPropertiesForm">
            <summary>
            The "Advanced Connection Properties" form.
            </summary>
        </member>
        <member name="P:FastReport.Forms.AdvancedConnectionPropertiesForm.AdvancedProperties">
            <summary>
            Gets or sets the connection string builder which contains the connection properties.
            </summary>
        </member>
        <member name="M:FastReport.Forms.AdvancedConnectionPropertiesForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.AdvancedConnectionPropertiesForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.AdvancedConnectionPropertiesForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.AdvancedConnectionPropertiesForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.AdvancedConnectionPropertiesForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.AskLoginPasswordForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.AskLoginPasswordForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.AskLoginPasswordForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseReportWizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.BaseReportWizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.BaseReportWizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.CustomLabelForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.CustomLabelForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.CustomLabelForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.DialogPageOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DialogPageOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.DialogPageOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.ExceptionForm">
            <summary>
            Represents the FastReport exception form.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ExceptionForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Forms.ExceptionForm.#ctor(System.Exception)">
            <summary>
            Creates a new instance ofthe form.
            </summary>
            <param name="ex">The exception object which data to display in the form.</param>
        </member>
        <member name="F:FastReport.Forms.ExceptionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ExceptionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ExceptionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PluginsOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PluginsOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PluginsOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.GroupExpertForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.GroupExpertForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.GroupExpertForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.HyperlinkEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.HyperlinkEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.HyperlinkEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.LabelWizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.LabelWizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.LabelWizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PreviewPageSetupForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PreviewPageSetupForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PreviewPageSetupForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.ProgressForm">
            <summary>
            
            </summary>
        </member>
        <member name="P:FastReport.Forms.ProgressForm.Aborted">
            <summary>
            Gets Aborted state
            </summary>
        </member>
        <member name="M:FastReport.Forms.ProgressForm.ShowProgressMessage(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Forms.ProgressForm.#ctor(FastReport.Report)">
             <summary>
            
             </summary>
        </member>
        <member name="F:FastReport.Forms.ProgressForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ProgressForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ProgressForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.RichEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.RichEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.RichEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.SearchReplaceForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.SearchReplaceForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.SearchReplaceForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.SelectLanguageForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.SelectLanguageForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.SelectLanguageForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.StandardReportWizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.StandardReportWizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.StandardReportWizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.BarcodeEditorForm">
            <summary>
            Form for barcode editor
            </summary>
        </member>
        <member name="F:FastReport.Forms.BarcodeEditorForm.result">
            <summary>
            Generated text for barcode object
            </summary>
        </member>
        <member name="M:FastReport.Forms.BarcodeEditorForm.#ctor(System.String,FastReport.Report,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.BarcodeEditorForm"/> class.
            </summary>
            <param name="data">Text data for parsing</param>
            <param name="report">Report object for nodes</param>
            <param name="Brackets">Brackets symbols</param>
            <param name="isRichBarcode">Editor for rich barcode?</param>
        </member>
        <member name="F:FastReport.Forms.BarcodeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.BarcodeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.BarcodeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseWizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.BaseWizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.BaseWizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.AddNewItemForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.AddNewItemForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.AddNewItemForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.TotalEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.TotalEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.TotalEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.ExpressionEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ExpressionEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ExpressionEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.GridControlColumnsEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.GridControlColumnsEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.GridControlColumnsEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.AskPasswordForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.AskPasswordForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.AskPasswordForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.ConnectionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ConnectionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ConnectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.DataBandEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DataBandEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.DataBandEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.DataWizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DataWizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.DataWizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.FormatEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.FormatEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.FormatEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.GroupBandEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.GroupBandEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.GroupBandEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.HighlightEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.HighlightEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.HighlightEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PictureEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PictureEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PictureEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PictureEditorAdvancedForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PictureEditorAdvancedForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PictureEditorAdvancedForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PreviewForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PreviewForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PreviewForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PreviewSearchForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PreviewSearchForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PreviewSearchForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.RelationEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.RelationEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.RelationEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.ReportDataForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ReportDataForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ReportDataForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.ReportOptionsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ReportOptionsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ReportOptionsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.QueryWizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.QueryWizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.QueryWizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.TextEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.TextEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.TextEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.WatermarkEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.WatermarkEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.WatermarkEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BorderEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.BorderEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.BorderEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.BaseDialogForm">
            <summary>
            Base class for all dialog forms with two buttons, OK and Cancel. 
            </summary>
        </member>
        <member name="M:FastReport.Forms.BaseDialogForm.Localize">
            <summary>
            Localizes the dialog controls.
            </summary>
            <remarks>
            Use this method to set control's captions specific to the current locale.
            </remarks>
        </member>
        <member name="M:FastReport.Forms.BaseDialogForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Forms.BaseDialogForm"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseDialogForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.BaseDialogForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.BaseDialogForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseDialogForm.btnOk">
            <summary>
            The OK button.
            </summary>
        </member>
        <member name="F:FastReport.Forms.BaseDialogForm.btnCancel">
            <summary>
            The Cancel button.
            </summary>
        </member>
        <member name="F:FastReport.Forms.ConfigureBandsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.ConfigureBandsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.ConfigureBandsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.FillEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.FillEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.FillEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PageSetupForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PageSetupForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PageSetupForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.PrinterSetupForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.PrinterSetupForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.PrinterSetupForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.StringCollectionEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.StringCollectionEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.StringCollectionEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Forms.StyleEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Forms.StyleEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Forms.StyleEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Forms.DesignerOptionsPage">
            <summary>
            The base class for designer plugin's options page.
            </summary>
            <remarks>
            Use this class if you develop a designer plugin that may be configured in the 
            "View|Options..." menu. You need to implement an options page for your
            plugin and return it in the <b>IDesignerPlugin.GetOptionsPage</b> method.
            </remarks>
        </member>
        <member name="F:FastReport.Forms.DesignerOptionsPage.tc1">
            <summary>
            The <b>TabControl</b> control.
            </summary>
        </member>
        <member name="F:FastReport.Forms.DesignerOptionsPage.tab1">
            <summary>
            The <b>TabPage</b> control.
            </summary>
        </member>
        <member name="M:FastReport.Forms.DesignerOptionsPage.Init">
            <summary>
            Initializes controls on this options page.
            </summary>
            <remarks>
            Override this method to fill options page's controls with initial values.
            </remarks>
        </member>
        <member name="M:FastReport.Forms.DesignerOptionsPage.Done(System.Windows.Forms.DialogResult)">
            <summary>
            Finalizes the options page.
            </summary>
            <param name="result">The dialog result.</param>
            <remarks>
            Override this method to pass controls' values to the plugin. Do this if <b>result</b> is
            <b>DialogResult.OK</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Forms.DesignerOptionsPage.#ctor">
            <summary>
            Initializes a new instance of the <b>DesignerOptionsPage</b> class with default settings.
            </summary>
            <remarks>
            Usually you need to define another contructor which takes one parameter - the plugin.
            </remarks>
            <example>This example shows how to define own constructor which takes a plugin:
            <code>
            public DialogPageOptions(DialogPageDesigner pd) : base()
            {
              FPageDesigner = pd;
              InitializeComponent();
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.FastQueryBuilder.SelectCommand_From.ReadGroup(FastReport.FastQueryBuilder.SqlParser,FastReport.FastQueryBuilder.SqlToken@)">
            <summary>
            read current token, returns next
            </summary>
            <param name="parser"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.FastQueryBuilder.SelectCommand_From.ReadTable(FastReport.FastQueryBuilder.SqlParser,FastReport.FastQueryBuilder.SqlToken@)">
            <summary>
            read current token, returns next
            </summary>
            <param name="parser"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.FastQueryBuilder.SelectCommand_From.ReadField(FastReport.FastQueryBuilder.SqlParser,FastReport.FastQueryBuilder.SqlToken@)">
            <summary>
            ignore current token, read from next, returns current i.e not next
            </summary>
            <param name="parser"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.FastQueryBuilder.Field">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.FastQueryBuilder.Field.Name">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.FastQueryBuilder.Field.Alias">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.FastQueryBuilder.Field.Filter">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.FastQueryBuilder.Field.Group">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.FastQueryBuilder.Field.Order">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.FastQueryBuilder.Field.Func">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.FastQueryBuilder.Field.ToString">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.FastQueryBuilder.Link">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.FastQueryBuilder.Link.Editor">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.FastQueryBuilder.Link.Delete">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:FastReport.FastQueryBuilder.Link.Name">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:FastReport.FastQueryBuilder.InputBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.FastQueryBuilder.InputBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.FastQueryBuilder.InputBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.FastQueryBuilder.JoinEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.FastQueryBuilder.JoinEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.FastQueryBuilder.JoinEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.FastQueryBuilder.QueryDesigner.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.FastQueryBuilder.QueryDesigner.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.FastQueryBuilder.QueryDesigner.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.FastQueryBuilder.TableView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.FastQueryBuilder.TableView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.FastQueryBuilder.TableView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Engine.ReportEngine">
            <summary>
            Represents the report engine.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.ShowBand(FastReport.BandBase)">
            <summary>
            Shows band at the current position.
            </summary>
            <param name="band">Band to show.</param>
            <remarks>
            After the band is shown, the current position is advanced by the band's height.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.CurX">
            <summary>
            Gets or sets the current X offset.
            </summary>
            <remarks>
            This property specifies the X offset where the current band will be printed.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.CurY">
            <summary>
            Gets or sets the current Y offset.
            </summary>
            <remarks>
            This property specifies the Y offset where the current band will be printed.
            After the band is printed, this value is incremented by the band's height.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.CurColumn">
            <summary>
            Gets the index of currently printing column in the multi-column report.
            </summary>
            <remarks>
            This value is 0-based.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.CurPage">
            <summary>
            Gets or sets index of current prepared page the current band will print on.
            </summary>
            <remarks>
            Note: the page with specified index must exists. This property is used to print side-by-side
            subreports and Table object. Usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageWidth">
            <summary>
            Gets the current page width, in pixels.
            </summary>
            <remarks>
            This property returns a paper width minus left and right margins.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageHeight">
            <summary>
            Gets the current page height, in pixels.
            </summary>
            <remarks>
            This property returns a paper height minus top and bottom margins.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.UnlimitedHeight">
            <summary>
            Gets the value indicating whether the page has unlimited height.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.UnlimitedWidth">
            <summary>
            Gets the value indicating whether the page has unlimited width.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.UnlimitedHeightValue">
            <summary>
            Gets or sets the current height of unlimited page.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.UnlimitedWidthValue">
            <summary>
            Gets or sets the current width of unlimited page.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageFooterHeight">
            <summary>
            Gets the height of page footer (including all its child bands), in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.ColumnFooterHeight">
            <summary>
            Gets the height of column footer (including all its child bands), in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.FreeSpace">
            <summary>
            Gets the free space on the current page, in pixels.
            </summary>
            <remarks>
            This property returns the page height minus footers height minus <b>CurY</b> value.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageNo">
            <summary>
            Gets the current prepared page number.
            </summary>
            <remarks>
            This value is 1-based. The initial value (usually 1) is set in the Report.InitialPageNumber property.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.TotalPages">
            <summary>
            Gets the number of total pages in a prepared report.
            </summary>
            <remarks>
            To use this property, your report must be two-pass. Set the <see cref="P:FastReport.Report.DoublePass"/>
            property to <b>true</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageN">
            <summary>
            Gets the string that represents the current page number.
            </summary>
            <remarks>
            This property returns a locale-based value, for example: "Page 1".
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.PageNofM">
            <summary>
            Gets the string that represents the "Page N of M" number.
            </summary>
            <remarks>
            This property returns a locale-based value, for example: "Page 1 of 10".
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.RowNo">
            <summary>
            Gets the current row number of currently printing band.
            </summary>
            <remarks>
            This value is 1-based. It resets to 1 on each new group.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.AbsRowNo">
            <summary>
            Gets the running current row number of currently printing band.
            </summary>
            <remarks>
            This value is 1-based.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.Date">
            <summary>
            Gets the date of report start.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.FinalPass">
            <summary>
            Gets a value indicating whether the report is executing the final pass.
            </summary>
            <remarks>
            This property is <b>true</b> if report is one-pass, or if report is two-pass and
            the second pass is executing.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.FirstPass">
            <summary>
            Gets a value indicating whether the report is executing the first pass.
            </summary>
            <remarks>
            This property is <b>true</b> if report is one-pass, or if report is two-pass and
            the first pass is executing.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.HierarchyLevel">
            <summary>
            Gets a level of hierarchy when printing hierarchical bands.
            </summary>
            <remarks>
            The first level of hierarchy has 0 index.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.HierarchyRowNo">
            <summary>
            Gets the row number like "1.2.1" when printing hierarchical bands.
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.IsKeeping">
            <summary>
            Returns true of keeping is enabled
            </summary>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.KeepCurY">
            <summary>
            Returns keeping position
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.StartKeep">
            <summary>
            Starts the keep mechanism.
            </summary>
            <remarks>
            Use this method along with the <see cref="M:FastReport.Engine.ReportEngine.EndKeep"/> method if you want to keep
            several bands together. Call <b>StartKeep</b> method before printing the first band
            you want to keep, then call the <b>EndKeep</b> method after printing the last band you want to keep.
            </remarks>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.EndKeep">
            <summary>
            Ends the keep mechanism.
            </summary>
            <remarks>
            Use this method along with the <see cref="M:FastReport.Engine.ReportEngine.StartKeep"/> method if you want to keep
            several bands together. Call <b>StartKeep</b> method before printing the first band
            you want to keep, then call the <b>EndKeep</b> method after printing the last band you want to keep.
            </remarks>
        </member>
        <member name="P:FastReport.Engine.ReportEngine.OutlineXml">
            <summary>
            Gets xml containing outline nodes.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.AddOutline(System.String)">
            <summary>
            Creates a new outline element with specified text.
            </summary>
            <param name="text">Text of element.</param>
            <remarks>
            After you call this method, the element will be added to the current position in the outline.
            The next call to <b>AddOutline</b> will add new element as a child of this element.
            To shift the position, use the <see cref="M:FastReport.Engine.ReportEngine.OutlineRoot"/> or
            <see cref="M:FastReport.Engine.ReportEngine.OutlineUp">OutlineUp</see> methods.
            </remarks>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.OutlineRoot">
            <summary>
            Sets the current outline position to root.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.OutlineUp">
            <summary>
            Shifts the current outline position one level up.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.AddBookmark(System.String)">
            <summary>
            Creates a new bookmark with specified name at current position.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.GetBookmarkPage(System.String)">
            <summary>
            Gets a page number for the specified bookmark name.
            </summary>
            <param name="name">Name of bookmark.</param>
            <returns>Page number if bookmark with such name found; 0 otherwise.</returns>
            <remarks>
            Use this method to print the table of contents in your report. Normally it can be done
            using bookmarks.
            <note type="caution">
            You must set your report to double pass to use this method.
            </note>
            </remarks>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.ResetLogicalPageNumber">
            <summary>
            Resets the logical page numbers.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.ShiftLastPage">
            <summary>
            Called when the number of pages increased during DoublePass
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.StartNewPage">
            <summary>
            Starts a new page.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.StartNewColumn">
            <summary>
            Starts a new column.
            </summary>
        </member>
        <member name="M:FastReport.Engine.ReportEngine.ProcessObject(FastReport.TextObjectBase)">
            <summary>
            Processes the specified text object which <b>ProcessAt</b> property is set to <b>Custom</b>.
            </summary>
            <param name="obj">The text object to process.</param>
        </member>
        <member name="T:FastReport.Gauge.GaugeEditorForm">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.GaugeEditorForm.#ctor">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.GaugeEditorForm.#ctor(FastReport.Gauge.GaugeObject)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.GaugeEditorForm.Init">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.GaugeEditorForm.Localize">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.GaugeEditorForm.GaugeEditorForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <inheritdoc />
        </member>
        <member name="F:FastReport.Gauge.GaugeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing"><b>true</b> if managed resources should be disposed. Otherwise, <b>false</b>.</param>
        </member>
        <member name="T:FastReport.Gauge.Linear.LinearGauge">
            <summary>
            Represents a linear gauge.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGauge.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGauge.InvokeEditor">
            <inheritdoc />
        </member>
        <member name="P:FastReport.Gauge.Linear.LinearGauge.Inverted">
            <summary>
            Gets or sets the value that specifies inverted gauge or not.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Linear.LinearGauge.Label">
            <summary>
            Gets or sets gauge label.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Linear.LinearGauge"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGauge.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGauge.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGauge.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Linear.LinearGaugeEditorForm">
            <inheritdoc /> 
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGaugeEditorForm.#ctor">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGaugeEditorForm.#ctor(FastReport.Gauge.Linear.LinearGauge)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGaugeEditorForm.Init">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGaugeEditorForm.GaugeEditorForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGaugeEditorForm.Localize">
            <inheritdoc />
        </member>
        <member name="F:FastReport.Gauge.Linear.LinearGaugeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGaugeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearGaugeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Gauge.Linear.LinearPointer">
            <summary>
            Represents a linear pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Linear.LinearPointer.Height">
            <summary>
            Gets o sets the height of gauge pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Linear.LinearPointer.Width">
            <summary>
            Gets or sets the width of a pointer.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearPointer.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Linear.LinearPointer"/>
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearPointer.Assign(FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearPointer.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearPointer.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Linear.LinearScale">
            <summary>
            Represents a linear scale.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearScale.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Linear.LinearScale"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearScale.Assign(FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearScale.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Linear.LinearScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialGauge">
            <summary>
            Represents a linear gauge.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGauge.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGauge.FastReport#IHasEditor#InvokeEditor">
            <inheritdoc />
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Height">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Center">
            <summary>
            Returns centr of the gauge
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Radians">
            <summary>
            The number of radians in one degree
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Type">
            <summary>
            Gets or sets the Radial Gauge type
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.Position">
            <summary>
            Gats or sets the Radial Gauge position. Doesn't work for Full Radial Gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialGauge.SemicircleOffsetRatio">
            <summary>
            Gets or sets the semicircles offset
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Radial.RadialGauge"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGauge.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGauge.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGauge.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialGaugeEditorForm">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGaugeEditorForm.#ctor">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGaugeEditorForm.#ctor(FastReport.Gauge.GaugeObject)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGaugeEditorForm.Init">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGaugeEditorForm.GaugeEditorForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGaugeEditorForm.Localize">
            <inheritdoc />
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGaugeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialGaugeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialGaugeType">
            <summary>
            Radial Gauge types
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugeType.Circle">
            <summary>
            Full sized gauge
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugeType.Semicircle">
            <summary>
            Half of the radial gauge
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugeType.Quadrant">
            <summary>
            Quarter of the radial gauge
            </summary>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialGaugePosition">
            <summary>
            Radial Gauge position types
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugePosition.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugePosition.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugePosition.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugePosition.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Radial.RadialGaugePosition.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialPointer">
            <summary>
            Represents a linear pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Radial.RadialPointer.GradientAutoRotate">
            <summary>
            Gets or sets the value, indicating that gradient should be rotated automatically
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialPointer.#ctor(FastReport.Gauge.GaugeObject,FastReport.Gauge.Radial.RadialScale)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Radial.RadialPointer"/>
            </summary>
            <param name="parent">The parent gauge object.</param>
            <param name="scale">The scale object.</param>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialPointer.Assign(FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialPointer.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialPointer.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Radial.RadialScale">
            <summary>
            Represents a linear scale.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialScale.#ctor(FastReport.Gauge.Radial.RadialGauge)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Radial.RadialScale"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialScale.Assign(FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialScale.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Radial.RadialScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Simple.Progress.SimpleProgressGauge">
            <summary>
            Represents a simple progress gauge.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGauge.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGauge.FastReport#IHasEditor#InvokeEditor">
            <inheritdoc />
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressGauge.Label">
            <summary>
            Gets or sets gauge label.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressGauge.Scale">
            <summary>
            Gets scale. Should be disabled for SimpleProgressGauge
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Simple.SimpleGauge"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGauge.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Simple.Progress.SimpleProgressGaugeEditorForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGaugeEditorForm.#ctor">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGaugeEditorForm.#ctor(FastReport.Gauge.GaugeObject)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGaugeEditorForm.Init">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGaugeEditorForm.GaugeEditorForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGaugeEditorForm.Localize">
            <inheritdoc />
        </member>
        <member name="F:FastReport.Gauge.Simple.Progress.SimpleProgressGaugeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGaugeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressGaugeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Gauge.Simple.Progress.SimpleProgressLabel">
            <inheritdoc />
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressLabel.Decimals">
            <summary>
            Gets or sets the number of fractional digits
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressLabel.Text">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressLabel.#ctor(FastReport.Gauge.GaugeObject)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressLabel.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Gauge.Simple.Progress.SimpleProgressPointerType">
            <summary>
            SimpleProgressGauge pointer types
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Simple.Progress.SimpleProgressPointerType.Full">
            <summary>
            Full sized pointer
            </summary>
        </member>
        <member name="F:FastReport.Gauge.Simple.Progress.SimpleProgressPointerType.Small">
            <summary>
            Small pointer
            </summary>
        </member>
        <member name="T:FastReport.Gauge.Simple.Progress.SimpleProgressPointer">
            <inheritdoc />
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressPointer.Type">
            <summary>
            Gets or sets the pointer type
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.Progress.SimpleProgressPointer.SmallPointerWidthRatio">
            <summary>
            Gets or sets the small pointer width ratio
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressPointer.#ctor(FastReport.Gauge.GaugeObject)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressPointer.Assign(FastReport.Gauge.GaugePointer)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.Progress.SimpleProgressPointer.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugePointer)">
            <inheritdoc />
        </member>
        <member name="T:FastReport.Gauge.Simple.SimpleGauge">
            <summary>
            Represents a simple gauge.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGauge.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGauge.FastReport#IHasEditor#InvokeEditor">
            <inheritdoc />
        </member>
        <member name="P:FastReport.Gauge.Simple.SimpleGauge.Label">
            <summary>
            Gets or sets gauge label.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Simple.SimpleGauge"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGauge.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Simple.SimpleGaugeEditorForm">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGaugeEditorForm.#ctor">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGaugeEditorForm.#ctor(FastReport.Gauge.GaugeObject)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGaugeEditorForm.Init">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGaugeEditorForm.GaugeEditorForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGaugeEditorForm.Localize">
            <inheritdoc />
        </member>
        <member name="F:FastReport.Gauge.Simple.SimpleGaugeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGaugeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleGaugeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.Gauge.Simple.SimplePointer">
            <summary>
            Represents a simple pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.Left">
            <summary>
            Gets o sets the Left offset of gauge pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.Top">
            <summary>
            Gets o sets the Top offset of gauge pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.Height">
            <summary>
            Gets o sets the height of gauge pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.Width">
            <summary>
            Gets or sets the width of a pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.PointerRatio">
            <summary>
            Gets or sets the pointer ratio.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimplePointer.HorizontalOffset">
            <summary>
            Gets or sets the pointer horizontal offset (cm).
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimplePointer.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Simple.SimplePointer"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimplePointer.Assign(FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimplePointer.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimplePointer.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugePointer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Simple.SimpleScale">
            <summary>
            Represents a simple scale.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimpleScale.FirstSubScale">
            <summary>
            Gets or sets the first subscale (top or left).
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimpleScale.SecondSubScale">
            <summary>
            Gets or sets the second subscale (right or bottom).
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleScale.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Simple.SimpleScale"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleScale.Assign(FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleScale.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugeScale)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Gauge.Simple.SimpleSubScale">
            <summary>
            Represent the subscale of simple scale.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimpleSubScale.Enabled">
            <summary>
            Gets or sets a value that specifies enabled subscale or not.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.Simple.SimpleSubScale.ShowCaption">
            <summary>
            Gets or sets a value that specifies show caption or not.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleSubScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.Simple.SimpleSubScale"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleSubScale.Assign(FastReport.Gauge.Simple.SimpleSubScale)">
            <summary>
            Copies the contents of another SimpleSubScale.
            </summary>
            <param name="src">The SimpleSubScale instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Gauge.Simple.SimpleSubScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.Simple.SimpleSubScale)">
            <summary>
            Serializes the SimpleSubScale.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">SimpleSubScale property name.</param>
            <param name="diff">Another SimpleSubScale to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.Gauge.GaugeObject">
            <summary>
            Represents a gauge object.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.InvokeEditor">
            <inheritdoc />
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.InvokeEditor(FastReport.Gauge.GaugeEditorForm)">
            <inheritdoc />
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Minimum">
            <summary>
            Gets or sets the minimal value of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Maximum">
            <summary>
            Gets or sets the maximal value of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Value">
            <summary>
            Gets or sets the currenta value of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Scale">
            <summary>
            Gets or sets scale of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Pointer">
            <summary>
            Gets or sets pointer of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Label">
            <summary>
            Gets or sets gauge label.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Expression">
            <summary>
            Gets or sets an expression that determines the value of gauge object.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeObject.Vertical">
            <summary>
            Gets a value that specifies is gauge vertical or not.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeObject"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeObject"/> class.
            </summary>
            <param name="minimum">Minimum value of gauge.</param>
            <param name="maximum">Maximum value of gauge.</param>
            <param name="value">Current value of gauge.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.#ctor(System.Double,System.Double,System.Double,FastReport.Gauge.GaugeScale,FastReport.Gauge.GaugePointer)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeObject"/> class.
            </summary>
            <param name="minimum">Minimum value of gauge.</param>
            <param name="maximum">Maximum value of gauge.</param>
            <param name="value">Current value of gauge.</param>
            <param name="scale">Scale of gauge.</param>
            <param name="pointer">Pointer of gauge.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the gauge.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Gauge.GaugeObject.Clone">
            <summary>
            Clone Gauge Object
            </summary>
            <returns> clone of this object</returns>
        </member>
        <member name="T:FastReport.Gauge.GaugeLabel">
            <summary>
            Represents a label of a gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeLabel.Text">
            <summary>
            Gets or sets the label text
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeLabel.Font">
            <summary>
            Gets or sets the label font
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeLabel.Color">
            <summary>
            Gets or sets the label color
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeLabel.Parent">
            <summary>
            Gets or sets the label parent
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeLabel.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeLabel"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeLabel.#ctor(FastReport.Gauge.GaugeObject,System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeLabel"/> class.
            </summary>
            <param name="text">Label text</param>
            <param name="font">Label font</param>
            <param name="color">Label color</param>
            <param name="parent">Label parent</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeLabel.Assign(FastReport.Gauge.GaugeLabel)">
            <summary>
            Copies the contents of another GaugeLabel.
            </summary>
            <param name="src">The GaugeLabel instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeLabel.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the gauge label.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeLabel.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugeLabel)">
            <summary>
            Serializes the gauge label.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Gauge label property name.</param>
            <param name="diff">Another GaugeLabel to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.Gauge.GaugePointer">
            <summary>
            Represents a pointer of gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugePointer.Parent">
            <summary>
            Gets or sets the parent gauge object.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugePointer.Fill">
            <summary>
            Gets or sets the color of a pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugePointer.BorderWidth">
            <summary>
            Gets or sets the border width of a pointer.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugePointer.BorderColor">
            <summary>
            Gets or sets the border color of a pointer.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugePointer.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugePointer"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugePointer.Assign(FastReport.Gauge.GaugePointer)">
            <summary>
            Copies the contents of another GaugePointer.
            </summary>
            <param name="src">The GaugePointer instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugePointer.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the gauge pointer.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugePointer.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugePointer)">
            <summary>
            Serializes the gauge pointer.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Gauge pointer property name.</param>
            <param name="diff">Another GaugePointer to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.Gauge.GaugeScale">
            <summary>
            Represents a scale of a gauge.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeScale.MajorTicks">
            <summary>
            Gets or sets major ticks of scale.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeScale.MinorTicks">
            <summary>
            Gets or sets minor ticks of scale.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeScale.Parent">
            <summary>
            Gets or sets the parent gauge object.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeScale.Font">
            <summary>
            Gets or sets the font of scale.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.GaugeScale.TextFill">
            <summary>
            Gets or sets the scale font color
            </summary>
        </member>
        <member name="M:FastReport.Gauge.GaugeScale.#ctor(FastReport.Gauge.GaugeObject)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.GaugeScale"/> class.
            </summary>
            <param name="parent">The parent gauge object.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeScale.Assign(FastReport.Gauge.GaugeScale)">
            <summary>
            Copies the contents of another GaugeScale.
            </summary>
            <param name="src">The GaugeScale instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeScale.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the scale of gauge.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.Gauge.GaugeScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.GaugeScale)">
            <summary>
            Serializes the gauge scale.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Scale property name.</param>
            <param name="diff">Another GaugeScale to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.Gauge.ScaleTicks">
            <summary>
            Represents a scale ticks.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.ScaleTicks.Length">
            <summary>
            Gets or sets the length of ticks.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.ScaleTicks.Width">
            <summary>
            Gets or sets the width of ticks.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.ScaleTicks.Color">
            <summary>
            Gets or sets the color of ticks.
            </summary>
        </member>
        <member name="P:FastReport.Gauge.ScaleTicks.Count">
            <summary>
            Gets or sets the count of ticks
            </summary>
        </member>
        <member name="M:FastReport.Gauge.ScaleTicks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.ScaleTicks"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Gauge.ScaleTicks.#ctor(System.Single,System.Int32,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.ScaleTicks"/> class.
            </summary>
            <param name="length">Ticks length.</param>
            <param name="width">Ticks width.</param>
            <param name="color">Ticks color.</param>
        </member>
        <member name="M:FastReport.Gauge.ScaleTicks.#ctor(System.Single,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Gauge.ScaleTicks"/> class.
            </summary>
            <param name="length">Ticks length.</param>
            <param name="width">Ticks width.</param>
            <param name="color">Ticks color.</param>
            <param name="count">Ticks count.</param>
        </member>
        <member name="M:FastReport.Gauge.ScaleTicks.Assign(FastReport.Gauge.ScaleTicks)">
            <summary>
            Copies the contents of another ScaleTicks.
            </summary>
            <param name="src">The ScaleTicks instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Gauge.ScaleTicks.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Gauge.ScaleTicks)">
            <summary>
            Serializes the scale ticks.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Scale ticks property name.</param>
            <param name="diff">Another ScaleTicks to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.TypeEditors.PointerEditor">
            <summary>
            Provides a user interface for editing an expression.
            </summary>
        </member>
        <member name="F:FastReport.TypeEditors.PointerEditor.gauge">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.TypeEditors.PointerEditor.gaugeEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.PointerEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.PointerEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.LabelEditor">
            <summary>
            Provides a user interface for editing an expression.
            </summary>
        </member>
        <member name="F:FastReport.TypeEditors.LabelEditor.gauge">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.TypeEditors.LabelEditor.gaugeEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.LabelEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.LabelEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.ScaleEditor">
            <summary>
            Provides a user interface for editing an expression.
            </summary>
        </member>
        <member name="F:FastReport.TypeEditors.ScaleEditor.gauge">
            <summary>
            
            </summary>
        </member>
        <member name="F:FastReport.TypeEditors.ScaleEditor.gaugeEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.ScaleEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.ScaleEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.CubeSourceEditor">
            <summary>
            Provides a user interface for choosing a data source.
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.DataBandColumnEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.DataBandColumnEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.OutlineEditor">
            <summary>
            Provides a user interface for editing a text outline.
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.OutlineEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.OutlineEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.RelationEditor">
            <summary>
            Provides a user interface for choosing a relation.
            </summary>
        </member>
        <member name="T:FastReport.TypeEditors.ReportComponentRefEditor">
            <summary>
            Provides a user interface for selecting a component inside the report.
            </summary>
        </member>
        <member name="P:FastReport.TypeEditors.ReportComponentRefEditor.IsDropDownResizable">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.ReportComponentRefEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.ReportComponentRefEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.BandComponentRefEditor">
            <summary>
            Provides a user interface for selecting a component inside the same band.
            </summary>
        </member>
        <member name="P:FastReport.TypeEditors.BandComponentRefEditor.IsDropDownResizable">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.BandComponentRefEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.BandComponentRefEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.FlagsEditor">
            <summary>
            Provides a user interface for editing a flags enumeration.
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.FlagsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.FlagsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.DataTypeEditor">
            <summary>
            Provides a user interface for choosing a data type.
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.DataTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.DataTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.DataColumnEditor">
            <summary>
            Provides a user interface for choosing a data column.
            </summary>
        </member>
        <member name="P:FastReport.TypeEditors.DataColumnEditor.IsDropDownResizable">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.DataColumnEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.DataColumnEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.DataSourceEditor">
            <summary>
            Provides a user interface for choosing a data source.
            </summary>
        </member>
        <member name="T:FastReport.TypeEditors.ExpressionEditor">
            <summary>
            Provides a user interface for editing an expression.
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.ExpressionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.ExpressionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.AngleEditor">
            <summary>
            Provides a user interface for editing an angle in degrees.
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.AngleEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.AngleEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.BorderEditor">
            <summary>
            Provides a user interface for editing a component's border.
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.BorderEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.BorderEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.PageComponentRefEditor">
            <summary>
            Provides a user interface for selecting a component inside the same page.
            </summary>
        </member>
        <member name="P:FastReport.TypeEditors.PageComponentRefEditor.IsDropDownResizable">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.PageComponentRefEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.PageComponentRefEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.ColorEditor">
            <summary>
            Provides a user interface for choosing a color.
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.FillEditor">
            <summary>
            Provides a user interface for editing a fill.
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.FillEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.FillEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeEditors.ItemsEditor">
            <summary>
            Provides a user interface for editing a string collection.
            </summary>
        </member>
        <member name="M:FastReport.TypeEditors.ItemsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeEditors.ItemsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Map.MapObject">
            <summary>
            Represents a map object.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.CanGrow">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.CanShrink">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.Style">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.EvenStyle">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.EvenStylePriority">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.HoverStyle">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.IsSelected">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.HandleMouseHover(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.HandleMouseMove(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.HandleMouseWheel(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.OnMouseEnter(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.OnMouseLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Map.MapObject.ShapefileFolder">
            <summary>
            Gets or sets the path to folder containing shapefiles.
            </summary>
            <remarks>
            This property is used by the map editor when selecting a shapefile.
            </remarks>
        </member>
        <member name="P:FastReport.Map.MapObject.Zoom">
            <summary>
            Gets or sets the map zoom.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.MinZoom">
            <summary>
            Gets or sets minimum zoom value.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.MaxZoom">
            <summary>
            Gets or sets maximum zoom value.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.OffsetX">
            <summary>
            Gets or sets the X offset of the map.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.OffsetY">
            <summary>
            Gets or sets the Y offset of the map.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.MercatorProjection">
            <summary>
            Gets or sets the value indicating that mercator projection must be used to view the map.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.ColorScale">
            <summary>
            Gets the color scale settings.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.Layers">
            <summary>
            Gets or sets a collection of map layers.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapObject.Padding">
            <summary>
            Gets or sets padding within the map.
            </summary>
        </member>
        <member name="M:FastReport.Map.MapObject.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapObject.Load(System.String)">
            <summary>
            Loads a map from file.
            </summary>
            <param name="filename">Name of file that contains a map.</param>
        </member>
        <member name="M:FastReport.Map.MapObject.CreateUniqueNames">
            <summary>
            Creates unique names for all contained objects such as layers, shapes, etc.
            </summary>
        </member>
        <member name="M:FastReport.Map.MapObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.MapObject"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.ShapePoint">
            <summary>
            Represents a map point.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapePoint.X">
            <summary>
            Gets or sets the X-coordinate of the point.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapePoint.Y">
            <summary>
            Gets or sets the Y-coordinate of the point.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapePoint.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePoint.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePoint.DrawLabel(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePoint.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePoint.HitTest(System.Drawing.PointF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ShapePoint"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.ShapePolygon">
            <summary>
            Represents a polygon shape.
            </summary>
        </member>
        <member name="F:FastReport.Map.ShapePolygon.largestBoundsRect">
            <summary>
            Holds the largest bounding rectangle of this shape.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapePolygon.Box">
            <summary>
            Gets or sets a bounding box of this shape.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapePolygon.Parts">
            <summary>
            Gets or sets a list of polygons in this shape.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapePolygon.ShapeData">
            <summary>
            Gets or sets the shape data in binary format.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapePolygon.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolygon.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolygon.DrawLabel(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolygon.HitTest(System.Drawing.PointF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolygon.Simplify(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolygon.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolygon.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolygon.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolygon.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ShapePolygon"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Map.Forms.AddLayerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Map.Forms.AddLayerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Map.Forms.AddLayerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Map.Forms.LayerEditorControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Map.Forms.LayerEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Map.Forms.LayerEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Map.Forms.MapEditorControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Map.Forms.MapEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Map.Forms.MapEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Map.Forms.MapEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Map.Forms.MapEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing"><b>true</b> if managed resources should be disposed. Otherwise, <b>false</b>.</param>
        </member>
        <member name="T:FastReport.Map.BoundingBox">
            <summary>
            Represents four coordinates that define a bounding box.
            </summary>
        </member>
        <member name="P:FastReport.Map.BoundingBox.MinX">
            <summary>
            Gets or sets the minimum X-coordinate of a bounding box.
            </summary>
        </member>
        <member name="P:FastReport.Map.BoundingBox.MinY">
            <summary>
            Gets or sets the minimum Y-coordinate of a bounding box.
            </summary>
        </member>
        <member name="P:FastReport.Map.BoundingBox.MaxX">
            <summary>
            Gets or sets the maximum X-coordinate of a bounding box.
            </summary>
        </member>
        <member name="P:FastReport.Map.BoundingBox.MaxY">
            <summary>
            Gets or sets the maximum Y-coordinate of a bounding box.
            </summary>
        </member>
        <member name="M:FastReport.Map.BoundingBox.Assign(FastReport.Map.BoundingBox)">
            <summary>
            Copies the contents of another <see cref="T:FastReport.Map.BoundingBox"/> instance.
            </summary>
            <param name="src">Source box to copy the contents from.</param>
        </member>
        <member name="T:FastReport.Map.MapPalette">
            <summary>
            Defines the palette used to display map shapes.
            </summary>
        </member>
        <member name="F:FastReport.Map.MapPalette.None">
            <summary>
            No palette used. 
            </summary>
        </member>
        <member name="F:FastReport.Map.MapPalette.Light">
            <summary>
            Light palette.
            </summary>
        </member>
        <member name="F:FastReport.Map.MapPalette.Pastel">
            <summary>
            Pastel palette.
            </summary>
        </member>
        <member name="F:FastReport.Map.MapPalette.Grayscale">
            <summary>
            Grayscale palette.
            </summary>
        </member>
        <member name="F:FastReport.Map.MapPalette.Earth">
            <summary>
            Earth tones palette.
            </summary>
        </member>
        <member name="F:FastReport.Map.MapPalette.Sea">
            <summary>
            Sea green palette.
            </summary>
        </member>
        <member name="F:FastReport.Map.MapPalette.BrightPastel">
            <summary>
            Bright pastel palette.
            </summary>
        </member>
        <member name="T:FastReport.Map.ColorRanges">
            <summary>
            Represents a set of color ranges used to highlight polygons based on analytical value.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorRanges.Ranges">
            <summary>
            Gets the list of ranges.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorRanges.RangeCount">
            <summary>
            Gets or sets the number of ranges.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorRanges.StartColor">
            <summary>
            Gets or sets the start color.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorRanges.MiddleColor">
            <summary>
            Gets or sets the middle color.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorRanges.EndColor">
            <summary>
            Gets or sets the end color.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorRanges.ShowInColorScale">
            <summary>
            Gets or sets a value indicating that the map's color scale must display data from this color ranges.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorRanges.RangesAsString">
            <summary>
            Gets or sets ranges as a string.
            </summary>
        </member>
        <member name="M:FastReport.Map.ColorRanges.Assign(FastReport.Map.ColorRanges)">
            <summary>
            Copies the contents of another ColorRanges.
            </summary>
            <param name="src">The ColorRanges instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Map.ColorRanges.GetColor(System.Double)">
            <summary>
            Gets a color associated with given analytical value.
            </summary>
            <param name="value">The analytical value.</param>
            <returns>The color associated with this value, or <b>Color.Transparent</b> if no association found.</returns>
        </member>
        <member name="M:FastReport.Map.ColorRanges.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ColorRanges"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.ColorRange">
            <summary>
            Represents a single color range.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorRange.Color">
            <summary>
            Gets or sets color of the range.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorRange.StartValue">
            <summary>
            Gets or sets start value of the range.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorRange.EndValue">
            <summary>
            Gets or sets end value of the range.
            </summary>
        </member>
        <member name="M:FastReport.Map.ColorRange.Assign(FastReport.Map.ColorRange)">
            <summary>
            Copies the contents of another ColorRange.
            </summary>
            <param name="src">The ColorRange instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Map.ColorRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ColorRange"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Map.ColorRange.#ctor(System.Drawing.Color,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ColorRange"/> class with a specified parameters.
            </summary>
            <param name="color">The color of the range.</param>
            <param name="startValue">The start value of the range.</param>
            <param name="endValue">The end value of the range.</param>
        </member>
        <member name="T:FastReport.Map.ColorScale">
            <summary>
            Represents the color scale.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorScale.Data">
            <summary>
            Gets or sets <see cref="T:FastReport.Map.ColorRanges"/> that must be displayed in this color scale.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorScale.Format">
            <summary>
            Gets or sets the format string used to format data values.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorScale.HideIfNoData">
            <summary>
            Gets or sets a value indicating whether the color scale must be hidden if there is no data in it.
            </summary>
        </member>
        <member name="P:FastReport.Map.ColorScale.NoDataText">
            <summary>
            Gets or sets the text displayed in the color scale if there is no data in it.
            </summary>
        </member>
        <member name="M:FastReport.Map.ColorScale.Assign(FastReport.Map.ScaleBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ColorScale.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Map.ScaleBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ColorScale.CalcSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ColorScale.Draw(FastReport.Utils.FRPaintEventArgs,FastReport.Map.MapObject)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ColorScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ColorScale"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.DistanceScale">
            <summary>
            Represents a distance scale.
            </summary>
        </member>
        <member name="M:FastReport.Map.DistanceScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.DistanceScale"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.Import.Shp.DbfFileImport">
            <summary>
            Represents loading map data from dbf-file.
            </summary>
        </member>
        <member name="P:FastReport.Map.Import.Shp.DbfFileImport.Filter">
            <summary>
            Gets or sets the filter string used in an open file dialog.
            </summary>
        </member>
        <member name="M:FastReport.Map.Import.Shp.DbfFileImport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.Import.Shp.DbfFileImport"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Map.Import.Shp.DbfFileImport.GetFilter">
            <summary>
            Returns a file filter for an open file dialog.
            </summary>
            <returns>String that contains a file filter.</returns>
        </member>
        <member name="M:FastReport.Map.Import.Shp.DbfFileImport.ImportFile(FastReport.Map.MapLayer,System.String)">
            <summary>
            Imports the map data from a specified file into a specfied layer.
            </summary>
            <param name="layer">The MapObject for an importing map.</param>
            <param name="filename">The name of a file that contains map.</param>
        </member>
        <member name="T:FastReport.Map.Import.Shp.DBaseFieldDescription">
            <summary>
            Represents the description of dBase field.
            </summary>
        </member>
        <member name="P:FastReport.Map.Import.Shp.DBaseFieldDescription.Name">
            <summary>
            Gets the field name.
            </summary>
        </member>
        <member name="P:FastReport.Map.Import.Shp.DBaseFieldDescription.Type">
            <summary>
            Gets the field type.
            </summary>
        </member>
        <member name="P:FastReport.Map.Import.Shp.DBaseFieldDescription.Length">
            <summary>
            Gets the field length.
            </summary>
        </member>
        <member name="M:FastReport.Map.Import.Shp.DBaseFieldDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.Import.Shp.DBaseFieldDescription"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Map.Import.Shp.DBaseFieldDescription.#ctor(System.String,FastReport.Map.Import.Shp.DBaseFieldType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.Import.Shp.DBaseFieldDescription"/> class with a specified parameters.
            </summary>
            <param name="name">The field name.</param>
            <param name="type">The field type.</param>
            <param name="length">The field length.</param>
        </member>
        <member name="M:FastReport.Map.Import.Shp.DBaseFieldDescription.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.Import.Shp.DBaseFieldDescription"/> class with a specified parameters.
            </summary>
            <param name="name">The field name.</param>
            <param name="type">The field type.</param>
            <param name="length">The field length.</param>
        </member>
        <member name="T:FastReport.Map.Import.Shp.DBaseFieldType">
            <summary>
            The type of dBase field.
            </summary>
        </member>
        <member name="F:FastReport.Map.Import.Shp.DBaseFieldType.Char">
            <summary>
            Character field.
            </summary>
        </member>
        <member name="F:FastReport.Map.Import.Shp.DBaseFieldType.Date">
            <summary>
            Date field.
            </summary>
        </member>
        <member name="F:FastReport.Map.Import.Shp.DBaseFieldType.Numeric">
            <summary>
            Numeric field.
            </summary>
        </member>
        <member name="F:FastReport.Map.Import.Shp.DBaseFieldType.Logical">
            <summary>
            Logical field.
            </summary>
        </member>
        <member name="F:FastReport.Map.Import.Shp.DBaseFieldType.Memo">
            <summary>
            Memo field.
            </summary>
        </member>
        <member name="T:FastReport.Map.LayerCollection">
            <summary>
            Represents a collection of <see cref="T:FastReport.Map.MapLayer"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Map.LayerCollection.Item(System.Int32)">
            <summary>
            Gets a layer with specified index.
            </summary>
            <param name="index">Index of a layer.</param>
            <returns>The layer with specified index.</returns>
        </member>
        <member name="T:FastReport.Map.LayerType">
            <summary>
            Specifies the type of objects that layer contains.
            </summary>
        </member>
        <member name="F:FastReport.Map.LayerType.Point">
            <summary>
            The layer contains points.
            </summary>
        </member>
        <member name="F:FastReport.Map.LayerType.Line">
            <summary>
            The layer contains lines.
            </summary>
        </member>
        <member name="F:FastReport.Map.LayerType.Polygon">
            <summary>
            The layer contains polygons.
            </summary>
        </member>
        <member name="T:FastReport.Map.SpatialSource">
            <summary>
            Specifies the spatial source for the layer.
            </summary>
        </member>
        <member name="F:FastReport.Map.SpatialSource.ShpFile">
            <summary>
            Source is ESRI shapefile.
            </summary>
        </member>
        <member name="F:FastReport.Map.SpatialSource.ApplicationData">
            <summary>
            Source is a latitude/longitude/name provided by an application.
            </summary>
        </member>
        <member name="T:FastReport.Map.MapLabelKind">
            <summary>
            Determines how map labels are displayed.
            </summary>
        </member>
        <member name="F:FastReport.Map.MapLabelKind.None">
            <summary>
            No label displayed.
            </summary>
        </member>
        <member name="F:FastReport.Map.MapLabelKind.Name">
            <summary>
            The shape name is displayed.
            </summary>
        </member>
        <member name="F:FastReport.Map.MapLabelKind.Value">
            <summary>
            The value is displayed.
            </summary>
        </member>
        <member name="F:FastReport.Map.MapLabelKind.NameAndValue">
            <summary>
            Both name and value displayed.
            </summary>
        </member>
        <member name="T:FastReport.Map.MapLayer">
            <summary>
            Represents a map layer.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.Type">
            <summary>
            Gets or sets a type of layer.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.SpatialSource">
            <summary>
            Gets or sets the spatial source for the layer.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.Shapefile">
            <summary>
            Gets or sets the name of ESRI shapefile.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.Filter">
            <summary>
            Gets or sets the datasource filter expression.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.SpatialColumn">
            <summary>
            Gets or sets spatial column name.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.Map.MapLayer.SpatialSource"/> is set to <b>ShpFile</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Map.MapLayer.SpatialValue">
            <summary>
            Gets or sets an expression that returns spatial value.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.Map.MapLayer.SpatialSource"/> is set to <b>ShpFile</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Map.MapLayer.LatitudeValue">
            <summary>
            Gets or sets an expression that returns latitude value.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.Map.MapLayer.SpatialSource"/> is set to <b>ApplicationData</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Map.MapLayer.LongitudeValue">
            <summary>
            Gets or sets an expression that returns longitude value.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.Map.MapLayer.SpatialSource"/> is set to <b>ApplicationData</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Map.MapLayer.LabelValue">
            <summary>
            Gets or sets an expression that returns label value.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.Map.MapLayer.SpatialSource"/> is set to <b>ApplicationData</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Map.MapLayer.AnalyticalValue">
            <summary>
            Gets or sets an expression that returns analytical value.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.LabelColumn">
            <summary>
            Gets or sets label's column name.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.LabelKind">
            <summary>
            Gets or sets a value that determines how map labels are displayed.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.LabelFormat">
            <summary>
            Gets or sets the format of label's value.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.Accuracy">
            <summary>
            Gets or sets the map accuracy. Lower value is better, but slower.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.LabelsVisibleAtZoom">
            <summary>
            Gets or sets the value that determines the labels visiblity at a certain zoom value.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.Function">
            <summary>
            Gets or sets the aggregate function.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.Visible">
            <summary>
            Gets or sets a value indicating that the layer is visible.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.Box">
            <summary>
            Gets or sets a bounding box of layer.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.Shapes">
            <summary>
            Gets a collection of map objects.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.DefaultShapeStyle">
            <summary>
            Gets the default style of shapes in this layer.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.Palette">
            <summary>
            Gets or sets the palette used to highlight shapes.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.ColorRanges">
            <summary>
            Gets the color ranges used to highlight shapes based on analytical value.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.SizeRanges">
            <summary>
            Gets the size ranges used to draw points based on analytical value.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.ZoomPolygon">
            <summary>
            Gets or sets the expression that returns the name of polygon to zoom.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.BoxAsString">
            <summary>
            Gets or sets the bounding box as a string.
            </summary>
        </member>
        <member name="P:FastReport.Map.MapLayer.Map">
            <summary>
            Gets a reference to the Map object.
            </summary>
        </member>
        <member name="M:FastReport.Map.MapLayer.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the layer.
            </summary>
            <param name="e">The drawing parameters.</param>
        </member>
        <member name="M:FastReport.Map.MapLayer.HitTest(System.Drawing.PointF)">
            <summary>
            Finds the shape under cursor.
            </summary>
            <param name="point">The cursor coordinates.</param>
            <returns>The <b>ShapeBase</b> object if found.</returns>
        </member>
        <member name="M:FastReport.Map.MapLayer.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.CreateUniqueNames">
            <summary>
            Creates unique names for all contained objects such as points, lines, polygons, etc.
            </summary>
        </member>
        <member name="M:FastReport.Map.MapLayer.Simplify(System.Double)">
            <summary>
            Reduces the number of points in the shapes in this layer.
            </summary>
            <param name="accuracy">The accuracy value.</param>
        </member>
        <member name="M:FastReport.Map.MapLayer.LoadShapefile(System.String)">
            <summary>
            Loads the layer contents from ESRI shapefile (*.shp/*.dbf).
            </summary>
            <param name="fileName">The file name.</param>
        </member>
        <member name="M:FastReport.Map.MapLayer.OnAfterLoad">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.AddValue(System.Double,System.Double,System.String,System.Double)">
            <summary>
            Adds application provided data.
            </summary>
            <param name="latitude">Latitude value.</param>
            <param name="longitude">Longitude value.</param>
            <param name="name">The name displayed as a label.</param>
            <param name="analyticalValue">Analytical value.</param>
            <remarks>
            Use this method if the <see cref="P:FastReport.Map.MapLayer.SpatialSource"/> is set to <b>ApplicationData</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Map.MapLayer.AddValue(System.String,System.Double)">
            <summary>
            Adds a spatial/analytical value pair to the list.
            </summary>
            <param name="spatialValue">The spatial value.</param>
            <param name="analyticalValue">The analytical value.</param>
            <remarks>
            Use this method if the <see cref="P:FastReport.Map.MapLayer.SpatialSource"/> is set to <b>ShpFile</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetProperties">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetProperties(System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetClassName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetAttributes">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetComponentName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetConverter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetDefaultEvent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetDefaultProperty">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetEditor(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetEvents(System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.MapLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.MapLayer"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.PointD">
            <summary>
            Represents a pair of double coordinates that defines a constituent point.
            </summary>
        </member>
        <member name="P:FastReport.Map.PointD.X">
            <summary>
            Gets or sets the X-coordinate of a point.
            </summary>
        </member>
        <member name="P:FastReport.Map.PointD.Y">
            <summary>
            Gets or sets the Y-coordinate of a point.
            </summary>
        </member>
        <member name="M:FastReport.Map.PointD.#ctor(System.Double,System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:FastReport.Map.PointD"/> class with specified coordinates.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
        </member>
        <member name="T:FastReport.Map.ScaleDock">
            <summary>
            Specifies the position of a scale control inside the map.
            </summary>
        </member>
        <member name="F:FastReport.Map.ScaleDock.TopLeft">
            <summary>
            The scale is displayed at top left corner.
            </summary>
        </member>
        <member name="F:FastReport.Map.ScaleDock.TopCenter">
            <summary>
            The scale is displayed at top center side.
            </summary>
        </member>
        <member name="F:FastReport.Map.ScaleDock.TopRight">
            <summary>
            The scale is displayed at top right corner.
            </summary>
        </member>
        <member name="F:FastReport.Map.ScaleDock.MiddleLeft">
            <summary>
            The scale is displayed at middle left side.
            </summary>
        </member>
        <member name="F:FastReport.Map.ScaleDock.MiddleRight">
            <summary>
            The scale is displayed at middle right side.
            </summary>
        </member>
        <member name="F:FastReport.Map.ScaleDock.BottomLeft">
            <summary>
            The scale is displayed at bottom left corner.
            </summary>
        </member>
        <member name="F:FastReport.Map.ScaleDock.BottomCenter">
            <summary>
            The scale is displayed at bottom center side.
            </summary>
        </member>
        <member name="F:FastReport.Map.ScaleDock.BottomRight">
            <summary>
            The scale is displayed at bottom right corner.
            </summary>
        </member>
        <member name="T:FastReport.Map.ScaleBase">
            <summary>
            The base class for scale-type controls such as <see cref="T:FastReport.Map.DistanceScale"/> and <see cref="T:FastReport.Map.ColorScale"/>.
            </summary>
        </member>
        <member name="P:FastReport.Map.ScaleBase.Border">
            <summary>
            Gets or sets the border.
            </summary>
        </member>
        <member name="P:FastReport.Map.ScaleBase.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
        </member>
        <member name="P:FastReport.Map.ScaleBase.TitleFont">
            <summary>
            Gets or sets the title font.
            </summary>
        </member>
        <member name="P:FastReport.Map.ScaleBase.TitleColor">
            <summary>
            Gets or sets the title text color.
            </summary>
        </member>
        <member name="P:FastReport.Map.ScaleBase.TitleText">
            <summary>
            Gets or sets the title text.
            </summary>
        </member>
        <member name="P:FastReport.Map.ScaleBase.Font">
            <summary>
            Gets or sets the font.
            </summary>
        </member>
        <member name="P:FastReport.Map.ScaleBase.TextColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:FastReport.Map.ScaleBase.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:FastReport.Map.ScaleBase.Dock">
            <summary>
            Gets or sets the location of the scale.
            </summary>
        </member>
        <member name="P:FastReport.Map.ScaleBase.Visible">
            <summary>
            Gets or sets the visibility of a scale.
            </summary>
        </member>
        <member name="M:FastReport.Map.ScaleBase.Assign(FastReport.Map.ScaleBase)">
            <summary>
            Copies the contents of another ScaleBase.
            </summary>
            <param name="src">The ScaleBase instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Map.ScaleBase.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Map.ScaleBase)">
            <summary>
            Serializes the scale.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Scale property name.</param>
            <param name="diff">Another ScaleBase to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Map.ScaleBase.CalcSize">
            <summary>
            Gets the size of the scale, in pixels.
            </summary>
            <returns>The SizeF structure containing the size of the object.</returns>
        </member>
        <member name="M:FastReport.Map.ScaleBase.Draw(FastReport.Utils.FRPaintEventArgs,FastReport.Map.MapObject)">
            <summary>
            Draws the object.
            </summary>
            <param name="e">Draw parameters.</param>
            <param name="parent">Parent map object.</param>
        </member>
        <member name="M:FastReport.Map.ScaleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ScaleBase"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.ShapeBase">
            <summary>
            The base class for shape objects such as <see cref="T:FastReport.Map.ShapePoint"/>, <see cref="T:FastReport.Map.ShapePolyLine"/> and <see cref="T:FastReport.Map.ShapePolygon"/>.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeBase.Visible">
            <summary>
            Gets or sets the shape visibility.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeBase.UseCustomStyle">
            <summary>
            Gets or sets a value indicating that custom shape style is used.
            </summary>
            <remarks>
            If this property is <b>false</b>, the layer's DefaultShapeStyle is used.
            </remarks>
        </member>
        <member name="P:FastReport.Map.ShapeBase.CustomStyle">
            <summary>
            Gets a custom shape style.
            </summary>
            <remarks>
            To use this property, first set the <see cref="P:FastReport.Map.ShapeBase.UseCustomStyle"/> property to <b>true</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Map.ShapeBase.CenterOffsetX">
            <summary>
            Gets or sets the center point X offset.
            </summary>
            <remarks>
            Use this property to adjust the label's position.
            </remarks>
        </member>
        <member name="P:FastReport.Map.ShapeBase.CenterOffsetY">
            <summary>
            Gets or sets the center point Y offset.
            </summary>
            <remarks>
            Use this property to adjust the label's position.
            </remarks>
        </member>
        <member name="P:FastReport.Map.ShapeBase.ShapeOffsetX">
            <summary>
            Gets or sets the shape X offset.
            </summary>
            <remarks>
            Use this property to adjust the shape position.
            </remarks>
        </member>
        <member name="P:FastReport.Map.ShapeBase.ShapeOffsetY">
            <summary>
            Gets or sets the shape Y offset.
            </summary>
            <remarks>
            Use this property to adjust the shape position.
            </remarks>
        </member>
        <member name="P:FastReport.Map.ShapeBase.ShapeScale">
            <summary>
            Gets or sets the scale factor for this shape.
            </summary>
            <remarks>
            Use this property to adjust the shape size.
            </remarks>
        </member>
        <member name="P:FastReport.Map.ShapeBase.SpatialData">
            <summary>
            Gets or sets the spatial data associated with this shape.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeBase.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeBase.Map">
            <summary>
            Gets a reference to the parent Map object.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeBase.Layer">
            <summary>
            Gets a reference to the parent Layer object.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapeBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the shape.
            </summary>
            <param name="e">Object that provides a data for paint event.</param>
        </member>
        <member name="M:FastReport.Map.ShapeBase.DrawLabel(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the label.
            </summary>
            <param name="e">Object that provides a data for paint event.</param>
        </member>
        <member name="M:FastReport.Map.ShapeBase.HitTest(System.Drawing.PointF)">
            <summary>
            Checks if the shape is under cursor.
            </summary>
            <param name="point">The cursor coordinates.</param>
            <returns><b>true</b> if the cursor is over the shape.</returns>
        </member>
        <member name="M:FastReport.Map.ShapeBase.Simplify(System.Double)">
            <summary>
            Reduces the number of points in the shape.
            </summary>
            <param name="accuracy">The accuracy value.</param>
        </member>
        <member name="M:FastReport.Map.ShapeBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.InitializeComponent">
            <summary>
            Initializes a component before running a report.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapeBase.FinalizeComponent">
            <summary>
            Finalizes a component before running a report.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapeBase.SaveState">
            <summary>
            Saves the state of this component.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapeBase.RestoreState">
            <summary>
            Restores the state of this component.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetProperties">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetProperties(System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetClassName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetAttributes">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetComponentName">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetConverter">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetDefaultEvent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetDefaultProperty">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetEditor(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetEvents(System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetEvents">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ShapeBase"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.ShapeCollection">
            <summary>
            Holds the list of objects of <see cref="T:FastReport.Map.ShapeBase"/> type.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.Map.ShapeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ShapeCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapeCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ShapeCollection"/> class with specified owner.
            </summary>
        </member>
        <member name="T:FastReport.Map.ShapePolyLine">
            <summary>
            Represents a line shape.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapePolyLine.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolyLine.DrawLabel(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolyLine.HitTest(System.Drawing.PointF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Map.ShapePolyLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ShapePolyLine"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.ShapeSpatialData">
            <summary>
            Represents the spatial data of a shape.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapeSpatialData.Assign(FastReport.Map.ShapeSpatialData)">
            <summary>
            Copies contents from another spatial data object.
            </summary>
            <param name="src">The object to copy contents from.</param>
        </member>
        <member name="M:FastReport.Map.ShapeSpatialData.IsEqual(FastReport.Map.ShapeSpatialData)">
            <summary>
            Compares two spatial data objects. 
            </summary>
            <param name="src">The spatial object to compare with.</param>
            <returns><b>true</b> if spatial objects are identical.</returns>
        </member>
        <member name="M:FastReport.Map.ShapeSpatialData.GetValue(System.String)">
            <summary>
            Gets a value by its key.
            </summary>
            <param name="key">The key of value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:FastReport.Map.ShapeSpatialData.SetValue(System.String,System.String)">
            <summary>
            Sets a value by its key.
            </summary>
            <param name="key">The key of value.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:FastReport.Map.ShapeSpatialData.GetKeys">
            <summary>
            Gets a list of keys.
            </summary>
            <returns>The list of keys.</returns>
        </member>
        <member name="M:FastReport.Map.ShapeSpatialData.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:FastReport.Map.ShapeSpatialData"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.ShapeStyle">
            <summary>
            Represents the style of a shape.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeStyle.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeStyle.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeStyle.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeStyle.FillColor">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeStyle.Font">
            <summary>
            Gets or sets the font.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeStyle.TextColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:FastReport.Map.ShapeStyle.PointSize">
            <summary>
            Gets or sets the point size, in pixels.
            </summary>
        </member>
        <member name="M:FastReport.Map.ShapeStyle.Assign(FastReport.Map.ShapeStyle)">
            <summary>
            Copies contents from another similar object.
            </summary>
            <param name="src">The object to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Map.ShapeStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.ShapeStyle"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.SizeRanges">
            <summary>
            Represents a set of size ranges used to draw points based on analytical value.
            </summary>
        </member>
        <member name="P:FastReport.Map.SizeRanges.Ranges">
            <summary>
            Gets the list of ranges.
            </summary>
        </member>
        <member name="P:FastReport.Map.SizeRanges.RangeCount">
            <summary>
            Gets or sets the number of ranges.
            </summary>
        </member>
        <member name="P:FastReport.Map.SizeRanges.StartSize">
            <summary>
            Gets or sets the start size.
            </summary>
        </member>
        <member name="P:FastReport.Map.SizeRanges.EndSize">
            <summary>
            Gets or sets the end size.
            </summary>
        </member>
        <member name="P:FastReport.Map.SizeRanges.RangesAsString">
            <summary>
            Gets or sets ranges as a string.
            </summary>
        </member>
        <member name="M:FastReport.Map.SizeRanges.Assign(FastReport.Map.SizeRanges)">
            <summary>
            Copies the contents of another SizeRanges.
            </summary>
            <param name="src">The SizeRanges instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Map.SizeRanges.GetSize(System.Double)">
            <summary>
            Gets a size associated with given analytical value.
            </summary>
            <param name="value">The analytical value.</param>
            <returns>The size associated with this value, or 0 if no association found.</returns>
        </member>
        <member name="M:FastReport.Map.SizeRanges.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.SizeRanges"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Map.SizeRange">
            <summary>
            Represents a single size range.
            </summary>
        </member>
        <member name="P:FastReport.Map.SizeRange.Size">
            <summary>
            Gets or sets size of the range.
            </summary>
        </member>
        <member name="P:FastReport.Map.SizeRange.StartValue">
            <summary>
            Gets or sets start value of the range.
            </summary>
        </member>
        <member name="P:FastReport.Map.SizeRange.EndValue">
            <summary>
            Gets or sets end value of the range.
            </summary>
        </member>
        <member name="M:FastReport.Map.SizeRange.Assign(FastReport.Map.SizeRange)">
            <summary>
            Copies the contents of another SizeRange.
            </summary>
            <param name="src">The SizeRange instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.Map.SizeRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.SizeRange"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Map.SizeRange.#ctor(System.Single,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Map.SizeRange"/> class with a specified parameters.
            </summary>
            <param name="size">The size of the range.</param>
            <param name="startValue">The start value of the range.</param>
            <param name="endValue">The end value of the range.</param>
        </member>
        <member name="T:FastReport.Matrix.MatrixObject">
            <summary>
            Represents the matrix object that is used to print pivot table (also known as cross-tab).
            </summary>
            <remarks>
            The matrix consists of the following elements: columns, rows and data cells. Each element is
            represented by the <b>descriptor</b>. The <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class is used
            for columns and rows; the <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> is used for data cells.
            The <see cref="P:FastReport.Matrix.MatrixObject.Data"/> property holds three collections of descriptors - <b>Columns</b>,
            <b>Rows</b> and <b>Cells</b>.
            <para/>To create the matrix in a code, you should perform the following actions:
            <list type="bullet">
              <item>
                <description>create an instance of the <b>MatrixObject</b> and add it to the report;</description>
              </item>
              <item>
                <description>create descriptors for columns, rows and cells and add it to the
                collections inside the <see cref="P:FastReport.Matrix.MatrixObject.Data"/> property;</description>
              </item>
              <item>
                <description>call the <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method to create the matrix template
                that will be used to create a result;</description>
              </item>
              <item>
                <description>modify the matrix template (change captions, set the visual appearance).</description>
              </item>
            </list>
            <para/>To connect the matrix to a datasource, use the <see cref="P:FastReport.Matrix.MatrixObject.DataSource"/> property. If
            this property is not set, the result matrix will be empty. In this case you may use 
            the <see cref="E:FastReport.Matrix.MatrixObject.ManualBuild"/> event handler to fill the matrix.
            </remarks>
            <example>This example demonstrates how to create a matrix in a code.
            <code>
            // create an instance of MatrixObject
            MatrixObject matrix = new MatrixObject();
            matrix.Name = "Matrix1";
            // add it to the report title band of the first report page
            matrix.Parent = (report.Pages[0] as ReportPage).ReportTitle;
            
            // create two column descriptors
            MatrixHeaderDescriptor column = new MatrixHeaderDescriptor("[MatrixDemo.Year]");
            matrix.Data.Columns.Add(column);
            column = new MatrixHeaderDescriptor("[MatrixDemo.Month]");
            matrix.Data.Columns.Add(column);
            
            // create one row descriptor
            MatrixHeaderDescriptor row = new MatrixHeaderDescriptor("[MatrixDemo.Name]");
            matrix.Data.Rows.Add(row);
            
            // create one data cell
            MatrixCellDescriptor cell = new MatrixCellDescriptor("[MatrixDemo.Revenue]", MatrixAggregateFunction.Sum);
            matrix.Data.Cells.Add(cell);
            
            // connect matrix to a datasource
            matrix.DataSource = Report.GetDataSource("MatrixDemo");
            
            // create the matrix template
            matrix.BuildTemplate();
            
            // change the style
            matrix.Style = "Green";
            
            // change the column and row total's text to "Grand Total"
            matrix.Data.Columns[0].TemplateTotalCell.Text = "Grand Total";
            matrix.Data.Rows[0].TemplateTotalCell.Text = "Grand Total";
            </code>
            </example>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ColumnCount">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.RowCount">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.FixedRows">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.FixedColumns">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.CanBreak">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.GrowToBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.HandleMouseMove(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.HandleDragOver(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.HandleDragDrop(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.HandleKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Matrix.MatrixObject.ManualBuild">
            <summary>
            Allows to fill the matrix in code.
            </summary>
            <remarks>
            In most cases the matrix is connected to a datasource via the <see cref="P:FastReport.Matrix.MatrixObject.DataSource"/> 
            property. When you run a report, the matrix is filled with datasource values automatically.
            <para/>Using this event, you can put additional values to the matrix or even completely fill it
            with own values (if <see cref="P:FastReport.Matrix.MatrixObject.DataSource"/> is set to <b>null</b>. To do this, call the
            <b>Data.AddValue</b> method. See the <see cref="M:FastReport.Matrix.MatrixData.AddValue(System.Object[],System.Object[],System.Object[])"/>
            method for more details.
            </remarks>
            <example>This example shows how to fill a matrix with own values.
            <code>
            // suppose we have a matrix with one column, row and data cell.
            // provide 3 one-dimensional arrays with one element in each to the AddValue method
            Matrix1.Data.AddValue(
              new object[] { 1996 },
              new object[] { "Andrew Fuller" }, 
              new object[] { 123.45f });
            Matrix1.Data.AddValue(
              new object[] { 1997 },
              new object[] { "Andrew Fuller" }, 
              new object[] { 21.35f });
            Matrix1.Data.AddValue(
              new object[] { 1997 },
              new object[] { "Nancy Davolio" }, 
              new object[] { 421.5f });
            
            // this code will produce the following matrix:
            //               |  1996  |  1997  |
            // --------------+--------+--------+
            // Andrew Fuller |  123.45|   21.35|
            // --------------+--------+--------+
            // Nancy Davolio |        |  421.50|
            // --------------+--------+--------+
            </code>
            </example>
        </member>
        <member name="E:FastReport.Matrix.MatrixObject.ModifyResult">
            <summary>
            Allows to modify the prepared matrix elements such as cells, rows, columns.
            </summary>
        </member>
        <member name="E:FastReport.Matrix.MatrixObject.AfterTotals">
            <summary>
            Allows to modify the prepared matrix elements such as cells, rows, columns.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.AutoSize">
            <summary>
            Gets or sets a value that determines whether the matrix must calculate column/row sizes automatically.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.CellsSideBySide">
            <summary>
            Gets or sets a value that determines how to print multiple data cells.
            </summary>
            <remarks>
            This property can be used if matrix has two or more data cells. Default property value
            is <b>false</b> - that means the data cells will be stacked.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.KeepCellsSideBySide">
            <summary>
            Gets or sets a value indicating that the side-by-side cells must be kept together on the same page.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.DataSource">
            <summary>
            Gets or sets a data source.
            </summary>
            <remarks>
            When you create the matrix in the designer by drag-drop data columns into it,
            this property will be set automatically. However you need to set it if you create 
            the matrix in code.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.Filter">
            <summary>
            Gets the row filter expression.
            </summary>
            <remarks>
            This property can contain any valid boolean expression. If the expression returns <b>false</b>,
            the corresponding data row will be skipped.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ShowTitle">
            <summary>
            Gets or sets a value indicating whether to show a title row.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.Style">
            <summary>
            Gets or sets a matrix style.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.MatrixEvenStylePriority">
            <summary>
            Gets or sets even style priority for matrix cells.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.SplitRows">
            <summary>
            Gets or sets need split rows.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ManualBuildEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Matrix.MatrixObject.ManualBuild"/> event.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.Matrix.MatrixObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ModifyResultEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Matrix.MatrixObject.ModifyResult"/> event.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.Matrix.MatrixObject.ModifyResult"/> event for more details.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.AfterTotalsEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Matrix.MatrixObject.AfterTotals"/> event.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.Matrix.MatrixObject.AfterTotals"/> event for more details.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.Data">
            <summary>
            Gets the object that holds the collection of descriptors used
            to build a matrix.
            </summary>
            <remarks>
            See the <see cref="T:FastReport.Matrix.MatrixData"/> class for more details.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ColumnValues">
            <summary>
            Gets or sets array of values that describes the currently printing column.
            </summary>
            <remarks>
            Use this property when report is running. It can be used to highlight matrix elements
            depending on values of the currently printing column. To do this:
            <list type="bullet">
              <item>
                <description>select the cell that you need to highlight;</description>
              </item>
              <item>
                <description>click the "Highlight" button on the "Text" toolbar;</description>
              </item>
              <item>
                <description>add a new highlight condition. Use the <b>Matrix.ColumnValues</b> to 
                refer to the value you need to analyze. Note: these values are arrays of <b>System.Object</b>, 
                so you need to cast it to actual type before making any comparisons. Example of highlight
                condition: <c>(int)Matrix1.ColumnValues[0] == 2000</c>.
                </description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.RowValues">
            <summary>
            Gets or sets array of values that describes the currently printing row.
            </summary>
            <remarks>
            Use this property when report is running. It can be used to highlight matrix elements
            depending on values of the currently printing row. To do this:
            <list type="bullet">
              <item>
                <description>select the cell that you need to highlight;</description>
              </item>
              <item>
                <description>click the "Highlight" button on the "Text" toolbar;</description>
              </item>
              <item>
                <description>add a new highlight condition. Use the <b>Matrix.RowValues</b> to 
                refer to the value you need to analyze. Note: these values are arrays of <b>System.Object</b>, 
                so you need to cast it to actual type before making any comparisons. Example of highlight
                condition: <c>(string)Matrix1.RowValues[0] == "Andrew Fuller"</c>.
                </description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.ColumnIndex">
            <summary>
            Gets or sets the index of currently printing column.
            </summary>
            <remarks>
            This property may be used to print even columns with alternate color. To do this:
            <list type="bullet">
              <item>
                <description>select the cell that you need to highlight;</description>
              </item>
              <item>
                <description>click the "Highlight" button on the "Text" toolbar;</description>
              </item>
              <item>
                <description>add a new highlight condition that uses the <b>Matrix.ColumnIndex</b>,
                for example: <c>Matrix1.ColumnIndex % 2 == 1</c>.
                </description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixObject.RowIndex">
            <summary>
            Gets or sets the index of currently printing row.
            </summary>
            <remarks>
            This property may be used to print even rows with alternate color. To do this:
            <list type="bullet">
              <item>
                <description>select the cell that you need to highlight;</description>
              </item>
              <item>
                <description>click the "Highlight" button on the "Text" toolbar;</description>
              </item>
              <item>
                <description>add a new highlight condition that uses the <b>Matrix.RowIndex</b>,
                for example: <c>Matrix1.RowIndex % 2 == 1</c>.
                </description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.BuildTemplate">
            <summary>
            Creates or updates the matrix template.
            </summary>
            <remarks>
            Call this method after you modify the matrix descriptors using the <see cref="P:FastReport.Matrix.MatrixObject.Data"/>
            object's properties. 
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.OnAfterData(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.OnManualBuild(System.EventArgs)">
            <summary>
            This method fires the <b>ManualBuild</b> event and the script code connected to the <b>ManualBuildEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.OnModifyResult(System.EventArgs)">
            <summary>
            This method fires the <b>ModifyResult</b> event and the script code connected to the <b>ModifyResultEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.OnAfterTotals(System.EventArgs)">
            <summary>
            This method fires the <b>AfterTotals</b> event and the script code connected to the <b>AfterTotalsEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.AddValue(System.Object[],System.Object[],System.Object[])">
            <summary>
            Adds a value in the matrix.
            </summary>
            <param name="columnValues">Array of column values.</param>
            <param name="rowValues">Array of row values.</param>
            <param name="cellValues">Array of data values.</param>
            <remarks>
            This is a shortcut method to call the matrix <b>Data.AddValue</b>.
            See the <see cref="M:FastReport.Matrix.MatrixData.AddValue(System.Object[],System.Object[],System.Object[])"/> method for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.Value(System.Int32)">
            <summary>
            Gets the value of the data cell with the specified index.
            </summary>
            <param name="index">Zero-based index of the data cell.</param>
            <returns>The cell's value.</returns>
            <remarks>
            Use this method in the cell's expression if the cell has custom totals 
            (the total function is set to "Custom"). The example:
            <para/>Matrix1.Value(0) / Matrix1.Value(1)
            <para/>will return the result of dividing the first data cell's value by the second one.
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixObject"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Matrix.MatrixAggregateFunction">
            <summary>
            Specifies the aggregate function used in the <see cref="T:FastReport.Matrix.MatrixObject"/>.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.None">
            <summary>
            No aggregates are used.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Sum">
            <summary>
            Specifies the sum of values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Min">
            <summary>
            Specifies the minimum of values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Max">
            <summary>
            Specifies the maximum of values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Avg">
            <summary>
            Specifies the average of values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Count">
            <summary>
            Specifies the count of values.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixAggregateFunction.Custom">
            <summary>
            Specifies the custom function.
            </summary>
        </member>
        <member name="T:FastReport.Matrix.MatrixPercent">
            <summary>
            Determines how matrix percents are calculated.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixPercent.None">
            <summary>
            Do not calculate percent value.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixPercent.ColumnTotal">
            <summary>
            Calculate percent of the column total value.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixPercent.RowTotal">
            <summary>
            Calculate percent of the row total value.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixPercent.GrandTotal">
            <summary>
            Calculate percent of the grand total value.
            </summary>
        </member>
        <member name="T:FastReport.Matrix.MatrixCellDescriptor">
            <summary>
            The descriptor that is used to describe one matrix data cell.
            </summary>
            <remarks>
            The <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> class is used to define one data cell of the matrix.
            The key properties are <see cref="P:FastReport.Matrix.MatrixDescriptor.Expression"/> and <see cref="P:FastReport.Matrix.MatrixCellDescriptor.Function"/>. 
            To set visual appearance of the data cell, use the <see cref="P:FastReport.Matrix.MatrixDescriptor.TemplateCell"/> 
            property.
            <para/>The collection of descriptors used to represent the matrix data cells is stored
            in the <b>MatrixObject.Data.Cells</b> property.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixCellDescriptor.Function">
            <summary>
            Gets or sets an aggregate function used to calculate totals for this cell.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixCellDescriptor.Percent">
            <summary>
            Gets or sets a value that determines how to calculate the percent value for this cell.
            </summary>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.Assign(FastReport.Matrix.MatrixDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> class
            with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> class
            with specified expression.
            </summary>
            <param name="expression">The descriptor's expression.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.#ctor(System.String,FastReport.Matrix.MatrixAggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> class
            with specified expression and aggregate function.
            </summary>
            <param name="expression">The descriptor's expression.</param>
            <param name="function">The aggregate function.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixCellDescriptor.#ctor(System.String,FastReport.Matrix.MatrixAggregateFunction,FastReport.Matrix.MatrixPercent)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/> class
            with specified expression, aggregate function, and a percent.
            </summary>
            <param name="expression">The descriptor's expression.</param>
            <param name="function">The aggregate function.</param>
            <param name="percent">The percent setting.</param>
        </member>
        <member name="T:FastReport.Matrix.MatrixCells">
            <summary>
            Represents a collection of matrix data descriptors used in the <see cref="T:FastReport.Matrix.MatrixObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixCells.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.AddRange(FastReport.Matrix.MatrixCellDescriptor[])">
            <summary>
            Adds the specified descriptors to the end of this collection.
            </summary>
            <param name="range">Array of descriptors to add.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Add(FastReport.Matrix.MatrixCellDescriptor)">
            <summary>
            Adds a descriptor to the end of this collection.
            </summary>
            <param name="value">Descriptor to add.</param>
            <returns>Index of the added descriptor.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Insert(System.Int32,FastReport.Matrix.MatrixCellDescriptor)">
            <summary>
            Inserts a descriptor into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The descriptor to insert.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Remove(FastReport.Matrix.MatrixCellDescriptor)">
            <summary>
            Removes the specified descriptor from the collection.
            </summary>
            <param name="value">Descriptor to remove.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.IndexOf(FastReport.Matrix.MatrixCellDescriptor)">
            <summary>
            Returns the zero-based index of the first occurrence of a descriptor.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of descriptor within 
            the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Contains(FastReport.Matrix.MatrixCellDescriptor)">
            <summary>
            Determines whether a descriptor is in the collection.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns><b>true</b> if descriptor is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.ToArray">
            <summary>
            Copies the elements of this collection to a new array. 
            </summary>
            <returns>An array containing copies of this collection elements. </returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixCells.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Matrix.MatrixData">
            <summary>
            Contains a set of properties and methods to hold and manipulate the matrix descriptors.
            </summary>
            <remarks>
            This class contains three collections of descriptors such as <see cref="P:FastReport.Matrix.MatrixData.Columns"/>,
            <see cref="P:FastReport.Matrix.MatrixData.Rows"/> and <see cref="P:FastReport.Matrix.MatrixData.Cells"/>. Use collections' methods to add/remove
            descriptors. When you are done, call the <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/>
            method to refresh the matrix.
            <para/>To fill a matrix in code, use the <b>AddValue</b> method.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixData.Columns">
            <summary>
            Gets a collection of column descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method to refresh the matrix.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixData.Rows">
            <summary>
            Gets a collection of row descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method to refresh the matrix.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixData.Cells">
            <summary>
            Gets a collection of data cell descriptors.
            </summary>
            <remarks>
            Note: after you change something in this collection, call the 
            <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method to refresh the matrix.
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixData.Clear">
            <summary>
            Clears all descriptors.
            </summary>
        </member>
        <member name="M:FastReport.Matrix.MatrixData.AddValue(System.Object[],System.Object[],System.Object[])">
            <summary>
            Adds a value in the matrix.
            </summary>
            <param name="columnValues">Array of column values.</param>
            <param name="rowValues">Array of row values.</param>
            <param name="cellValues">Array of data values.</param>
            <remarks>
            The number of elements in an array passed to this method must be the same as
            a number of descriptors in the appropriate collection. That is, if your matrix
            has one column, two row and one cell descriptors (in <b>Columns</b>, <b>Rows</b> and
            <b>Cells</b> collections respectively), you have to pass one-element array for the
            <b>columnValues</b> param, two-element array for the <b>rowValues</b> and one-element
            array for the <b>cellValues</b>.
            </remarks>
            <example>This example demonstrates how to fill a simple matrix that contains one column,
            row and cell.
            <code>
            MatrixObject matrix;
            matrix.Data.AddValue(
              new object[] { 1996 },
              new object[] { "Andrew Fuller" }, 
              new object[] { 123.45f });
            
            // this will produce the following result:
            //               |   1996   |
            // --------------+----------+
            // Andrew Fuller |    123.45|
            // --------------+----------+
            </code>
            </example>
        </member>
        <member name="M:FastReport.Matrix.MatrixData.AddValue(System.Object[],System.Object[],System.Object[],System.Int32)">
            <summary>
            Adds a value in the matrix.
            </summary>
            <param name="columnValues">Array of column values.</param>
            <param name="rowValues">Array of row values.</param>
            <param name="cellValues">Array of data values.</param>
            <param name="dataRowNo">Datasource row index.</param>
            <remarks>
            See the <see cref="M:FastReport.Matrix.MatrixData.AddValue(System.Object[],System.Object[],System.Object[])"/> method for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Matrix.MatrixData.GetValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a value with specified column, row and cell indicies.
            </summary>
            <param name="columnIndex">Index of a column.</param>
            <param name="rowIndex">Index of a row.</param>
            <param name="cellIndex">Index of a cell.</param>
            <returns>The value of a cell.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixData.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the cell's value.
            </summary>
            <param name="columnIndex">Index of a column.</param>
            <param name="rowIndex">Index of a row.</param>
            <param name="cellValue">The new value.</param>
        </member>
        <member name="T:FastReport.Matrix.MatrixDescriptor">
            <summary>
            The base class for matrix element descriptors such as <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> and
            <see cref="T:FastReport.Matrix.MatrixCellDescriptor"/>.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixDescriptor.Expression">
            <summary>
            Gets or sets an expression which value will be used to fill the matrix.
            </summary>
            <remarks>
            <b>Expression</b> may be any valid expression. Usually it's a data column:
            <c>[DataSource.Column]</c>.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixDescriptor.TemplateColumn">
            <summary>
            Gets or sets the template column bound to this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixDescriptor.TemplateRow">
            <summary>
            Gets or sets the template row bound to this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixDescriptor.TemplateCell">
            <summary>
            Gets or sets the template cell bound to this descriptor.
            </summary>
            <remarks>
            Using this property, you may access the matrix cell which is bound to
            this descriptor. It may be useful to change the cell's appearance. 
            <note>
            Before using this property, you must initialize the matrix descriptors by
            calling the <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method.
            </note>
            </remarks>
            <example>
            <code>
            MatrixObject matrix;
            // change the fill color of the first matrix cell
            matrix.Data.Cells[0].TemplateCell.Fill = new SolidFill(Color.Red);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Matrix.MatrixDescriptor.Assign(FastReport.Matrix.MatrixDescriptor)">
            <summary>
            Assigns values from another descriptor.
            </summary>
            <param name="source">Descriptor to assign values from.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixDescriptor.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Matrix.MatrixHeader">
            <summary>
            Represents a collection of matrix header descriptors used in the <see cref="T:FastReport.Matrix.MatrixObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeader.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.AddRange(FastReport.Matrix.MatrixHeaderDescriptor[])">
            <summary>
            Adds the specified descriptors to the end of this collection.
            </summary>
            <param name="range">Array of descriptors to add.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Add(FastReport.Matrix.MatrixHeaderDescriptor)">
            <summary>
            Adds a descriptor to the end of this collection.
            </summary>
            <param name="value">Descriptor to add.</param>
            <returns>Index of the added descriptor.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Insert(System.Int32,FastReport.Matrix.MatrixHeaderDescriptor)">
            <summary>
            Inserts a descriptor into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The descriptor to insert.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Remove(FastReport.Matrix.MatrixHeaderDescriptor)">
            <summary>
            Removes the specified descriptor from the collection.
            </summary>
            <param name="value">Descriptor to remove.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.IndexOf(FastReport.Matrix.MatrixHeaderDescriptor)">
            <summary>
            Returns the zero-based index of the first occurrence of a descriptor.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of descriptor within 
            the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Contains(FastReport.Matrix.MatrixHeaderDescriptor)">
            <summary>
            Determines whether a descriptor is in the collection.
            </summary>
            <param name="value">The descriptor to locate in the collection.</param>
            <returns><b>true</b> if descriptor is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.ToArray">
            <summary>
            Copies the elements of this collection to a new array. 
            </summary>
            <returns>An array containing copies of this collection elements. </returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.GetTerminalIndices">
            <summary>
            Gets the list of indices of terminal items of this header.
            </summary>
            <returns>The list of indices.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.GetTerminalIndices(System.Object[])">
            <summary>
            Gets the list of indices of terminal items of the header with specified address.
            </summary>
            <param name="address">The address of a header.</param>
            <returns>The list of indices.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.RemoveItem(System.Object[])">
            <summary>
            Removes a header item with the address specified. 
            </summary>
            <param name="address">The address of a header.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Find(System.Object[])">
            <summary>
            Gets an index of header with the address specified. 
            </summary>
            <param name="address">The address of a header.</param>
            <returns>The index of header.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.FindOrCreate(System.Object[])">
            <summary>
            Gets an index of header with the address specified. If there is no such header item, it will be created.
            </summary>
            <param name="address">The address of a header.</param>
            <returns>The index of header.</returns>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeader.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Matrix.MatrixHeaderDescriptor">
            <summary>
            The descriptor that is used to describe one element of the matrix header.
            </summary>
            <remarks>
            The <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class is used to define one header element of the matrix
            (either the column element or row element). The key properties are 
            <see cref="P:FastReport.Matrix.MatrixDescriptor.Expression"/>, <see cref="P:FastReport.Matrix.MatrixHeaderDescriptor.Sort"/> and <see cref="P:FastReport.Matrix.MatrixHeaderDescriptor.Totals"/>. 
            <para/>To set visual appearance of the element, use the <see cref="P:FastReport.Matrix.MatrixDescriptor.TemplateCell"/> 
            property. To set visual appearance of the "total" element, use the <see cref="P:FastReport.Matrix.MatrixHeaderDescriptor.TemplateTotalCell"/> 
            property.
            <para/>The collection of descriptors used to represent the matrix header is stored
            in the <b>MatrixObject.Data.Columns</b> and <b>MatrixObject.Data.Rows</b> properties.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.Sort">
            <summary>
            Gets or sets the sort order of header values.
            </summary>
            <remarks>
            This property determines how the values displayed in this element are sorted. The default sort
            is ascending.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.Totals">
            <summary>
            Gets or sets a value indicating that this element has associated "total" element.
            </summary>
            <remarks>
            To access the matrix cell that is bound to the "Total" element, use the
            <see cref="P:FastReport.Matrix.MatrixHeaderDescriptor.TemplateTotalCell"/> property. It may be useful to change the
            "Total" text by something else.
            </remarks>
            <example>This example shows how to change the "Total" text of the total element.
            <code>
            MatrixObject matrix;
            matrix.Data.Rows[0].TemplateTotalCell.Text = "Grand Total";
            </code>
            </example>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.TotalsFirst">
            <summary>
            Gets or sets the value indicating whether the total values must be printed before the data.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.PageBreak">
            <summary>
            Gets or sets a value indicating that the page break must be printed before this element.
            </summary>
            <remarks>
            Page break is not printed before the very first element.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.SuppressTotals">
            <summary>
            Gets or sets a value that determines whether it is necessary to suppress totals
            if there is only one value in a group.
            </summary>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.TemplateTotalColumn">
            <summary>
            Gets or sets the template column bound to the "total" element of this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.TemplateTotalRow">
            <summary>
            Gets or sets the template row bound to the "total" element of this descriptor.
            </summary>
            <remarks>
            This property is for internal use; usually you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Matrix.MatrixHeaderDescriptor.TemplateTotalCell">
            <summary>
            Gets or sets the template cell bound to the "total" element of this descriptor.
            </summary>
            <remarks>
            This property may be useful to change the "Total" text by something else.
            <note>
            Before using this property, you must initialize the matrix descriptors by
            calling the <see cref="M:FastReport.Matrix.MatrixObject.BuildTemplate"/> method.
            </note>
            </remarks>
            <example>This example shows how to change the "Total" element.
            <code>
            MatrixObject matrix;
            matrix.Data.Rows[0].TemplateTotalCell.Text = "Grand Total";
            matrix.Data.Rows[0].TemplateTotalCell.Fill = new SolidFill(Color.Green);
            </code>
            </example>    
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.Assign(FastReport.Matrix.MatrixDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class with
            default settings.
            </summary>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class with
            specified expression.
            </summary>
            <param name="expression">The descriptor's expression.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class with
            specified expression and totals.
            </summary>
            <param name="expression">The descriptor's expression.</param>
            <param name="totals">Indicates whether to show the "total" element.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHeaderDescriptor.#ctor(System.String,FastReport.SortOrder,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Matrix.MatrixHeaderDescriptor"/> class with
            specified expression, sort order and totals.
            </summary>
            <param name="expression">The descriptor's expression.</param>
            <param name="sort">Sort order used to sort header values.</param>
            <param name="totals">Indicates whether to show the "total" element.</param>
        </member>
        <member name="M:FastReport.Matrix.MatrixHelper.UpdateTemplateSizes">
            <summary>
            Updates HeaderWidth, HeaderHeight, BodyWidth, BodyHeight properties.
            </summary>
        </member>
        <member name="T:FastReport.Matrix.MatrixEvenStylePriority">
            <summary>
            Describes how the even style is applied to a matrix.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixEvenStylePriority.Rows">
            <summary>
            The even style is applied to matrix rows.
            </summary>
        </member>
        <member name="F:FastReport.Matrix.MatrixEvenStylePriority.Columns">
            <summary>
            The even style is applied to matrix columns.
            </summary>
        </member>
        <member name="T:FastReport.MSChart.MSChartObject">
            <summary>
            Represents the chart object based on Microsoft Chart control.
            </summary>
            <remarks>
            FastReport uses Microsoft Chart library to display charts. This library is included 
            in .Net Framework 4.0. For .Net 3.5 it is available as a separate download here:
            http://www.microsoft.com/downloads/details.aspx?FamilyID=130f7986-bf49-4fe5-9ca8-910ae6ea442c
            <para/><note type="caution">This library requires .Net Framework 3.5 SP1.</note>
            <para/>To access Microsoft Chart object, use the <see cref="P:FastReport.MSChart.MSChartObject.Chart"/> property. It allows you
            to set up chart appearance. For more information on available properties, refer to the
            MS Chart documentation.
            <para/>Chart object may contain one or several <i>series</i>. Each series is represented by two objects: 
            <list type="bullet">
              <item>
                <description>the <b>Series</b> that is handled by MS Chart. It is stored in the
                  <b>Chart.Series</b> collection;</description>
              </item>
              <item>
                <description>the <see cref="T:FastReport.MSChart.MSChartSeries"/> object that provides data for MS Chart series.
                  It is stored in the <see cref="P:FastReport.MSChart.MSChartObject.Series"/> collection.</description>
              </item>
            </list>
            <para/>Do not operate series objects directly. To add or remove series, use 
            the <see cref="M:FastReport.MSChart.MSChartObject.AddSeries(System.Windows.Forms.DataVisualization.Charting.SeriesChartType)"/> and <see cref="M:FastReport.MSChart.MSChartObject.DeleteSeries(System.Int32)"/> methods. These methods 
            handle <b>Series</b> and <b>MSChartSeries</b> in sync.
            <para/>If you have a chart object on your Form and want to print it in FastReport, use
            the <see cref="M:FastReport.MSChart.MSChartObject.AssignChart(System.Windows.Forms.DataVisualization.Charting.Chart)"/> method.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.Border">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.Fill">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.Style">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.EvenStyle">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.HoverStyle">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.OnAfterInsert(FastReport.InsertFrom)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.OnMouseLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.Series">
            <summary>
            Gets the collection of <see cref="T:FastReport.MSChart.MSChartSeries"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.Chart">
            <summary>
            Gets a reference to the MS Chart object.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.AutoSeriesForce">
            <summary>
            Gets or set Force automatically created series.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.Filter">
            <summary>
            Gets or sets the filter expression.
            </summary>
            <remarks>
            This filter will be applied to all series in chart. You may also use the series'
            <see cref="P:FastReport.MSChart.MSChartSeries.Filter"/> property to filter each series individually.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.AlignXValues">
            <summary>
            Gets or sets a value indicating that all series' data point should be aligned by its X value.
            </summary>
            <remarks>
            Using this property is necessary to print stacked type series. These series must have
            equal number of data points, and the order of data points must be the same for all series.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.AutoSeriesColumn">
            <summary>
            Gets or set the data column or expression for automatically created series.
            </summary>
            <remarks>
            In order to create auto-series, you need to define one series that will be used as a 
            template for new series, and set up the <see cref="P:FastReport.MSChart.MSChartObject.AutoSeriesColumn"/> property.
            The value of this property will be a name of new series. If there is no series 
            with such name yet, the new series will be added.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.AutoSeriesColor">
            <summary>
            Gets or set the color for auto-series.
            </summary>
            <remarks>
            If no color is specified, the new series will use the palette defined in the chart.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartObject.AutoSeriesSortOrder">
            <summary>
            Gets or sets sort order for auto-series.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.AddSeries(System.Windows.Forms.DataVisualization.Charting.SeriesChartType)">
            <summary>
            Adds a new series.
            </summary>
            <param name="chartType">The type of series.</param>
            <returns>The new <b>MSChartSeries</b> object.</returns>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.DeleteSeries(System.Int32)">
            <summary>
            Deletes a series at a specified index.
            </summary>
            <param name="index">Index of series.</param>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.AssignChart(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Assigns chart appearance, series and data from the
            <b>System.Windows.Forms.DataVisualization.Charting.Chart</b> object.
            </summary>
            <param name="sourceChart">Chart object to assign data from.</param>
            <remarks>
            Use this method if you have a chart in your application and want to print it in FastReport.
            To do this, put an empty MSChartObject in your report and execute the following code:
            <code>
            report.Load("...");
            MSChartObject reportChart = report.FindObject("MSChart1") as MSChartObject;
            reportChart.AssignChart(applicationChart);
            report.Show();
            </code>
            </remarks>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.MSChart.MSChartObject"/> with default settings.
            </summary>
        </member>
        <member name="T:FastReport.MSChart.SparklineObject">
            <summary>
            Represents the small chart object (called sparkline) fully based on MSChartObject.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.SparklineObject.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.SparklineObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.SparklineObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.MSChart.SparklineObject"/> with default settings.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.ChartEditorControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.ChartEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.MSChart.ChartEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GalleryForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.GalleryForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.MSChart.GalleryForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.MSChartObjectEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.MSChartObjectEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.MSChart.MSChartObjectEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.MSChart.SortBy">
            <summary>
            Specifies how the series points are sorted.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.SortBy.None">
            <summary>
            Points are not sorted.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.SortBy.XValue">
            <summary>
            Points are sorted by X value.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.SortBy.YValue">
            <summary>
            Points are sorted by Y value.
            </summary>
        </member>
        <member name="T:FastReport.MSChart.ChartSortOrder">
            <summary>
            Specifies the direction in which the series points are sorted.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.ChartSortOrder.Ascending">
            <summary>
            Points are sorted in ascending order.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.ChartSortOrder.Descending">
            <summary>
            Points are sorted in descending order.
            </summary>
        </member>
        <member name="T:FastReport.MSChart.GroupBy">
            <summary>
            Specifies how the series points are grouped.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.None">
            <summary>
            Points are not grouped.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.XValue">
            <summary>
            Points are grouped by X value.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.Number">
            <summary>
            Points are grouped by number specified in the <see cref="P:FastReport.MSChart.MSChartSeries.GroupInterval"/>.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.Years">
            <summary>
            Points are grouped by Years.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.Months">
            <summary>
            Points are grouped by Months.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.Weeks">
            <summary>
            Points are grouped by Weeks.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.Days">
            <summary>
            Points are grouped by Days.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.Hours">
            <summary>
            Points are grouped by Hours.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.Minutes">
            <summary>
            Points are grouped by Minutes.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.Seconds">
            <summary>
            Points are grouped by Seconds.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.GroupBy.Milliseconds">
            <summary>
            Points are grouped by Milliseconds.
            </summary>
        </member>
        <member name="T:FastReport.MSChart.PieExplode">
            <summary>
            Specifies which pie value to explode.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.PieExplode.None">
            <summary>
            Do not explode pie values.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.PieExplode.BiggestValue">
            <summary>
            Explode the biggest value.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.PieExplode.LowestValue">
            <summary>
            Explode the lowest value.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.PieExplode.SpecificValue">
            <summary>
            Explode the value specified in the <see cref="P:FastReport.MSChart.MSChartSeries.PieExplodeValue"/> property.
            </summary>
        </member>
        <member name="T:FastReport.MSChart.Collect">
            <summary>
            Specifies which data points to collect into one point.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.Collect.None">
            <summary>
            Do not collect points.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.Collect.TopN">
            <summary>
            Show top N points (<i>N</i> value is specified in the <see cref="P:FastReport.MSChart.MSChartSeries.CollectValue"/>
            property), collect other points into one.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.Collect.BottomN">
            <summary>
            Show bottom N points (<i>N</i> value is specified in the <see cref="P:FastReport.MSChart.MSChartSeries.CollectValue"/>
            property), collect other points into one.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.Collect.LessThan">
            <summary>
            Collect points which have Y value less than specified 
            in the <see cref="P:FastReport.MSChart.MSChartSeries.CollectValue"/> property.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.Collect.LessThanPercent">
            <summary>
            Collect points which have Y value less than percent specified 
            in the <see cref="P:FastReport.MSChart.MSChartSeries.CollectValue"/> property.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.Collect.GreaterThan">
            <summary>
            Collect points which have Y value greater than specified 
            in the <see cref="P:FastReport.MSChart.MSChartSeries.CollectValue"/> property.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.Collect.GreaterThanPercent">
            <summary>
            Collect points which have Y value greater than percent specified 
            in the <see cref="P:FastReport.MSChart.MSChartSeries.CollectValue"/> property.
            </summary>
        </member>
        <member name="T:FastReport.MSChart.MSChartSeries">
            <summary>
            Represents a MS Chart series wrapper.
            </summary>
            <remarks>
            This class provides a data for MS Chart series. The series itself is stored inside the
            MS Chart and is accessible via the <see cref="P:FastReport.MSChart.MSChartSeries.SeriesSettings"/> property.
            <para/>You don't need to create an instance of this class directly. Instead, use the
            <see cref="M:FastReport.MSChart.MSChartObject.AddSeries(System.Windows.Forms.DataVisualization.Charting.SeriesChartType)"/> method. 
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.Filter">
            <summary>
            Gets os sets the data filter expression.
            </summary>
            <remarks>
            The filter is applied for this series only. You can also use the
            <see cref="P:FastReport.MSChart.MSChartObject.Filter"/> property to set a filter that will be applied to all
            series in a chart.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.AutoSeriesColumn">
            <summary>
            Gets or set the data column or expression for automatically created series.
            </summary>
            <remarks>
            In order to create auto-series, you need to define one series that will be used as a 
            template for new series, and set up the <see cref="P:FastReport.MSChart.MSChartSeries.AutoSeriesColumn"/> property.
            The value of this property will be a name of new series. If there is no series 
            with such name yet, the new series will be added.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.SortBy">
            <summary>
            Gets or sets the sort method used to sort data points.
            </summary>
            <remarks>
            You have to specify the <see cref="P:FastReport.MSChart.MSChartSeries.SortOrder"/> property as well. Data points in this series
            will be sorted according selected sort criteria and order.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.AutoSeriesForce">
            <summary>
            Gets or set Force automatically created series.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.SortOrder">
            <summary>
            Gets or sets the sort order used to sort data points.
            </summary>
            <remarks>
            You have to specify the <see cref="P:FastReport.MSChart.MSChartSeries.SortBy"/> property as well. Data points in this series
            will be sorted according selected sort criteria and order.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.GroupBy">
            <summary>
            Gets or sets the group method used to group data points.
            </summary>
            <remarks>
            This property is mainly used when series is filled with data with several identical X values.
            In this case, you need to set the property to <b>XValue</b>. All identical data points will be 
            grouped into one point, their Y values will be summarized. You can choose the summary function
            using the <see cref="P:FastReport.MSChart.MSChartSeries.GroupFunction"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.GroupInterval">
            <summary>
            Gets or sets the group interval.
            </summary>
            <remarks>
            This value is used if <see cref="P:FastReport.MSChart.MSChartSeries.GroupBy"/> property is set to <b>Number</b>.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.GroupFunction">
            <summary>
            Gets or sets the function used to group data points.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.Collect">
            <summary>
            Gets or sets the collect method used to collect several data points into one.
            </summary>
            <remarks>
            This instrument for data processing allows to collect several series points into one point.
            The collected point will be displaed using the text specified in the <see cref="P:FastReport.MSChart.MSChartSeries.CollectedItemText"/>
            property and color specified in the <see cref="P:FastReport.MSChart.MSChartSeries.CollectedItemColor"/> property.
            <para/>For example, to display top 5 values, set this property to <b>TopN</b> and specify
            N value (5) in the <see cref="P:FastReport.MSChart.MSChartSeries.CollectValue"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.CollectValue">
            <summary>
            Gets or sets the collect value used to collect several data points into one.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.MSChart.MSChartSeries.Collect"/> property is set to any value other than <b>None</b>.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.CollectedItemText">
            <summary>
            Gets or sets the text for the collected value.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.CollectedItemColor">
            <summary>
            Gets or sets the color for the collected value.
            </summary>
            <remarks>
            If this property is set to <b>Transparent</b> (by default), the default palette color
            will be used to display a collected point.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.PieExplode">
            <summary>
            Gets or sets the method used to explode values in pie-type series.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.PieExplodeValue">
            <summary>
            Gets or sets the value that must be exploded.
            </summary>
            <remarks>
            This property is used if <see cref="P:FastReport.MSChart.MSChartSeries.PieExplode"/> property is set
            to <b>SpecificValue</b>.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.XValue">
            <summary>
            Gets or sets the data column or expression that returns the X value of data point.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.YValue1">
            <summary>
            Gets or sets the data column or expression that returns the first Y value of data point.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.YValue2">
            <summary>
            Gets or sets the data column or expression returns the second Y value of data point.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.YValue3">
            <summary>
            Gets or sets the data column or expression returns the third Y value of data point.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.YValue4">
            <summary>
            Gets or sets the data column or expression returns the fourth Y value of data point.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.Color">
            <summary>
            Gets or sets the data column or expression that returns the color of data point.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.Label">
            <summary>
            Gets or sets the data column or expression returns the label value of data point.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.SeriesSettings">
            <summary>
            Gets a reference to MS Chart <b>Series</b> object.
            </summary>
            <remarks>
            Use this property to set many options available for the <b>Series</b> object. These options
            include: visual appearance, labels, marks, value types. Refer to the Microsoft Chart control
            documentation to learn more.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.YValuesPerPoint">
            <summary>
            Gets a number of Y value per data point.
            </summary>
            <remarks>
            Number of Y values depends on series type. Most of series have only one Y value. Financial
            series such as Stock and Candlestick, use four Y values.
            </remarks>
        </member>
        <member name="P:FastReport.MSChart.MSChartSeries.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.MSChartSeries.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartSeries.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartSeries.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartSeries.ClearValues">
            <summary>
            Clears all data points in this series.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.MSChartSeries.AddValue(System.Object,System.Object[])">
            <summary>
            Adds a data point with specified X and Y values.
            </summary>
            <param name="xValue">X value.</param>
            <param name="yValues">Array of Y values.</param>
            <remarks>
            Note: number of values in the <b>yValues</b> parameter must be the same as value returned 
            by the <see cref="P:FastReport.MSChart.MSChartSeries.YValuesPerPoint"/> property.
            </remarks>
        </member>
        <member name="M:FastReport.MSChart.MSChartSeries.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.MSChart.MSChartSeries.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:FastReport.MSChart.MSChartSeries"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.MSChart.SeriesCollection">
            <summary>
            Represents a collection of <see cref="T:FastReport.MSChart.MSChartSeries"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.MSChart.SeriesCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.MSChart.SeriesCollection.ResetData">
            <summary>
            Resets series data.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.SeriesCollection.ProcessData">
            <summary>
            Processes the current data row.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.SeriesCollection.FinishData">
            <summary>
            Finishes the series data.
            </summary>
        </member>
        <member name="F:FastReport.MSChart.SeriesEditorControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.MSChart.SeriesEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.MSChart.SeriesEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.PageBase">
            <summary>
            Base class for report pages and dialog forms.
            </summary>
        </member>
        <member name="P:FastReport.PageBase.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.PageBase.Anchor">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.PageBase.Dock">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.PageBase.SnapSize">
            <summary>
            Gets the snap size for this page.
            </summary>
        </member>
        <member name="M:FastReport.PageBase.GetPageDesignerType">
            <summary>
            Gets a page designer for this page type.
            </summary>
            <returns>The page designer.</returns>
        </member>
        <member name="M:FastReport.PageBase.SetDefaults">
            <summary>
            This method is called by the designer when you create a new page. 
            </summary>
            <remarks>
            You may create the default page layout (add default bands, set default page size, etc).
            </remarks>
        </member>
        <member name="M:FastReport.PageBase.Refresh">
            <summary>
            Causes the page to refresh in the preview window.
            </summary>
            <remarks>
            Call this method when you handle object's MouseMove, MouseDown, MouseUp, MouseEnter, MouseLeave events
            and want to refresh the preview window.
            <note type="caution">
            If you have changed some objects on a page, the <b>Refresh</b> method will not save the changes. 
            This means when you print or export the page, you will see original (unmodified) page content.
            If you want to save the changes, you have to use the <see cref="M:FastReport.PageBase.Modify"/> method instead.
            </note>
            </remarks>
        </member>
        <member name="M:FastReport.PageBase.Modify">
            <summary>
            Modifies the page content and refresh it in the preview window.
            </summary>
            <remarks>
            Call this method when you handle object's Click, MouseDown or MouseUp events
            and want to modify an object and refresh the preview window. 
            </remarks>
        </member>
        <member name="M:FastReport.PageBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PageBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Preview.PreparedPages">
            <summary>
            Represents the pages of a prepared report.
            </summary>
            <remarks>
            <para>Prepared page is a page that you can see in the preview window. Prepared pages can be
            accessed via <see cref="P:FastReport.Report.PreparedPages"/> property.</para>
            <para>The common scenarios of using this object are:
            <list type="bullet">
              <item>
                <description>Working with prepared pages after the report is finished: load 
                (<see cref="M:FastReport.Preview.PreparedPages.Load(System.String)"/>) or save (<see cref="M:FastReport.Preview.PreparedPages.Save(System.String)"/>) pages 
                from/to a .fpx file, get a page with specified index to work with its objects 
                (<see cref="M:FastReport.Preview.PreparedPages.GetPage(System.Int32)"/>); modify specified page (<see cref="M:FastReport.Preview.PreparedPages.ModifyPage(System.Int32,FastReport.ReportPage)"/>).
                </description>
              </item>
              <item>
                <description>Using the <see cref="M:FastReport.Preview.PreparedPages.AddPage(FastReport.ReportPage)"/>, <see cref="M:FastReport.Preview.PreparedPages.AddSourcePage(FastReport.ReportPage)"/>, <see cref="M:FastReport.Preview.PreparedPages.AddBand(FastReport.BandBase)"/>
                methods while report is generating to produce an output.
                </description>
              </item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.Preview.PreparedPages.Count">
            <summary>
            Gets the number of pages in the prepared report.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreparedPages.AddPageAction">
            <summary>
            Specifies an action that will be performed on <see cref="M:FastReport.Preview.PreparedPages.AddPage(FastReport.ReportPage)"/> method call.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreparedPages.CanUploadToCache">
            <summary>
            Gets or sets a value indicating whether the prepared pages can be uploaded to the file cache.
            </summary>
            <remarks>
            <para>This property is used while report is generating.</para>
            <para>Default value for this property is <b>true</b>. That means the prepared pages may be uploaded to
            the file cache if needed. To prevent this (for example, if you need to access some objects
            on previously generated pages), set the property value to <b>false</b>.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.AddSourcePage(FastReport.ReportPage)">
            <summary>
            Adds a source page to the prepared pages dictionary.
            </summary>
            <param name="page">The template page to add.</param>
            <remarks>
            Call this method before using <b>AddPage</b> and <b>AddBand</b> methods. This method adds
            a page to the dictionary that will be used to decrease size of the prepared report.
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.AddPage(FastReport.ReportPage)">
            <summary>
            Adds a new page.
            </summary>
            <param name="page">The original (template) page to add.</param>
            <remarks>
            Call the <see cref="M:FastReport.Preview.PreparedPages.AddSourcePage(FastReport.ReportPage)"/> method before adding a page. This method creates 
            a new output page with settings based on <b>page</b> parameter.
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.AddBand(FastReport.BandBase)">
            <summary>
            Prints a band with all its child objects.
            </summary>
            <param name="band">The band to print.</param>
            <returns><b>true</b> if band was printed; <b>false</b> if it can't be printed 
            on current page due to its <b>PrintOn</b> property value.</returns>
            <remarks>
            Call the <see cref="M:FastReport.Preview.PreparedPages.AddPage(FastReport.ReportPage)"/> method before adding a band.
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.GetPage(System.Int32)">
            <summary>
            Gets a page with specified index.
            </summary>
            <param name="index">Zero-based index of page.</param>
            <returns>The page with specified index.</returns>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.GetPageSize(System.Int32)">
            <summary>
            Gets the size of specified page, in pixels.
            </summary>
            <param name="index">Index of page.</param>
            <returns>the size of specified page, in pixels.</returns>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.ModifyPage(System.Int32,FastReport.ReportPage)">
            <summary>
            Replaces the prepared page with specified one.
            </summary>
            <param name="index">The index of prepared page to replace.</param>
            <param name="newPage">The new page to replace with.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.ModifyPageSize(System.String)">
            <summary>
            Modify the prepared page with new sizes.
            </summary>
            <param name="name">The name of prepared page to reSize.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.RemovePage(System.Int32)">
            <summary>
            Removes a page with the specified index.
            </summary>
            <param name="index">The zero-based index of page to remove.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Save(System.IO.Stream)">
            <summary>
            Saves prepared pages to a stream.
            </summary>
            <param name="stream">The stream to save to.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Save(System.String)">
            <summary>
            Saves prepared pages to a .fpx file.
            </summary>
            <param name="fileName">The name of the file to save to.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Load(System.IO.Stream)">
            <summary>
            Loads prepared pages from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Load(System.String)">
            <summary>
            Loads prepared pages from a .fpx file.
            </summary>
            <param name="fileName">The name of the file to load from.</param>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.Clear">
            <summary>
            Clears the prepared report's pages.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreparedPages.#ctor(FastReport.Report)">
            <summary>
            Creates the pages of a prepared report
            </summary>
            <param name="report"></param>
        </member>
        <member name="M:FastReport.Preview.OutlineControl.#ctor">
            <summary>
            Initializes a new instance of the <b>OutlineControl</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Preview.PreviewControl">
            <summary>
            Represents a Windows Forms control used to preview a report.
            </summary>
            <remarks>
            To use this control, place it on a form and link it to a report using the report's
            <see cref="P:FastReport.Report.Preview"/> property. To show a report, call 
            the <b>Report.Show</b> method:
            <code>
            report1.Preview = previewControl1;
            report1.Show();
            </code>
            <para>Use this control's methods such as <see cref="M:FastReport.Preview.PreviewControl.Print"/>, <see cref="M:FastReport.Preview.PreviewControl.Save"/> etc. to
            handle the preview. Call <see cref="M:FastReport.Preview.PreviewControl.Clear"/> method to clear the preview.</para>
            <para>You can specify whether the standard toolbar is visible in the <see cref="P:FastReport.Preview.PreviewControl.ToolbarVisible"/>
            property. The <see cref="P:FastReport.Preview.PreviewControl.StatusbarVisible"/> property allows you to hide/show the statusbar.
            </para>
            </remarks>
        </member>
        <member name="E:FastReport.Preview.PreviewControl.PageChanged">
            <summary>
            Occurs when current page number is changed.
            </summary>
        </member>
        <member name="E:FastReport.Preview.PreviewControl.OnPrint">
            <summary>
            Occurs when Print button clicked.
            </summary>
        </member>
        <member name="E:FastReport.Preview.PreviewControl.OnExport">
            <summary>
            Occurs when Export button clicked.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.Report">
            <summary>
            Gets a reference to the report.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.PageBorderColor">
            <summary>
            Obsolete. Gets or sets the color of page border.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.ActivePageBorderColor">
            <summary>
            Gets or sets the color of active page border.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.PageOffset">
            <summary>
            Gets or sets the first page offset from the top left corner of the control.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.ToolbarVisible">
            <summary>
            Gets or sets a value indicating whether the toolbar is visible.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.StatusbarVisible">
            <summary>
            Gets or sets a value indicating whether the statusbar is visible.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.OutlineVisible">
            <summary>
            Gets or sets a value indicating whether the outline control is visible.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.Buttons">
            <summary>
            Specifies the set of buttons available in the toolbar.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.Exports">
            <summary>
            Specifies the set of exports that will be available in the preview's "save" menu.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.Clouds">
            <summary>
            Specifies the set of exports in clouds that will be available in the preview's "save" menu.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.FastScrolling">
            <summary>
            Gets or sets a value indicating whether the fast scrolling method should be used.
            </summary>
            <remarks>
            If you enable this property, the gradient background will be disabled.
            </remarks>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.UIStyle">
            <summary>
            Gets or sets the visual style.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.UseBackColor">
            <summary>
            Gets or sets a value indicating that the BackColor property must be used to draw the background area.
            </summary>
            <remarks>
            By default, the background area is drawn using the color defined in the current <b>UIStyle</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.ToolBar">
            <summary>
            Gets the preview window's toolbar.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.StatusBar">
            <summary>
            Gets the preview window's statusbar.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.SaveInitialDirectory">
            <summary>
            Gets or sets the initial directory that is displayed by a save file dialog.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.AddTab(FastReport.Report,System.String)">
            <summary>
            Adds a new report tab to the preview control.
            </summary>
            <param name="report">The <b>Report</b> object that contains the prepared report.</param>
            <param name="text">The title for the new tab.</param>
            <remarks>
            Prepare the report using its <b>Prepare</b> method before you pass it to the <b>report</b> parameter.
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.AddTab(FastReport.Report,System.String,System.Boolean)">
            <summary>
            Adds a new report tab to the preview control.
            </summary>
            <param name="report">The <b>Report</b> object that contains the prepared report.</param>
            <param name="text">The title for the new tab.</param>
            <param name="setActive">If <b>true</b>, makes the new tab active.</param>
            <remarks>
            Prepare the report using its <b>Prepare</b> method before you pass it to the <b>report</b> parameter.
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.SwitchToTab(System.String)">
            <summary>
            Switches to the tab with specified text.
            </summary>
            <param name="text">Text of the tab.</param>
            <returns><b>true</b> if the tab with specified text exists, or <b>false</b> if there is no such tab.</returns>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.DeleteTab(System.String)">
            <summary>
            Deletes the report tab with specified text.
            </summary>
            <param name="text">The text of the tab.</param>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.TabExists(System.String)">
            <summary>
            Checks if the tab with specified text exists.
            </summary>
            <param name="text">The text of the tab.</param>
            <returns><b>true</b> if the tab exists.</returns>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.ShowStatus(System.String)">
            <summary>
            Displays the text in the status bar.
            </summary>
            <param name="text">Text to display.</param>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Focus">
            <summary>
            Sets the focus to the preview control.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Print">
            <summary>
            Prints the current report.
            </summary>
            <returns><b>true</b> if report was printed; <b>false</b> if user cancels the "Print" dialog.</returns>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Save">
            <summary>
            Saves the current report to a .fpx file using the "Save FIle" dialog.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Save(System.String)">
            <summary>
            Saves the current report to a specified .fpx file.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Save(System.IO.Stream)">
            <summary>
            Saves the current report to a stream.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Load">
            <summary>
            Loads the report from a .fpx file using the "Open File" dialog.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Load(System.String)">
            <summary>
            Loads the report from a specified .fpx file.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Load(System.IO.Stream)">
            <summary>
            Load the report from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.SendEmail">
            <summary>
            Sends an email.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Find">
            <summary>
            Finds the text in the current report using the "Find Text" dialog.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Find(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the specified text in the current report.
            </summary>
            <param name="text">Text to find.</param>
            <param name="matchCase">A value indicating whether the search is case-sensitive.</param>
            <param name="wholeWord">A value indicating whether the search matches whole words only.</param>
            <returns><b>true</b> if text found.</returns>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.FindNext">
            <summary>
            Finds the next occurence of text specified in the <b>Find</b> method.
            </summary>
            <returns><b>true</b> if text found.</returns>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.First">
            <summary>
            Navigates to the first page.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Prior">
            <summary>
            Navigates to the previuos page.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Next">
            <summary>
            Navigates to the next page.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Last">
            <summary>
            Navigates to the last page.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.PageNo">
            <summary>
            Gets or sets the current page number.
            </summary>
            <remarks>
            This value is 1-based.
            </remarks>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.PageCount">
            <summary>
            Gets the pages count in the current report.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewControl.Zoom">
            <summary>
            Gets or sets the zoom factor.
            </summary>
            <remarks>
            <b>1</b> corresponds to 100% zoom.
            </remarks>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.ZoomIn">
            <summary>
            Zooms in.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.ZoomOut">
            <summary>
            Zooms out.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.ZoomPageWidth">
            <summary>
            Zooms to fit the page width.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.ZoomWholePage">
            <summary>
            Zooms to fit the whole page.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.EditPage">
            <summary>
            Edits the current page in the designer.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.CopyPage">
            <summary>
            Copies the current page in preview.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.DeletePage">
            <summary>
            Removes the current page in preview.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Design">
            <summary>
            Edits the current report in the designer.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.EditWatermark">
            <summary>
            Edits the watermark.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.PageSetup">
            <summary>
            Edits the page settings.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.PositionTo(System.Int32,System.Drawing.PointF)">
            <summary>
            Navigates to the specified position inside a specified page.
            </summary>
            <param name="pageNo">The page number (1-based).</param>
            <param name="point">The position inside a page, in pixels.</param>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.Clear">
            <summary>
            Clears the preview.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.RefreshReport">
            <summary>
            Refresh the report.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Preview.PreviewControl"/> class.
            </summary>
        </member>
        <member name="F:FastReport.Preview.PreviewControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Preview.PreviewControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FastReport.Preview.PreviewTab.SaveInitialDirectory">
            <summary>
            Gets or sets the initial directory that is displayed by a save file dialog.
            </summary>
        </member>
        <member name="T:FastReport.Preview.AddPageAction">
            <summary>
            Specifies an action that will be performed on <b>PreparedPages.AddPage</b> method call.
            </summary>
        </member>
        <member name="F:FastReport.Preview.AddPageAction.WriteOver">
            <summary>
            Do not add the new prepared page if possible, increment the <b>CurPage</b> instead.
            </summary>
        </member>
        <member name="F:FastReport.Preview.AddPageAction.Add">
            <summary>
            Add the new prepared page.
            </summary>
        </member>
        <member name="T:FastReport.Report">
            <summary>
            Represents a report object.
            </summary>
            <remarks>
            <para>The instance of this class contains a report. Here are some common
            actions that can be performed with this object:</para>
            <list type="bullet">
              <item>
                <description>To load a report, use the <see cref="M:FastReport.Report.Load(System.String)"/>
                method or call static <see cref="M:FastReport.Report.FromFile(System.String)"/> method. </description>
              </item>
              <item>
                <description>To save a report, call the <see cref="M:FastReport.Report.Save(System.String)"/> method.</description>
              </item>
              <item>
                <description>To register application dataset for use it in a report, call one of the
                <b>RegisterData</b> methods.</description>
              </item>
              <item>
                <description>To pass some parameter to a report, use the
                <see cref="M:FastReport.Report.SetParameterValue(System.String,System.Object)"/> method.</description>
              </item>
              <item>
                <description>To design a report, call the <see cref="M:FastReport.Report.Design"/> method.</description>
              </item>
              <item>
                <description>To run a report and preview it, call the <see cref="M:FastReport.Report.Show"/> method.
                Another way is to call the <see cref="M:FastReport.Report.Prepare"/> method, then call the
                <see cref="M:FastReport.Report.ShowPrepared"/> method.</description>
              </item>
              <item>
                <description>To run a report and print it, call the <see cref="M:FastReport.Report.Print"/> method.
                Another way is to call the <see cref="M:FastReport.Report.Prepare"/> method, then call the
                <see cref="M:FastReport.Report.PrintPrepared"/> method.</description>
              </item>
              <item>
                <description>To load/save prepared report, use one of the <b>LoadPrepared</b> and
                <b>SavePrepared</b> methods.</description>
              </item>
              <item>
                <description>To set up some global properties, use the <see cref="T:FastReport.Utils.Config"/> static class
                or <see cref="T:FastReport.EnvironmentSettings"/> component that you can use in the Visual Studio IDE.
                </description>
              </item>
            </list>
            <para/>The report consists of one or several report pages (pages of the
            <see cref="T:FastReport.ReportPage"/> type) and/or dialog forms (pages of the <see cref="T:FastReport.Dialog.DialogPage"/> type).
            They are stored in the <see cref="P:FastReport.Report.Pages"/> collection. In turn, each page may contain report
            objects. See the example below how to create a simple report in code.
            </remarks>
            <example>This example shows how to create a report instance, load it from a file,
            register the application data, run and preview.
            <code>
            Report report = new Report();
            report.Load("reportfile.frx");
            report.RegisterData(application_dataset);
            report.Show();
            </code>
            <para/>This example shows how to create simple report in code.
            <code>
            Report report = new Report();
            // create the report page
            ReportPage page = new ReportPage();
            page.Name = "ReportPage1";
            // set paper width and height. Note: these properties are measured in millimeters.
            page.PaperWidth = 210;
            page.PaperHeight = 297;
            // add a page to the report
            report.Pages.Add(page);
            // create report title
            page.ReportTitle = new ReportTitleBand();
            page.ReportTitle.Name = "ReportTitle1";
            page.ReportTitle.Height = Units.Millimeters * 10;
            // create Text object and put it to the title
            TextObject text = new TextObject();
            text.Name = "Text1";
            text.Bounds = new RectangleF(0, 0, Units.Millimeters * 100, Units.Millimeters * 5);
            page.ReportTitle.Objects.Add(text);
            // create data band
            DataBand data = new DataBand();
            data.Name = "Data1";
            data.Height = Units.Millimeters * 10;
            // add data band to a page
            page.Bands.Add(data);
            </code>
            </example>
        </member>
        <member name="P:FastReport.Report.Designer">
            <summary>
            Gets a reference to the report designer.
            </summary>
            <remarks>
            This property can be used when report is designing. In other cases it returns <b>null</b>.
            </remarks>
        </member>
        <member name="M:FastReport.Report.Design">
            <summary>
            Runs the report designer.
            </summary>
            <returns><b>true</b> if report was modified, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Report.Design(System.Boolean)">
            <summary>
            Runs the report designer.
            </summary>
            <param name="modal">A value indicates whether the designer should run modally.</param>
            <returns><b>true</b> if report was modified, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Report.Design(System.Windows.Forms.Form)">
            <summary>
            Runs the report designer.
            </summary>
            <param name="mdiParent">The main MDI form which will be a parent for the designer.</param>
            <returns><b>true</b> if report was modified, otherwise <b>false</b>.</returns>
        </member>
        <member name="P:FastReport.Report.EmailSettings">
            <summary>
            Gets the email settings such as recipients, subject, message body.
            </summary>
        </member>
        <member name="P:FastReport.Report.Preview">
            <summary>
            Gets or sets the report preview control.
            </summary>
            <remarks>
            Use this property to attach a custom preview to your report. To do this, place the PreviewControl
            control to your form and set the report's <b>Preview</b> property to this control.
            </remarks>
        </member>
        <member name="P:FastReport.Report.PrintSettings">
            <summary>
            Gets the print settings such as printer name, copies, pages to print etc.
            </summary>
        </member>
        <member name="P:FastReport.Report.IsPreviewing">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Report.Print">
            <summary>
            Prepares the report and prints it.
            </summary>
        </member>
        <member name="M:FastReport.Report.PrintPrepared">
            <summary>
            Prints the report with the "Print" dialog.
            Report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
        </member>
        <member name="M:FastReport.Report.PrintPrepared(System.Drawing.Printing.PrinterSettings)">
            <summary>
            Prints the report without the "Print" dialog.
            Report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
            <param name="printerSettings">Printer-specific settings.</param>
            <example>
            Use the following code if you want to show the "Print" dialog, then print:
            <code>
            if (report.Prepare())
            {
              PrinterSettings printerSettings = null;
              if (report.ShowPrintDialog(out printerSettings))
              {
                report.PrintPrepared(printerSettings);
              }
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.Show">
            <summary>
            Prepares the report and shows it in the preview window.
            </summary>
        </member>
        <member name="M:FastReport.Report.Show(System.Boolean)">
            <summary>
            Prepares the report and shows it in the preview window.
            </summary>
            <param name="modal">A value that specifies whether the preview window should be modal.</param>
        </member>
        <member name="M:FastReport.Report.Show(System.Boolean,System.Windows.Forms.IWin32Window)">
            <summary>
            Prepares the report and shows it in the preview window.
            </summary>
            <param name="modal">A value that specifies whether the preview window should be modal.</param>
            <param name="owner">The owner of the preview window.</param>
        </member>
        <member name="M:FastReport.Report.Show(System.Windows.Forms.Form)">
            <summary>
            Prepares the report and shows it in the preview window.
            </summary>
            <param name="mdiParent">The main MDI form which will be a parent for the preview window.</param>
        </member>
        <member name="M:FastReport.Report.ShowPrepared">
            <summary>
            Previews the report. The report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
        </member>
        <member name="M:FastReport.Report.ShowPrepared(System.Boolean)">
            <summary>
            Previews the prepared report.
            </summary>
            <param name="modal">A value that specifies whether the preview window should be modal.</param>
        </member>
        <member name="M:FastReport.Report.ShowPrepared(System.Boolean,System.Windows.Forms.IWin32Window)">
            <summary>
            Previews the prepared report.
            </summary>
            <param name="modal">A value that specifies whether the preview window should be modal.</param>
            <param name="owner">The owner of the preview window.</param>
        </member>
        <member name="M:FastReport.Report.ShowPrepared(System.Windows.Forms.Form)">
            <summary>
            Previews the prepared report.
            </summary>
            <param name="mdiParent">The main MDI form which will be a parent for the preview window.</param>
        </member>
        <member name="M:FastReport.Report.ShowPrintDialog(System.Drawing.Printing.PrinterSettings@)">
            <summary>
            Shows the "Print" dialog.
            </summary>
            <param name="printerSettings">Printer-specific settings.</param>
            <returns><b>true</b> if the dialog was closed by "Print" button.</returns>
            <example>
            Use the following code if you want to show the "Print" dialog, then print:
            <code>
            if (report.Prepare())
            {
              PrinterSettings printerSettings = null;
              if (report.ShowPrintDialog(out printerSettings))
              {
                report.PrintPrepared(printerSettings);
              }
            }
            </code>
            </example>
        </member>
        <member name="E:FastReport.Report.CustomCalc">
            <summary>
            Occurs when calc execution is started.
            </summary>
        </member>
        <member name="E:FastReport.Report.LoadBaseReport">
            <summary>
            Occurs when report is inherited and trying to load a base report.
            </summary>
            <remarks>
            Typical use of this event is to load the base report from a database instead of a file.
            </remarks>
        </member>
        <member name="E:FastReport.Report.StartReport">
            <summary>
            Occurs when report execution is started.
            </summary>
        </member>
        <member name="E:FastReport.Report.FinishReport">
            <summary>
            Occurs when report execution is finished.
            </summary>
        </member>
        <member name="E:FastReport.Report.ExportParameters">
            <summary>
            Occurs before export to set custom export parameters.
            </summary>
        </member>
        <member name="P:FastReport.Report.Pages">
            <summary>
            Gets the pages contained in this report.
            </summary>
            <remarks>
            This property contains pages of all types (report and dialog). Use the <b>is/as</b> operators
            if you want to work with pages of <b>ReportPage</b> type.
            </remarks>
            <example>The following code demonstrates how to access the first report page:
            <code>
            ReportPage page1 = report1.Pages[0] as ReportPage;
            </code>
            </example>
        </member>
        <member name="P:FastReport.Report.Dictionary">
            <summary>
            Gets the report's data.
            </summary>
            <remarks>
            The dictionary contains all data items such as connections, data sources, parameters,
            system variables.
            </remarks>
        </member>
        <member name="P:FastReport.Report.Parameters">
            <summary>
            Gets the collection of report parameters.
            </summary>
            <remarks>
            <para>Parameters are displayed in the "Data" window under the "Parameters" node.</para>
            <para>Typical use of parameters is to pass some static data from the application to the report.
            You can print such data, use it in the data row filter, script etc. </para>
            <para>Another way to use parameters is to define some reusable piece of code, for example,
            to define an expression that will return the concatenation of first and second employee name.
            In this case, you set the parameter's <b>Expression</b> property to something like this:
            [Employees.FirstName] + " " + [Employees.LastName]. Now this parameter may be used in the report
            to print full employee name. Each time you access such parameter, it will calculate the expression
            and return its value. </para>
            <para>You can create nested parameters. To do this, add the new <b>Parameter</b> to the
            <b>Parameters</b> collection of the root parameter. To access the nested parameter, you may use the
            <see cref="M:FastReport.Report.GetParameter(System.String)"/> method.</para>
            <para>To get or set the parameter's value, use the <see cref="M:FastReport.Report.GetParameterValue(System.String)"/> and
            <see cref="M:FastReport.Report.SetParameterValue(System.String,System.Object)"/> methods. To set the parameter's expression, use the
            <see cref="M:FastReport.Report.GetParameter(System.String)"/> method that returns a <b>Parameter</b> object and set its
            <b>Expression</b> property.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Report.ReportInfo">
            <summary>
            Gets or sets the report information such as report name, author, description etc.
            </summary>
        </member>
        <member name="P:FastReport.Report.BaseReport">
            <summary>
            Gets or sets the base report file name.
            </summary>
            <remarks>
            This property contains the name of a report file this report is inherited from.
            <b>Note:</b> setting this property to non-empty value will clear the report and
            load the base file into it.
            </remarks>
        </member>
        <member name="P:FastReport.Report.FileName">
            <summary>
            Gets or sets the name of a file the report was loaded from.
            </summary>
            <remarks>
            This property is used to support the FastReport.Net infrastructure;
            typically you don't need to use it.
            </remarks>
        </member>
        <member name="P:FastReport.Report.ScriptText">
            <summary>
            Gets or sets the report script.
            </summary>
            <remarks>
            <para>The script contains the <b>ReportScript</b> class that contains all report objects'
            event handlers and own items such as private fields, properties, methods etc. The script
            contains only items written by you. Unlike other report generators, the script does not
            contain report objects declarations, initialization code. It is added automatically when
            you run the report.</para>
            <para>By default this property contains an empty script text. You may see it in the designer
            when you switch to the Code window.</para>
            <para>If you set this property programmatically, you have to declare the <b>FastReport</b>
            namespace and the <b>ReportScript</b> class in it. Do not declare report items (such as bands,
            objects, etc) in the <b>ReportScript</b> class: the report engine does this automatically when
            you run the report.</para>
            <para><b>Security note:</b> since the report script is compiled into .NET assembly, it allows
            you to do ANYTHING. For example, you may create a script that will read/write files from/to a disk.
            To restrict such operations, use the <see cref="P:FastReport.Report.ScriptRestrictions"/> property.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Report.ScriptLanguage">
            <summary>
            Gets or sets the script language of this report.
            </summary>
            <remarks>
            Note: changing this property will reset the report script to default empty script.
            </remarks>
        </member>
        <member name="P:FastReport.Report.ConvertNulls">
            <summary>
            Gets or sets a value indicating whether the null DB value must be converted to zero, false or
            empty string depending on the data column type.
            </summary>
            <remarks>
            This property is <b>true</b> by default. If you set it to <b>false</b>, you should check
            the DB value before you do something with it (for example, typecast it to any type, use it
            in a expression etc.)
            </remarks>
        </member>
        <member name="P:FastReport.Report.DoublePass">
            <summary>
            Gets or sets a value that specifies whether the report engine should perform the second pass.
            </summary>
            <remarks>
            <para>Typically the second pass is necessary to print the number of total pages. It also
            may be used to perform some calculations on the first pass and print its results on the
            second pass.</para>
            <para>Use the <b>Engine.FirstPass</b>, <b>Engine.FinalPass</b> properties to determine which
            pass the engine is performing now.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Report.Compressed">
            <summary>
            Gets or sets a value that specifies whether to compress the report file.
            </summary>
            <remarks>
            The report file is compressed using the Gzip algorithm. So you can open the
            compressed report in any zip-compatible archiver.
            </remarks>
        </member>
        <member name="P:FastReport.Report.UseFileCache">
            <summary>
            Gets or sets a value that specifies whether to use the file cache rather than memory
            to store the prepared report pages.
            </summary>
        </member>
        <member name="P:FastReport.Report.TextQuality">
            <summary>
            Gets or sets a value that specifies the quality of text rendering.
            </summary>
            <remarks>
            <b>Note:</b> the default property value is <b>TextQuality.Default</b>. That means the report
            may look different depending on OS settings. This property does not affect the printout.
            </remarks>
        </member>
        <member name="P:FastReport.Report.SmoothGraphics">
            <summary>
            Gets or sets a value that specifies if the graphic objects such as bitmaps
            and shapes should be displayed smoothly.
            </summary>
        </member>
        <member name="P:FastReport.Report.Password">
            <summary>
            Gets or sets the report password.
            </summary>
            <remarks>
            <para>When you try to load the password-protected report, you will be asked
            for a password. You also may specify the password in this property before loading
            the report. In this case the report will load silently.</para>
            <para>Password-protected report file is crypted using Rijndael algorithm.
            Do not forget your password! It will be hard or even impossible to open
            the protected file in this case.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Report.AutoFillDataSet">
            <summary>
            Gets or sets a value indicating whether it is necessary to automatically fill
            DataSet registered with <b>RegisterData</b> call.
            </summary>
            <remarks>
            If this property is <b>true</b> (by default), FastReport will automatically fill
            the DataSet with data when you trying to run a report. Set it to <b>false</b> if
            you want to fill the DataSet by yourself.
            </remarks>
        </member>
        <member name="P:FastReport.Report.MaxPages">
            <summary>
            Gets or sets the maximum number of generated pages in a prepared report.
            </summary>
            <remarks>
            Use this property to limit the number of pages in a prepared report.
            </remarks>
        </member>
        <member name="P:FastReport.Report.Styles">
            <summary>
            Gets or sets the collection of styles used in this report.
            </summary>
        </member>
        <member name="P:FastReport.Report.ReferencedAssemblies">
            <summary>
            Gets or sets an array of assembly names that will be used to compile the report script.
            </summary>
            <remarks>
            By default this property contains the following assemblies: "System.dll", "System.Drawing.dll",
            "System.Windows.Forms.dll", "System.Data.dll", "System.Xml.dll". If your script uses some types
            from another assemblies, you have to add them to this property.
            </remarks>
        </member>
        <member name="P:FastReport.Report.StartReportEvent">
            <summary>
            Gets or sets a script event name that will be fired when the report starts.
            </summary>
        </member>
        <member name="P:FastReport.Report.FinishReportEvent">
            <summary>
            Gets or sets a script event name that will be fired when the report is finished.
            </summary>
        </member>
        <member name="P:FastReport.Report.Aborted">
            <summary>
            Gets a value indicating that report execution was aborted.
            </summary>
        </member>
        <member name="P:FastReport.Report.StoreInResources">
            <summary>
            Gets or sets a value that determines whether to store the report in the application resources.
            Use this property in the MS Visual Studio IDE only.
            </summary>
            <remarks>
            By default this property is <b>true</b>. When set to <b>false</b>, you should store your report
            in a file.
            </remarks>
        </member>
        <member name="P:FastReport.Report.ReportResourceString">
            <summary>
            Gets or sets the resource string that contains the report.
            </summary>
            <remarks>
            This property is used by the MS Visual Studio to store the report. Do not use it directly.
            </remarks>
        </member>
        <member name="P:FastReport.Report.HasDialogs">
            <summary>
            Gets a value indicating that this report contains dialog forms.
            </summary>
        </member>
        <member name="P:FastReport.Report.ScriptRestrictions">
            <summary>
            Gets or sets a set of permissions that will be restricted for the script code.
            </summary>
            <remarks>
            Since the report script is compiled into .NET assembly, it allows you to do ANYTHING.
            For example, you may create a script that will read/write files from/to a disk. This property
            is used to restrict such operations.
            <example>This example shows how to restrict the file IO operations in a script:
            <code>
            using System.Security;
            using System.Security.Permissions;
            ...
            PermissionSet ps = new PermissionSet(PermissionState.None);
            ps.AddPermission(new FileIOPermission(PermissionState.Unrestricted));
            report1.ScriptRestrictions = ps;
            report1.Prepare();
            </code>
            </example>
            </remarks>
        </member>
        <member name="P:FastReport.Report.GraphicCache">
            <summary>
            Gets a reference to the graphics cache for this report.
            </summary>
            <remarks>
            This property is used to support the FastReport.Net infrastructure. Do not use it directly.
            </remarks>
        </member>
        <member name="P:FastReport.Report.PreparedPages">
            <summary>
            Gets a pages of the prepared report.
            </summary>
        </member>
        <member name="P:FastReport.Report.Engine">
            <summary>
            Gets a reference to the report engine.
            </summary>
            <remarks>
            This property can be used when report is running. In other cases it returns <b>null</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Report.InitialPageNumber">
            <summary>
            Gets or sets the initial page number for PageN/PageNofM system variables.
            </summary>
        </member>
        <member name="P:FastReport.Report.Name">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Report.Restrictions">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Report.Operation">
            <summary>
            Gets the report operation that is currently performed.
            </summary>
        </member>
        <member name="P:FastReport.Report.Tag">
            <summary>
            Gets or sets the Tag object of the report.
            </summary>
        </member>
        <member name="P:FastReport.Report.NeedRefresh">
            <summary>
            Gets or sets the flag for refresh.
            </summary>
        </member>
        <member name="M:FastReport.Report.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.BeginInit">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.EndInit">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.InternalInit">
            <summary>
            Initializes the report's fields.
            </summary>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Report.GenerateReportAssembly(System.String)">
            <summary>
            Generates the file (.cs or .vb) that contains the report source code.
            </summary>
            <param name="fileName">Name of the file.</param>
            <remarks>
            Use this method to generate the report source code. This code can be attached to your project.
            In this case, you will need to call the following code to run a report:
            <code>
            SimpleListReport report = new SimpleListReport();
            report.RegisterData(your_dataset);
            report.Show();
            </code>
            </remarks>
        </member>
        <member name="M:FastReport.Report.Calc(System.String)">
            <summary>
            Calculates an expression and returns the result.
            </summary>
            <param name="expression">The expression to calculate.</param>
            <returns>If report is running, returns the result of calculation.
            Otherwise returns <b>null</b>.</returns>
            <remarks>
            <para>The expression may be any valid expression such as "1 + 2". The expression
            is calculated in the report script's <b>ReportScript</b> class instance context,
            so you may refer to any objects available in this context: private fields,
            methods, report objects.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Report.Calc(System.String,FastReport.Variant)">
            <summary>
            Calculates an expression and returns the result.
            </summary>
            <param name="expression">The expression to calculate.</param>
            <param name="value">The value of currently printing object.</param>
            <returns>If report is running, returns the result of calculation.
            Otherwise returns <b>null</b>.</returns>
            <remarks>
            Do not call this method directly. Use the <b>Calc(string expression)</b> method instead.
            </remarks>
        </member>
        <member name="M:FastReport.Report.CalcExpression(System.String,FastReport.Variant)">
            <summary>
            Returns an expression value.
            </summary>
            <param name="expression">The expression.</param>
            <param name="value">The value of currently printing object.</param>
            <returns>Returns the result of calculation.</returns>
            <remarks>
            This method is for internal use only, do not call it directly.
            </remarks>
        </member>
        <member name="M:FastReport.Report.InvokeEvent(System.String,System.Object[])">
            <summary>
            Invokes the script event handler with given name.
            </summary>
            <param name="name">The name of the script method.</param>
            <param name="parms">The method parameters.</param>
        </member>
        <member name="M:FastReport.Report.GetColumnValue(System.String)">
            <summary>
            Gets the data column's value. Automatically converts null value to 0, false or ""
            depending on the column type.
            </summary>
            <param name="complexName">The name of the data column including the datasource name.</param>
            <returns>If report is running, returns the column value. Otherwise returns <b>null</b>.</returns>
            <remarks>
            The return value of this method does not depend on the <see cref="P:FastReport.Report.ConvertNulls"/> property.
            </remarks>
            <example>
            <code>
            string employeeName = (string)report.GetColumnValue("Employees.FirstName");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.GetColumnValueNullable(System.String)">
            <summary>
            Gets the data column's value. This method does not convert null values.
            </summary>
            <param name="complexName">The name of the data column including the datasource name.</param>
            <returns>If report is running, returns the column value.
            Otherwise returns <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Report.GetParameter(System.String)">
            <summary>
            Gets the report parameter with given name.
            </summary>
            <param name="complexName">The name of the parameter.</param>
            <returns>The <see cref="T:FastReport.Data.Parameter"/> object if found, otherwise <b>null</b>.</returns>
            <remarks>
            To find nested parameter, use the "." separator: "MainParameter.NestedParameter"
            </remarks>
        </member>
        <member name="M:FastReport.Report.GetParameterValue(System.String)">
            <summary>
            Gets a value of the parameter with given name.
            </summary>
            <param name="complexName">The name of the parameter.</param>
            <returns>The parameter's value if found, otherwise <b>null</b>.</returns>
            <remarks>
            To find nested parameter, use the "." separator: "MainParameter.NestedParameter"
            </remarks>
        </member>
        <member name="M:FastReport.Report.SetParameterValue(System.String,System.Object)">
            <summary>
            Sets the parameter's value.
            </summary>
            <param name="complexName">The name of the parameter.</param>
            <param name="value">Value to set.</param>
            <remarks>
            Use this method to pass a value to the parameter that you've created in the "Data" window.
            Such parameter may be used everythere in a report; for example, you can print its value
            or use it in expressions.
            <para/>You should call this method <b>after</b> the report was loaded and <b>before</b> you run it.
            <para/>To access a nested parameter, use the "." separator: "MainParameter.NestedParameter"
            <note type="caution">
            This method will create the parameter if it does not exist.
            </note>
            </remarks>
            <example>This example shows how to pass a value to the parameter with "MyParam" name:
            <code>
            // load the report
            report1.Load("report.frx");
            // setup the parameter
            report1.SetParameterValue("MyParam", 10);
            // show the report
            report1.Show();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.GetVariableValue(System.String)">
            <summary>
            Gets a value of the system variable with specified name.
            </summary>
            <param name="complexName">Name of a variable.</param>
            <returns>The variable's value if found, otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Report.GetTotalValue(System.String)">
            <summary>
            Gets a value of the total with specified name.
            </summary>
            <param name="name">Name of total.</param>
            <returns>The total's value if found, otherwise <b>0</b>.</returns>
            <remarks>This method converts null values to 0 if the <see cref="P:FastReport.Report.ConvertNulls"/> property is set to true.
            Use the <see cref="M:FastReport.Report.GetTotalValueNullable(System.String)"/> method if you don't want the null conversion.
            </remarks>
        </member>
        <member name="M:FastReport.Report.GetTotalValueNullable(System.String)">
            <summary>
            Gets a value of the total with specified name.
            </summary>
            <param name="name">Name of total.</param>
            <returns>The total's value if found, otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Report.GetDataSource(System.String)">
            <summary>
            Gets the datasource with specified name.
            </summary>
            <param name="alias">Alias name of a datasource.</param>
            <returns>The datasource object if found, otherwise <b>null</b>.</returns>
        </member>
        <member name="M:FastReport.Report.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.Abort">
            <summary>
            Aborts the report execution.
            </summary>
        </member>
        <member name="M:FastReport.Report.FindObject(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.Clear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.ApplyStyles">
            <summary>
            Updates the report component's styles.
            </summary>
            <remarks>
            Call this method if you change the <see cref="P:FastReport.Report.Styles"/> collection.
            </remarks>
        </member>
        <member name="M:FastReport.Report.SetPreparedPages(FastReport.Preview.PreparedPages)">
            <summary>
            Sets prepared pages.
            </summary>
            <param name="pages"></param>
        </member>
        <member name="M:FastReport.Report.OnStartReport(System.EventArgs)">
            <summary>
            This method fires the <b>StartReport</b> event and the script code connected
            to the <b>StartReportEvent</b>.
            </summary>
        </member>
        <member name="M:FastReport.Report.OnFinishReport(System.EventArgs)">
            <summary>
            This method fires the <b>FinishReport</b> event and the script code connected
            to the <b>FinishReportEvent</b>.
            </summary>
        </member>
        <member name="M:FastReport.Report.OnExportParameters(FastReport.ExportParametersEventArgs)">
            <summary>
            Runs the Export event.
            </summary>
            <param name="e">ExportReportEventArgs object.</param>
        </member>
        <member name="M:FastReport.Report.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Report.Save(System.IO.Stream)">
            <summary>
            Saves the report to a stream.
            </summary>
            <param name="stream">The stream to save to.</param>
        </member>
        <member name="M:FastReport.Report.Save(System.String)">
            <summary>
            Saves the report to a file.
            </summary>
            <param name="fileName">The name of the file to save to.</param>
        </member>
        <member name="M:FastReport.Report.Load(System.IO.Stream)">
            <summary>
            Loads report from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
            <remarks>
            When you try to load the password-protected report, you will be asked
            for a password. You also may specify the password in the <see cref="P:FastReport.Report.Password"/>
            property before loading the report. In this case the report will load silently.
            </remarks>
        </member>
        <member name="M:FastReport.Report.Load(System.String)">
            <summary>
            Loads the report from a file.
            </summary>
            <param name="fileName">The name of the file to load from.</param>
            <remarks>
            When you try to load the password-protected report, you will be asked
            for a password. You also may specify the password in the <see cref="P:FastReport.Report.Password"/>
            property before loading the report. In this case the report will load silently.
            </remarks>
        </member>
        <member name="M:FastReport.Report.LoadFromString(System.String)">
            <summary>
            Loads the report from a string.
            </summary>
            <param name="s">The string that contains a stream in UTF8 or Base64 encoding.</param>
        </member>
        <member name="M:FastReport.Report.SaveToString">
            <summary>
            Saves the report to a string.
            </summary>
            <returns>The string that contains a stream.</returns>
        </member>
        <member name="M:FastReport.Report.SaveToStringBase64">
            <summary>
            Saves the report to a string using the Base64 encoding.
            </summary>
            <returns>The string that contains a stream.</returns>
        </member>
        <member name="M:FastReport.Report.FromStream(System.IO.Stream)">
            <summary>
            Creates the report instance and loads the report from a stream.
            </summary>
            <param name="stream">The stream to load from.</param>
            <returns>The new report instance.</returns>
        </member>
        <member name="M:FastReport.Report.FromFile(System.String)">
            <summary>
            Creates the report instance and loads the report from a file.
            </summary>
            <param name="fileName">The name of the file to load from.</param>
            <returns>The new report instance.</returns>
        </member>
        <member name="M:FastReport.Report.FromString(System.String)">
            <summary>
            Creates the report instance and loads the report from a string.
            </summary>
            <param name="utf8String">The string that contains a stream in UTF8 encoding.</param>
            <returns>The new report instance.</returns>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataSet)">
            <summary>
            Registers the application dataset with all its tables and relations to use it in the report.
            </summary>
            <param name="data">The application data.</param>
            <remarks>
            If you register more than one dataset, use the <see cref="M:FastReport.Report.RegisterData(System.Data.DataSet,System.String)"/> method.
            </remarks>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(dataSet1);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataSet,System.Boolean)">
            <summary>
            Registers the application dataset with all its tables and relations to use it in the report and enables all its tables.
            </summary>
            <param name="data">The application data.</param>
            <param name="enableAllTables">The boolean value indicating whether all tables should be enabled.</param>
            <remarks>
            If you register more than one dataset, use the <see cref="M:FastReport.Report.RegisterData(System.Data.DataSet,System.String)"/> method.
            </remarks>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(dataSet1, true);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataSet,System.String)">
            <summary>
            Registers the application dataset with specified name.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <remarks>
            Use this method if you register more than one dataset. You may specify any value
            for the <b>name</b> parameter: it is not displayed anywhere in the designer and used only
            to load/save a report. The name must be persistent and unique for each registered dataset.
            </remarks>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(dataSet1, "NorthWind");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataSet,System.String,System.Boolean)">
            <summary>
            Registers the application dataset with specified name and enables all its tables.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <param name="enableAllTables">The boolean value indicating whether all tables should be enabled.</param>
            <remarks>
            Use this method if you register more than one dataset. You may specify any value
            for the <b>name</b> parameter: it is not displayed anywhere in the designer and used only
            to load/save a report. The name must be persistent and unique for each registered dataset.
            </remarks>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(dataSet1, "NorthWind", true);
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataTable,System.String)">
            <summary>
            Registers the application data table to use it in the report.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(dataSet1.Tables["Orders"], "Orders");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataView,System.String)">
            <summary>
            Registers the application data view to use it in the report.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(myDataView, "OrdersView");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Data.DataRelation,System.String)">
            <summary>
            Registers the application data relation to use it in the report.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <remarks>
            You may specify any value for the <b>name</b> parameter: it is not displayed anywhere
            in the designer and used only to load/save a report. The name must be persistent
            and unique for each registered relation.
            </remarks>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(myDataRelation, "myRelation");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Collections.IEnumerable,System.String,FastReport.Data.BOConverterFlags,System.Int32)">
            <summary>
            <b>Obsolete</b>. Registers the application business object to use it in the report.
            </summary>
            <param name="data">Application data.</param>
            <param name="name">Name of the data.</param>
            <param name="flags">Not used.</param>
            <param name="maxNestingLevel">Maximum nesting level of business objects.</param>
            <remarks>
            This method is obsolete. Use the <see cref="M:FastReport.Report.RegisterData(System.Collections.IEnumerable,System.String)"/> method instead.
            </remarks>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Collections.IEnumerable,System.String)">
            <summary>
            Registers the application business object to use it in the report.
            </summary>
            <param name="data">Application data.</param>
            <param name="name">Name of the data.</param>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(myBusinessObject, "Customers");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.RegisterData(System.Collections.IEnumerable,System.String,System.Int32)">
            <summary>
            Registers the application business object to use it in the report.
            </summary>
            <param name="data">Application data.</param>
            <param name="name">Name of the data.</param>
            <param name="maxNestingLevel">Maximum nesting level of business objects.</param>
            <remarks>
            This method creates initial datasource with specified nesting level. It is useful if
            you create a report in code. In most cases, you don't need to specify the nesting level
            because it may be selected in the designer's "Choose Report Data" dialog.
            </remarks>
        </member>
        <member name="M:FastReport.Report.RegisterData(FastReport.CrossView.IBaseCubeLink,System.String)">
            <summary>
            Registers the application cube link to use it in the report.
            </summary>
            <param name="data">The application data.</param>
            <param name="name">The name of the data.</param>
            <example>
            <code>
            report1.Load("report.frx");
            report1.RegisterData(myCubeLink, "Orders");
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.Prepare">
            <summary>
            Prepares the report.
            </summary>
            <returns><b>true</b> if report was prepared succesfully.</returns>
        </member>
        <member name="M:FastReport.Report.Prepare(System.Boolean)">
            <summary>
            Prepares the report.
            </summary>
            <param name="append">Specifies whether the new report should be added to a
            report that was prepared before.</param>
            <returns><b>true</b> if report was prepared succesfully.</returns>
            <remarks>
            Use this method to merge prepared reports.
            </remarks>
            <example>This example shows how to merge two reports and preview the result:
            <code>
            Report report = new Report();
            report.Load("report1.frx");
            report.Prepare();
            report.Load("report2.frx");
            report.Prepare(true);
            report.ShowPrepared();
            </code>
            </example>
        </member>
        <member name="M:FastReport.Report.PreparePhase1">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Report.PreparePhase2">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:FastReport.Report.Refresh">
            <summary>
            Refresh the current report.
            </summary>
            <remarks>
            Call this method in the Click or MouseUp event handler of a report object to refresh
            the currently previewed report. Report will be generated again, but without dialog forms.
            </remarks>
        </member>
        <member name="M:FastReport.Report.InteractiveRefresh">
            <summary>
             Refresh prepared report after intercative actions.
            </summary>
        </member>
        <member name="M:FastReport.Report.PreparePage(FastReport.ReportPage)">
            <summary>
            Prepare page
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FastReport.Report.Export(FastReport.Export.ExportBase,System.IO.Stream)">
            <summary>
            Exports a report. Report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
            <param name="export">The export filter.</param>
            <param name="stream">Stream to save export result to.</param>
        </member>
        <member name="M:FastReport.Report.Export(FastReport.Export.ExportBase,System.String)">
            <summary>
            Exports a report. Report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
            <param name="export">The export filter.</param>
            <param name="fileName">File name to save export result to.</param>
        </member>
        <member name="M:FastReport.Report.SavePrepared(System.String)">
            <summary>
            Saves the prepared report. Report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
            <param name="fileName">File name to save to.</param>
        </member>
        <member name="M:FastReport.Report.SavePrepared(System.IO.Stream)">
            <summary>
            Saves the prepared report. Report should be prepared using the <see cref="M:FastReport.Report.Prepare"/> method.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.Report.LoadPrepared(System.String)">
            <summary>
            Loads the prepared report from a .fpx file.
            </summary>
            <param name="fileName">File name to load form.</param>
        </member>
        <member name="M:FastReport.Report.LoadPrepared(System.IO.Stream)">
            <summary>
            Loads the prepared report from a .fpx file.
            </summary>
            <param name="stream">Stream to load from.</param>
        </member>
        <member name="M:FastReport.Report.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Report"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Report.EnsureInit">
            <summary>
            Ensure that static constructor is called.
            </summary>
        </member>
        <member name="M:FastReport.Report.PostNameProcess(System.String,System.Int32)">
            <summary>
            Create name for all unnamed elements with prefix and start with number
            </summary>
            <param name="prefix">Prefix for name</param>
            <param name="number">Number from which to start</param>
        </member>
        <member name="T:FastReport.ReportComponentBase">
            <summary>
            Base class for all report objects.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.MouseMove">
            <summary>
            This event occurs when the user moves the mouse over the object in the preview window.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.MouseUp">
            <summary>
            This event occurs when the user releases the mouse button in the preview window.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.MouseDown">
            <summary>
            This event occurs when the user clicks the mouse button in the preview window.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.MouseEnter">
            <summary>
            This event occurs when the mouse enters the object's bounds in the preview window.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.MouseLeave">
            <summary>
            This event occurs when the mouse leaves the object's bounds in the preview window.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBase.AssignPreviewEvents(FastReport.Base)">
            <summary>
            Copies event handlers from another similar object.
            </summary>
            <param name="source">The object to copy handlers from.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method fires the <b>MouseMove</b> event and the script code connected to the <b>MouseMoveEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method fires the <b>MouseUp</b> event and the script code connected to the <b>MouseUpEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method fires the <b>MouseDown</b> event and the script code connected to the <b>MouseDownEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnMouseEnter(System.EventArgs)">
            <summary>
            This method fires the <b>MouseEnter</b> event and the script code connected to the <b>MouseEnterEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnMouseLeave(System.EventArgs)">
            <summary>
            This method fires the <b>MouseLeave</b> event and the script code connected to the <b>MouseLeaveEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is fired when the user scrolls the mouse in the preview window.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="P:FastReport.ReportComponentBase.Left">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.ReportComponentBase.Top">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.ReportComponentBase.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.ReportComponentBase.Height">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.AssignFormat(FastReport.ReportComponentBase)">
            <summary>
            Assigns a format from another, similar object.
            </summary>
            <param name="source">Source object to assign a format from.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.CheckParent(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.DrawMarkers(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the object's markers.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.DrawMarkers(FastReport.Utils.FRPaintEventArgs,FastReport.MarkerStyle)">
            <summary>
            Draws the object's markers.
            </summary>
            <param name="e">Draw event arguments.</param>
            <param name="style">Marker style</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnAfterInsert(FastReport.InsertFrom)">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.ReportComponentBase.BeforePrint">
            <summary>
            This event occurs before the object is added to the preview pages.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.AfterPrint">
            <summary>
            This event occurs after the object was added to the preview pages.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.AfterData">
            <summary>
            This event occurs after the object was filled with data.
            </summary>
        </member>
        <member name="E:FastReport.ReportComponentBase.Click">
            <summary>
            This event occurs when the user clicks the object in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.Backlight">
            <summary>
            This property specifies whether the object will be highlighted on the form.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.Exportable">
            <summary>
            Gets or sets a value that determines if the object can be exported.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.Border">
            <summary>
            Gets or sets an object's border.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.Fill">
            <summary>
            Gets or sets an object's fill.
            </summary>
            <remarks>
            The fill can be one of the following types: <see cref="T:FastReport.SolidFill"/>, <see cref="T:FastReport.LinearGradientFill"/>, 
            <see cref="T:FastReport.PathGradientFill"/>, <see cref="T:FastReport.HatchFill"/>.
            <para/>To set the solid fill color, use the simpler <see cref="P:FastReport.ReportComponentBase.FillColor"/> property.
            </remarks>
            <example>This example shows how to set the new fill and change its properties:
            <code>
            textObject1.Fill = new SolidFill(Color.Green);
            (textObject1.Fill as SolidFill).Color = Color.Red;
            </code>
            </example>          
        </member>
        <member name="P:FastReport.ReportComponentBase.FillColor">
            <summary>
            Gets or sets the fill color in a simple manner.
            </summary>
            <remarks>
            This property can be used in a report script to change the fill color of the object. It is 
            equivalent to: <code>reportComponent1.Fill = new SolidFill(color);</code>
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.Bookmark">
            <summary>
            Gets or sets a bookmark expression.
            </summary>
            <remarks>
            This property can contain any valid expression that returns a bookmark name. This can be, for example,
            a data column. To navigate to a bookmark, you have to use the <see cref="P:FastReport.ReportComponentBase.Hyperlink"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.Hyperlink">
            <summary>
            Gets or sets a hyperlink.
            </summary>
            <remarks>
            <para>The hyperlink is used to define clickable objects in the preview. 
            When you click such object, you may navigate to the external url, the page number, 
            the bookmark defined by other report object, or display the external report. 
            Set the <b>Kind</b> property of the hyperlink to select appropriate behavior.</para>
            <para>Usually you should set the <b>Expression</b> property of the hyperlink to
            any valid expression that will be calculated when this object is about to print.
            The value of an expression will be used for navigation.</para>
            <para>If you want to navigate to
            something fixed (URL or page number, for example) you also may set the <b>Value</b>
            property instead of <b>Expression</b>.</para>
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.CanGrow">
            <summary>
            Determines if the object can grow.
            </summary>
            <remarks>
            This property is applicable to the bands or text objects that can contain several text lines.
            If the property is set to <b>true</b>, object will grow to display all the information that it contains.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.CanShrink">
            <summary>
            Determines if the object can shrink.
            </summary>
            <remarks>
            This property is applicable to the bands or text objects that can contain several text lines.
            If the property is set to true, object can shrink to remove the unused space.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.GrowToBottom">
            <summary>
            Determines if the object must grow to the band's bottom side.
            </summary>
            <remarks>
            If the property is set to true, object grows to the bottom side of its parent. This is useful if
            you have several objects on a band, and some of them can grow or shrink.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.ShiftMode">
            <summary>
            Gets or sets a shift mode of the object.
            </summary>
            <remarks>
            See <see cref="T:FastReport.ShiftMode"/> enumeration for details.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.Style">
            <summary>
            Gets or sets the style name.
            </summary>
            <remarks>
            Style is a set of common properties such as border, fill, font, text color. The <b>Report</b>
            has a set of styles in the <see cref="P:FastReport.Report.Styles"/> property. 
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.EvenStyle">
            <summary>
            Gets or sets a style name that will be applied to even band rows.
            </summary>
            <remarks>
            Style with this name must exist in the <see cref="P:FastReport.Report.Styles"/> collection.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.HoverStyle">
            <summary>
            Gets or sets a style name that will be applied to this object when the mouse pointer is over it.
            </summary>
            <remarks>
            Style with this name must exist in the <see cref="P:FastReport.Report.Styles"/> collection.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.EvenStylePriority">
            <summary>
            Gets or sets a value that determines which properties of the even style to use.
            </summary>
            <remarks>
            Usually you will need only the Fill property of the even style to be applied. If you want to 
            apply all style settings, set this property to <b>StylePriority.UseAll</b>.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.PrintOn">
            <summary>
            Gets or sets a value that determines where to print the object.
            </summary>
            <remarks>
            See the <see cref="T:FastReport.PrintOn"/> enumeration for details.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.BeforePrintEvent">
            <summary>
            Gets or sets a script event name that will be fired before the object will be printed in the preview page.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.AfterPrintEvent">
            <summary>
            Gets or sets a script event name that will be fired after the object was printed in the preview page.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.AfterDataEvent">
            <summary>
            Gets or sets a script event name that will be fired after the object was filled with data.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.ClickEvent">
            <summary>
            Gets or sets a script event name that will be fired when the user click the object in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagSimpleBorder">
            <summary>
            Determines if the object has custom border and use only <b>Border.Width</b>, <b>Border.Style</b> and 
            <b>Border.Color</b> properties.
            </summary>
            <remarks>
            This flag is used to disable some toolbar buttons when such object is selected. Applicable to the
            ShapeObject and LineObject.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagUseBorder">
            <summary>
            Determines if the object uses the <b>Border</b>.
            </summary>
            <remarks>
            This flag is used to disable some toolbar buttons when such object is selected.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagUseFill">
            <summary>
            Determines if the object uses the fill.
            </summary>
            <remarks>
            This flag is used to disable some toolbar buttons when such object is selected.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagPreviewVisible">
            <summary>
            Gets or sets a value indicates that object should not be added to the preview.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagSerializeStyle">
            <summary>
            Determines if serializing the Style property is needed.
            </summary>
            <remarks>
            The <b>Style</b> property must be serialized last. Some ancestor classes may turn off the standard Style 
            serialization and serialize it by themselves.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.FlagProvidesHyperlinkValue">
            <summary>
            Determines if an object can provide the hyperlink value automatically.
            </summary>
            <remarks>
            This flag is used in complex objects such as Matrix or Chart. These objects can provide
            a hyperlink value automatically, depending on where you click.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.Band">
            <summary>
            Gets an object's parent band.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.DataBand">
            <summary>
            Gets an object's parent data band.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.Cursor">
            <summary>
            Gets or sets an object's cursor shape.
            </summary>
            <remarks>
            This property is used in the preview mode.
            </remarks>
        </member>
        <member name="P:FastReport.ReportComponentBase.MouseMoveEvent">
            <summary>
            Gets or sets a script event name that will be fired when the user 
            moves the mouse over the object in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.MouseUpEvent">
            <summary>
            Gets or sets a script event name that will be fired when the user 
            releases the mouse button in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.MouseDownEvent">
            <summary>
            Gets or sets a script event name that will be fired when the user 
            clicks the mouse button in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.MouseEnterEvent">
            <summary>
            Gets or sets a script event name that will be fired when the
            mouse enters the object's bounds in the preview window.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentBase.MouseLeaveEvent">
            <summary>
            Gets or sets a script event name that will be fired when the
            mouse leaves the object's bounds in the preview window.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.ApplyStyle(FastReport.Style)">
            <summary>
            Applies the style settings.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.SaveStyle">
            <summary>
            Saves the current style.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBase.RestoreStyle">
            <summary>
            Restores the current style.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBase.DrawBackground(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the object's background.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.IsVisible(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Determines if the object is visible on current drawing surface.
            </summary>
            <param name="e">Draw event arguments.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnClick(System.EventArgs)">
            <summary>
            This method fires the <b>Click</b> event and the script code connected to the <b>ClickEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnAfterLoad">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.HasClickListeners">
            <summary>
            Checks if there are any listeners to the Click event.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBase.InitializeComponent">
            <summary>
            Initializes the object before running a report.
            </summary>
            <remarks>
            This method is used by the report engine, do not call it directly.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.FinalizeComponent">
            <summary>
            Performs a finalization after the report is finished.
            </summary>
            <remarks>
            This method is used by the report engine, do not call it directly.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.SaveState">
            <summary>
            Saves the object's state before printing it.
            </summary>
            <remarks>
            This method is called by the report engine before processing the object. 
            <para/>Do not call it directly. You may override it if you are developing a new FastReport component. 
            In this method you should save any object properties that may be changed during the object printing. 
            The standard implementation saves the object's bounds, visibility, bookmark and hyperlink.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.RestoreState">
            <summary>
            Restores the object's state after printing it.
            </summary>
            <remarks>
            This method is called by the report engine after processing the object.
            <para/>Do not call it directly. You may override it if you are developing a new FastReport component. 
            In this method you should restore the object properties that were saved by the <see cref="M:FastReport.ReportComponentBase.SaveState"/> method.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.CalcHeight">
            <summary>
            Calculates the object's height.
            </summary>
            <returns>Actual object's height, in pixels.</returns>
            <remarks>
            Applicable to objects that contain several text lines, such as TextObject. Returns the height needed
            to display all the text lines.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.GetData">
            <summary>
            Gets the data from a datasource that the object is connected to.
            </summary>
            <remarks>
            This method is called by the report engine before processing the object.
            <para/>Do not call it directly. You may override it if you are developing a new FastReport component. 
            In this method you should get the data from a datasource that the object is connected to.
            </remarks>
        </member>
        <member name="M:FastReport.ReportComponentBase.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnBeforePrint(System.EventArgs)">
            <summary>
            This method fires the <b>BeforePrint</b> event and the script code connected to the <b>BeforePrintEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnAfterPrint(System.EventArgs)">
            <summary>
            This method fires the <b>AfterPrint</b> event and the script code connected to the <b>AfterPrintEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.OnAfterData(System.EventArgs)">
            <summary>
            This method fires the <b>AfterData</b> event and the script code connected to the <b>AfterDataEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.ReportComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportComponentBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ReportPage">
            <summary>
            Represents a report page.
            </summary>
            <remarks>
            To get/set a paper size and orientation, use the <see cref="P:FastReport.ReportPage.PaperWidth"/>, <see cref="P:FastReport.ReportPage.PaperHeight"/>
            and <see cref="P:FastReport.ReportPage.Landscape"/> properties. Note that paper size is measured in millimeters.
            <para/>Report page can contain one or several bands with report objects. Use the <see cref="P:FastReport.ReportPage.ReportTitle"/>, 
            <see cref="P:FastReport.ReportPage.ReportSummary"/>, <see cref="P:FastReport.ReportPage.PageHeader"/>, <see cref="P:FastReport.ReportPage.PageFooter"/>, 
            <see cref="P:FastReport.ReportPage.ColumnHeader"/>, <see cref="P:FastReport.ReportPage.ColumnFooter"/>, <see cref="P:FastReport.ReportPage.Overlay"/> properties
            to get/set the page bands. The <see cref="P:FastReport.ReportPage.Bands"/> property holds the list of data bands or groups. 
            Thus you may add several databands to this property to create master-master reports, for example.
            <note type="caution">
            Report page can contain bands only. You cannot place report objects such as <b>TextObject</b> on a page.
            </note>
            </remarks>
            <example>
            This example shows how to create a page with one <b>ReportTitleBand</b> and <b>DataBand</b> bands and add
            it to the report.
            <code>
            ReportPage page = new ReportPage();
            // set the paper in millimeters
            page.PaperWidth = 210;
            page.PaperHeight = 297;
            // create report title
            page.ReportTitle = new ReportTitleBand();
            page.ReportTitle.Name = "ReportTitle1";
            page.ReportTitle.Height = Units.Millimeters * 10;
            // create data band
            DataBand data = new DataBand();
            data.Name = "Data1";
            data.Height = Units.Millimeters * 10;
            // add data band to the page
            page.Bands.Add(data);
            // add page to the report
            report.Pages.Add(page);
            </code>
            </example>
        </member>
        <member name="P:FastReport.ReportPage.FirstPageSource">
            <summary>
            Gets or sets the paper source for the first printed page.
            </summary>
            <remarks>
            <para>
            This property represents the paper source (printer tray) that will be used when printing
            the first page. To set the source for other pages, use the <see cref="P:FastReport.ReportPage.OtherPagesSource"/> property.
            </para>
            <para>
            Note: This property uses the <b>raw</b> number of the paper source.
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.OtherPagesSource">
            <summary>
            Gets or sets the paper source for all printed pages except the first one.
            </summary>
            <remarks>
            <para>
            This property represents the paper source (printer tray) that will be used when printing
            all pages except the first one. To set source for the first page, use 
            the <see cref="P:FastReport.ReportPage.FirstPageSource"/> property.
            </para>
            <para>
            Note: This property uses the <b>raw</b> number of the paper source.
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.Duplex">
            <summary>
            Gets or sets the printer duplex mode that will be used when printing this page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Left">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Top">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Width">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Height">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.SnapSize">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.ReportPage.IsImperialUnitsUsed">
            <summary>
            Gets a value indicating that imperial units (inches, hundreths of inches) are used.
            </summary>
        </member>
        <member name="M:FastReport.ReportPage.SetDefaults">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.DrawSelection(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.HandleMouseHover(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.HandleMouseMove(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.GetPageDesignerType">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.InvokeEditor">
            <summary>
            Invokes the object's editor.
            </summary>
        </member>
        <member name="E:FastReport.ReportPage.StartPage">
            <summary>
            This event occurs when the report engine starts this page.
            </summary>
        </member>
        <member name="E:FastReport.ReportPage.FinishPage">
            <summary>
            This event occurs when the report engine finished this page.
            </summary>
        </member>
        <member name="E:FastReport.ReportPage.ManualBuild">
            <summary>
            This event occurs when the report engine is about to print databands in this page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.PaperWidth">
            <summary>
            Gets or sets a width of the paper, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.PaperHeight">
            <summary>
            Gets or sets a height of the paper, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.RawPaperSize">
            <summary>
            Gets or sets the raw index of a paper size.
            </summary>
            <remarks>
            This property stores the RawKind value of a selected papersize. It is used to distiguish
            between several papers with the same size (for ex. "A3" and "A3 with no margins") used in some
            printer drivers. 
            <para/>It is not obligatory to set this property. FastReport will select the
            necessary paper using the <b>PaperWidth</b> and <b>PaperHeight</b> values.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.UnlimitedHeight">
            <summary>
            Gets or sets a value indicating whether the page has unlimited height.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.PrintOnRollPaper">
            <summary>
            Gets or sets the value indicating whether the unlimited page should be printed on roll paper.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.UnlimitedWidth">
            <summary>
            Gets or sets a value indicating whether the page has unlimited width.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.UnlimitedHeightValue">
            <summary>
            Get or set the current height of unlimited page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.UnlimitedWidthValue">
            <summary>
            Get or set the current width of unlimited page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.HeightInPixels">
            <summary>
            Gets the current page height in pixels.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.WidthInPixels">
            <summary>
            Gets the current page width in pixels.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Landscape">
            <summary>
            Gets or sets a value indicating that page should be in landscape orientation.
            </summary>
            <remarks>
            When you change this property, it will automatically swap paper width and height, as well as paper margins.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.LeftMargin">
            <summary>
            Gets or sets the left page margin, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.TopMargin">
            <summary>
            Gets or sets the top page margin, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.RightMargin">
            <summary>
            Gets or sets the right page margin, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.BottomMargin">
            <summary>
            Gets or sets the bottom page margin, in millimeters.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.MirrorMargins">
            <summary>
            Gets or sets a value indicating that even pages should swap its left and right margins when
            previewed or printed.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Columns">
            <summary>
            Gets the page columns settings.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Border">
            <summary>
            Gets or sets the page border that will be printed inside the page printing area.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Fill">
            <summary>
            Gets or sets the page background fill.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Watermark">
            <summary>
            Gets or sets the page watermark.
            </summary>
            <remarks>
            To enabled watermark, set its <b>Enabled</b> property to <b>true</b>.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.TitleBeforeHeader">
            <summary>
            Gets or sets a value indicating that <b>ReportTitle</b> band should be printed before the 
            <b>PageHeader</b> band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.OutlineExpression">
            <summary>
            Gets or sets an outline expression.
            </summary>
            <remarks>
            For more information, see <see cref="P:FastReport.BandBase.OutlineExpression"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.PrintOnPreviousPage">
            <summary>
            Gets or sets a value indicating whether to start to print this page on a free space of the previous page.
            </summary>
            <remarks>
            This property can be used if you have two or more pages in the report template.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.ResetPageNumber">
            <summary>
            Gets or sets a value indicating that FastReport engine must reset page numbers before printing this page.
            </summary>
            <remarks>
            This property can be used if you have two or more pages in the report template.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.ExtraDesignWidth">
            <summary>
            Gets or sets a value indicating whether the page has extra width in the report designer.
            </summary>
            <remarks>
            This property may be useful if you work with such objects as Matrix and Table.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.StartOnOddPage">
            <summary>
            Gets or sets a value indicating whether this page will start on an odd page only.
            </summary>
            <remarks>
            This property is useful to print booklet-type reports. Setting this property to <b>true</b>
            means that this page will start to print on an odd page only. If necessary, an empty page
            will be added to the prepared report before this page will be printed.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.BackPage">
            <summary>
            Uses this page as a back page for previously printed pages.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ReportTitle">
            <summary>
            Gets or sets a report title band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ReportSummary">
            <summary>
            Gets or sets a report summary band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.PageHeader">
            <summary>
            Gets or sets a page header band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.PageFooter">
            <summary>
            Gets or sets a page footer band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ColumnHeader">
            <summary>
            Gets or sets a column header band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ColumnFooter">
            <summary>
            Gets or sets a column footer band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Overlay">
            <summary>
            Gets or sets an overlay band.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.Bands">
            <summary>
            Gets the collection of data bands or group header bands.
            </summary>
            <remarks>
            The <b>Bands</b> property holds the list of data bands or group headers. 
            Thus you may add several databands to this property to create master-master reports, for example.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.Guides">
            <summary>
            Gets or sets the page guidelines.
            </summary>
            <remarks>
            This property hold all vertical guidelines. The horizontal guidelines are owned by the bands (see
            <see cref="P:FastReport.BandBase.Guides"/> property).
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.Subreport">
            <summary>
            Gets or sets the reference to a parent <b>SubreportObject</b> that owns this page.
            </summary>
            <remarks>
            This property is <b>null</b> for regular report pages. See the <see cref="T:FastReport.SubreportObject"/> for details.
            </remarks>
        </member>
        <member name="P:FastReport.ReportPage.StartPageEvent">
            <summary>
            Gets or sets a script event name that will be fired when the report engine starts this page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.FinishPageEvent">
            <summary>
            Gets or sets a script event name that will be fired when the report engine finished this page.
            </summary>
        </member>
        <member name="P:FastReport.ReportPage.ManualBuildEvent">
            <summary>
            Gets or sets a script event name that will be fired when the report engine is about 
            to print databands in this page.
            </summary>
        </member>
        <member name="M:FastReport.ReportPage.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.ExtractMacros">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ReportPage.OnStartPage(System.EventArgs)">
            <summary>
            This method fires the <b>StartPage</b> event and the script code connected to the <b>StartPageEvent</b>.
            </summary>
        </member>
        <member name="M:FastReport.ReportPage.OnFinishPage(System.EventArgs)">
            <summary>
            This method fires the <b>FinishPage</b> event and the script code connected to the <b>FinishPageEvent</b>.
            </summary>
        </member>
        <member name="M:FastReport.ReportPage.OnManualBuild(System.EventArgs)">
            <summary>
            This method fires the <b>ManualBuild</b> event and the script code connected to the <b>ManualBuildEvent</b>.
            </summary>
        </member>
        <member name="M:FastReport.ReportPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportPage"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ReportSettings">
            <summary>
            This class contains settings that will be applied to the Report component.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.StartProgress">
            <summary>
            Occurs before displaying a progress window.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.FinishProgress">
            <summary>
            Occurs after closing a progress window.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.ReportPrinted">
            <summary>
            Occurs after printing a report.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.Progress">
            <summary>
            Occurs when progress state is changed.
            </summary>
        </member>
        <member name="P:FastReport.ReportSettings.ShowProgress">
            <summary>
            Gets or sets a value that determines whether to show the progress window
            when perform time-consuming operations such as run, print, export.
            </summary>
        </member>
        <member name="P:FastReport.ReportSettings.ShowPerformance">
            <summary>
            Gets or sets a value that determines whether to show the information about
            the report performance (report generation time, memory consumed) in the 
            lower right corner of the preview window.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.DatabaseLogin">
            <summary>
        Occurs when database connection is about to open.
        </summary><remarks>
        Use this event to provide own connection string or user name/password to the connection
        object that is about to open.
        <para />To provide own connection string, set the <b>e.ConnectionString</b> property.
        In this case the new connection string will be used.
        <para />To provide own user name/password, set the <b>e.UserName</b> and <b>e.Password</b> properties.
        You may ask these values in own login dialog.
        </remarks><example>This example shows how to provide username/password using own login dialog.
        <code>
        private void report1_DatabaseLogin(object sender, DatabaseLoginEventArgs e)
        {
          using (MyLoginDialog dialog = new MyLoginDialog())
          {
            if (dialog.ShowDialog() == DialogResult.OK)
            {
              e.UserName = dialog.UserName;
              e.Password = dialog.Password;
            }
          }
        }
        </code>
        </example><example>This example shows how to provide own connection string.
        <code>
        private void report1_DatabaseLogin(object sender, DatabaseLoginEventArgs e)
        {
          e.ConnectionString = my_connection_string;
        }
        </code>
        </example>
        </member>
        <member name="E:FastReport.ReportSettings.AfterDatabaseLogin">
            <summary>
            Occurs after the database connection is established.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.FilterBusinessObjectProperties">
            <summary>
            Occurs when discovering the business object's structure.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.GetBusinessObjectPropertyKind">
            <summary>
            Occurs when determining the kind of business object's property.
            </summary>
        </member>
        <member name="E:FastReport.ReportSettings.GetBusinessObjectTypeInstance">
            <summary>
            Occurs when discovering the structure of business object of ICustomTypeDescriptor type 
            with no instance specified.
            </summary>
            <remarks>
            The event handler must return an instance of that type.
            </remarks>
        </member>
        <member name="P:FastReport.ReportSettings.DefaultLanguage">
            <summary>
            Gets or sets the default script language.
            </summary>
        </member>
        <member name="P:FastReport.ReportSettings.DefaultPaperSize">
            <summary>
            Gets or sets the default paper size used when creating a new report.
            </summary>
        </member>
        <member name="P:FastReport.ReportSettings.UsePropValuesToDiscoverBO">
            <summary>
            Gets or sets a value indicating that the business object engine will use property values 
            when possible to discover the BO structure.
            </summary>
        </member>
        <member name="P:FastReport.ReportSettings.ImageLocationRoot">
            <summary>
            Gets or sets the default path for root of PictureObject.ImageLocation path.
            </summary>
        </member>
        <member name="M:FastReport.ReportSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportSettings"/> class.
            </summary>
        </member>
        <member name="T:FastReport.StyleBase">
            <summary>
            Represents the base class for the report style or the highlight condition.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.ApplyBorder">
            <summary>
            Gets or sets a value determines that the border must be applied.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.ApplyFill">
            <summary>
            Gets or sets a value determines that the fill must be applied.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.ApplyFont">
            <summary>
            Gets or sets a value determines that the font must be applied.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.ApplyTextFill">
            <summary>
            Gets or sets a value determines that the text fill must be applied.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.Border">
            <summary>
            Gets or sets a border.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.Fill">
            <summary>
            Gets or sets a fill.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.Font">
            <summary>
            Gets or sets a font.
            </summary>
        </member>
        <member name="P:FastReport.StyleBase.TextFill">
            <summary>
            Gets or sets a text fill.
            </summary>
        </member>
        <member name="M:FastReport.StyleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.StyleBase"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.StyleBase.Assign(FastReport.StyleBase)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.StyleBase.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the style.
            </summary>
            <param name="reader">Reader object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.StyleBase.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the style.
            </summary>
            <param name="writer">Writer object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="T:FastReport.SVG.SVGObject">
            <summary>
            SVG object
            </summary>
        </member>
        <member name="M:FastReport.SVG.SVGObject.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SVG.SVGObject.HandleDragDrop(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SVG.SVGObject.HandleDragOver(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SVG.SVGObject.InvokeEditor">
            <summary>
            Invokes the object's editor.
            </summary>
            <returns><b>true</b> if object was edited succesfully.</returns>
        </member>
        <member name="P:FastReport.SVG.SVGObject.SvgDocument">
            <summary>
            Gets or sets svg document
            </summary>
        </member>
        <member name="P:FastReport.SVG.SVGObject.ViewBox">
            <summary>
            Gets or sets ViewBox value
            </summary>
        </member>
        <member name="P:FastReport.SVG.SVGObject.AspectRatio">
            <summary>
            Gets or sets AspectRatio value
            </summary>
        </member>
        <member name="P:FastReport.SVG.SVGObject.SizeMode">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.SVG.SVGObject.SVGGrayscale">
            <summary>
            Gets or sets grayscale svg document
            </summary>
        </member>
        <member name="P:FastReport.SVG.SVGObject.Grayscale">
            <summary>
            Gets or sets a value indicating that the image should be displayed in grayscale mode.
            </summary>
        </member>
        <member name="P:FastReport.SVG.SVGObject.SVGString">
            <summary>
            Returns SVG string
            </summary>
        </member>
        <member name="M:FastReport.SVG.SVGObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SVG.SVGObject.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SVG.SVGObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SVG.SVGObject.LoadImage">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SVG.SVGObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SVG.SVGObject.DrawImage(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SVG.SVGObject.Clone">
            <summary>
            Returns clone of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.SVG.SVGObject.SetSVG(Svg.SvgDocument)">
            <summary>
            Sets svg object by SvgDocument
            </summary>
            <param name="svg">SVG document</param>
        </member>
        <member name="M:FastReport.SVG.SVGObject.SetSVGByPath(System.String)">
            <summary>
            Sets svg object from specified path
            </summary>
            <param name="path">path to SVG file</param>
        </member>
        <member name="M:FastReport.SVG.SVGObject.SetSVGByContent(System.String)">
            <summary>
            Sets svg object from svg string
            </summary>
            <param name="content">SVG string</param>
        </member>
        <member name="M:FastReport.SVG.SVGObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.SVG.SVGObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableRow">
            <summary>
            Represents a table row.
            </summary>
            <remarks>
            Use the <see cref="P:FastReport.Table.TableRow.Height"/> property to set the height of a row. If <see cref="P:FastReport.Table.TableRow.AutoSize"/>
            property is <b>true</b>, the row will calculate its height automatically.
            <para/>You can also set the <see cref="P:FastReport.Table.TableRow.MinHeight"/> and <see cref="P:FastReport.Table.TableRow.MaxHeight"/> properties
            to restrict the row's height.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableRow.Left">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.Width">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.Dock">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.Anchor">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableRow.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableRow.Height">
            <summary>
            Gets or sets a height of the row, in pixels.
            </summary>
            <remarks>
            The row height cannot exceed the range defined by the <see cref="P:FastReport.Table.TableRow.MinHeight"/> 
            and <see cref="P:FastReport.Table.TableRow.MaxHeight"/> properties.
            <note>To convert between pixels and report units, use the constants defined 
            in the <see cref="T:FastReport.Utils.Units"/> class.</note>
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableRow.MinHeight">
            <summary>
            Gets or sets the minimal height for this row, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.MaxHeight">
            <summary>
            Gets or sets the maximal height for this row, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.AutoSize">
            <summary>
            Gets or sets a value determines if the row should calculate its height automatically.
            </summary>
            <remarks>
            The row height cannot exceed the range defined by the <see cref="P:FastReport.Table.TableRow.MinHeight"/> 
            and <see cref="P:FastReport.Table.TableRow.MaxHeight"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableRow.CanBreak">
            <summary>
            Gets or sets a value that determines if the component can break its contents across pages.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.Index">
            <summary>
            Gets the index of this row.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.Top">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableRow.Item(System.Int32)">
            <summary>
            Gets or sets the cell with specified index.
            </summary>
            <param name="col">Column index.</param>
            <returns>The <b>TableCell</b> object.</returns>
        </member>
        <member name="P:FastReport.Table.TableRow.PageBreak">
            <summary>
            Gets or sets the page break flag for this row.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRow.KeepRows">
            <summary>
            Gets or sets the number of rows to keep on the same page.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableRow.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.Clear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableRow"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableObject">
            <summary>
            Represents a table object that consists of several rows and columns.
            </summary>
            <remarks>
            <para/>To add/remove columns, use the <see cref="P:FastReport.Table.TableBase.Columns"/> collection. To add/remove 
            rows, use the <see cref="P:FastReport.Table.TableBase.Rows"/> collection. To initialize a table with specified number of
            columns and rows, use <see cref="P:FastReport.Table.TableObject.ColumnCount"/> and <see cref="P:FastReport.Table.TableObject.RowCount"/> properties.
            <para/>To print a table in code, use the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event. In the manual build
            mode, you can use aggregate functions. The following functions available:
            <list type="table">
              <listheader>
                <term>Aggregate function</term>
                <description>Description</description>
              </listheader>
              <item>
                <term>Sum(cell)</term>
                <description>Calculates the sum of values in specified table cell.</description>
              </item>
              <item>
                <term>Min(cell)</term>
                <description>Calculates the minimum of values in specified table cell.</description>
              </item>
              <item>
                <term>Max(cell)</term>
                <description>Calculates the maximum of values in specified table cell.</description>
              </item>
              <item>
                <term>Avg(cell)</term>
                <description>Calculates the average of values in specified table cell.</description>
              </item>
              <item>
                <term>Count(cell)</term>
                <description>Calculates the number of repeats of a specified table cell.</description>
              </item>
            </list>
            <para/>To print aggregate value, place the aggregate function call in the table cell:
            <c>[Count(Cell2)]</c>. 
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.HandleDragOver(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.HandleDragDrop(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="E:FastReport.Table.TableObject.ManualBuild">
            <summary>
            Allows to print table rows/columns dynamically.
            </summary>
            <remarks>
            This event is used to handle the table print process in a code. Using special methods
            like <see cref="M:FastReport.Table.TableObject.PrintRow(System.Int32)"/>, <see cref="M:FastReport.Table.TableObject.PrintColumn(System.Int32)"/> you can print specified rows/columns.
            
            <para/>First way is to repeat specified row(s) to get a table that will grow downwards. 
            To do this, you have to call the <b>PrintRow</b> method followed by the <b>PrintColumns</b> method.
            
            <para/>Another way is to repeat the specified column(s) to get a table that grows sidewards.
            To do this, call the <b>PrintColumn</b> method followed by the <b>PrintRows</b> method.
            
            <para/>Finally, the third way is to repeat rows and columns. The table will grow downwards and
            sidewards. To do this, call the <b>PrintRow</b> method followed by the <b>PrintColumn</b>
            method (or vice versa).
            
            <para/>
            <note type="caution">
            When you print a table row-by-row, you must call one of the <b>PrintColumn</b>,
            <b>PrintColumns</b> methods right after the <b>PrintRow</b> method. 
            In the same manner, when you print a table column-by-column, call one of the 
            <b>PrintRow</b>, <b>PrintRows</b> methods right after the <b>PrintColumn</b> method. 
            If you ignore this rule you will get an exception.
            </note>
            </remarks>
            <example>
            In this example, we will consider all three ways to print a table which has 3 rows and 3 columns.
            <para/>Case 1: print a table downwards.
            <code>
            // print table header (the first row)
            Table1.PrintRow(0);
            Table1.PrintColumns();
            // print table body (the second row)
            for (int i = 0; i &lt; 10; i++)
            {
              Table1.PrintRow(1);
              Table1.PrintColumns();
            }
            // print table footer (the third row)
            Table1.PrintRow(2);
            Table1.PrintColumns();
            </code>
            
            <para/>Case 2: print a table sidewards.
            <code>
            // print table header (the first column)
            Table1.PrintColumn(0);
            Table1.PrintRows();
            // print table body (the second column)
            for (int i = 0; i &lt; 10; i++)
            {
              Table1.PrintColumn(1);
              Table1.PrintRows();
            }
            // print table footer (the third column)
            Table1.PrintColumn(2);
            Table1.PrintRows();
            </code>
            
            <para/>Case 3: print a table downwards and sidewards.
            <code>
            // print the first row with all its columns
            Table1.PrintRow(0);
            // print header column
            Table1.PrintColumn(0);
            // print 10 data columns
            for (int i = 0; i &lt; 10; i++)
            {
              Table1.PrintColumn(1);
            }
            // print footer column
            Table1.PrintColumn(2);
            
            // print table body (the second row)
            for (int i = 0; i &lt; 10; i++)
            {
              // print data row with all its columns
              Table1.PrintRow(1);
              Table1.PrintColumn(0);
              for (int j = 0; j &lt; 10; j++)
              {
                Table1.PrintColumn(1);
              }
              Table1.PrintColumn(2);
            }
            
            // print table footer (the third row)
            Table1.PrintRow(2);
            // again print all columns in the table footer
            Table1.PrintColumn(0);
            for (int i = 0; i &lt; 10; i++)
            {
              Table1.PrintColumn(1);
            }
            Table1.PrintColumn(2);
            </code>
            </example>
        </member>
        <member name="P:FastReport.Table.TableObject.ManualBuildEvent">
            <summary>
            Gets or sets a script method name that will be used to handle the 
            <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event.
            </summary>
            <remarks>
            If you use this event, you must handle the table print process manually.
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for details.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableObject.ManualBuildAutoSpans">
            <summary>
            Determines whether to manage cell spans automatically during manual build.
            </summary>
            <remarks>
            The default value for this property is <b>true</b>. If you set it to <b>false</b>, you need to manage
            spans in your ManualBuild event handler.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableObject.ColumnCount">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableObject.RowCount">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.GetCustomScript">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableObject.OnManualBuild(System.EventArgs)">
            <summary>
            This method fires the <b>ManualBuild</b> event and the script code connected to the <b>ManualBuildEvent</b>.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintRow(System.Int32)">
            <summary>
            Prints a row with specified index.
            </summary>
            <param name="index">Index of a row to print.</param>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintRows(System.Int32[])">
            <summary>
            Prints rows with specified indices.
            </summary>
            <param name="indices">Indices of rows to print.</param>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintRows">
            <summary>
            Prints all rows.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintColumn(System.Int32)">
            <summary>
            Prints a column with specified index.
            </summary>
            <param name="index">Index of a column to print.</param>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintColumns(System.Int32[])">
            <summary>
            Prints columns with specified indices.
            </summary>
            <param name="indices">Indices of columns to print.</param>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PrintColumns">
            <summary>
            Prints all columns.
            </summary>
            <remarks>
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.PageBreak">
            <summary>
            Adds a page before rows or columns.
            </summary>
            <remarks>
            Call this method to insert a page break before the next row or column that you intend to print
            using <b>PrintRow(s)</b> or <b>PrintColumn(s)</b> methods.
            See the <see cref="E:FastReport.Table.TableObject.ManualBuild"/> event for more details.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableObject"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableColumn">
            <summary>
            Represents a table column.
            </summary>
            <remarks>
            Use the <see cref="P:FastReport.Table.TableColumn.Width"/> property to set the width of a column. If <see cref="P:FastReport.Table.TableColumn.AutoSize"/>
            property is <b>true</b>, the column will calculate its width automatically.
            <para/>You can also set the <see cref="P:FastReport.Table.TableColumn.MinWidth"/> and <see cref="P:FastReport.Table.TableColumn.MaxWidth"/> properties
            to restrict the column's width.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableColumn.Top">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.Height">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.Dock">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.Anchor">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableColumn.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableColumn.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableColumn.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableColumn.Width">
            <summary>
            Gets or sets a width of the column, in pixels.
            </summary>
            <remarks>
            The column width cannot exceed the range defined by the <see cref="P:FastReport.Table.TableColumn.MinWidth"/> 
            and <see cref="P:FastReport.Table.TableColumn.MaxWidth"/> properties.
            <note>To convert between pixels and report units, use the constants defined 
            in the <see cref="T:FastReport.Utils.Units"/> class.</note>
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableColumn.MinWidth">
            <summary>
            Gets or sets the minimal width for this column, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.MaxWidth">
            <summary>
            Gets or sets the maximal width for this column, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.AutoSize">
            <summary>
            Gets or sets a value determines if the column should calculate its width automatically.
            </summary>
            <remarks>
            The column width cannot exceed the range defined by the <see cref="P:FastReport.Table.TableColumn.MinWidth"/> 
            and <see cref="P:FastReport.Table.TableColumn.MaxWidth"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableColumn.Index">
            <summary>
            Gets the index of this column.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.Left">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableColumn.PageBreak">
            <summary>
            Gets or sets the page break flag for this column.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumn.KeepColumns">
            <summary>
            Gets or sets the number of columns to keep on the same page.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableColumn.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableColumn.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableColumn.Clear">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableColumn"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableCell">
            <summary>
            Represents a table cell.
            </summary>
            <remarks>
            Use <see cref="P:FastReport.Table.TableCell.ColSpan"/>, <see cref="P:FastReport.Table.TableCell.RowSpan"/> properties to set the cell's 
            column and row spans. To put an object inside the cell, use its <see cref="P:FastReport.Table.TableCell.Objects"/> property:
            <code>
            TableCell cell1;
            PictureObject picture1 = new PictureObject();
            picture1.Bounds = new RectangleF(0, 0, 32, 32);
            picture1.Name = "Picture1";
            cell1.Objects.Add(picture1);
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableCell.Anchor">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Dock">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.CanGrow">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.CanShrink">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.GrowToBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.AutoWidth">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Duplicates">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.ShiftMode">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Left">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Top">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableCell.HandleMouseHover(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.HandleMouseMove(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.HandleDragOver(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.HandleDragDrop(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.HandleDoubleClick">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.GetSmartTag">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableCell.Objects">
            <summary>
            Gets a collection of objects contained in this cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.ColSpan">
            <summary>
            Gets or sets the column span for this cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.RowSpan">
            <summary>
            Gets or sets the row span for this cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Text">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableCell.Address">
            <summary>
            Gets the address of this cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Width">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.Height">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCell.AbsLeft">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableCell.AbsTop">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableCell.Table">
            <summary>
            Gets the <b>TableBase</b> object which this cell belongs to.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableCell.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.Clone">
            <summary>
            Creates the exact copy of this cell.
            </summary>
            <returns>The copy of this cell.</returns>
        </member>
        <member name="M:FastReport.Table.TableCell.Equals(FastReport.Table.TableCell)">
            <summary>
            Determines if two cells have identical settings.
            </summary>
            <param name="cell">Cell to compare with.</param>
            <returns><b>true</b> if cells are equal.</returns>
        </member>
        <member name="M:FastReport.Table.TableCell.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.SetStyle(FastReport.Table.TableCell)">
            <summary>
            Changes the cell's style.
            </summary>
            <param name="style">The new style.</param>
            <remarks>
            Each cell in a dynamic table object (or in a matrix) has associated style. 
            Several cells may share one style. If you try to change the cell's appearance directly 
            (like setting cell.TextColor), it may affect other cells in the table. 
            To change the single cell, use this method.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableCell.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableCell"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableBase">
            <summary>
            The base class for table-type controls such as <see cref="T:FastReport.Table.TableObject"/> and 
            <see cref="T:FastReport.Matrix.MatrixObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.BreakTo">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.CanGrow">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.CanShrink">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.Height">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableBase.Hyperlink">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.IsSelected">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableBase.Width">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.HandleKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.HandleMouseHover(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.HandleMouseMove(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.OnAfterInsert(FastReport.InsertFrom)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.Table.TableBase.Rows">
            <summary>
            Gets a collection of table rows.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.Columns">
            <summary>
            Gets a collection of table columns.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.FixedRows">
            <summary>
            Gets or sets the number of fixed rows that will be repeated on each page.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.FixedColumns">
            <summary>
            Gets or sets the number of fixed columns that will be repeated on each page.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.RepeatHeaders">
            <summary>
            Gets or sets a value that determines whether is necessary to repeat table header on each page.
            </summary>
            <remarks>
            To define a table header, set the <see cref="P:FastReport.Table.TableBase.FixedRows"/> and <see cref="P:FastReport.Table.TableBase.FixedColumns"/>
            properties.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.RepeatRowHeaders">
            <summary>
            Gets or sets a value that determines whether is necessary to repeat table Row header on each page.
            </summary>
            <remarks>
            To define a table Row header, set the <see cref="P:FastReport.Table.TableBase.FixedRows"/>
            properties.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.RepeatColumnHeaders">
            <summary>
            Gets or sets a value that determines whether is necessary to repeat table Column header on each page.
            </summary>
            <remarks>
            To define a table Column header, set the <see cref="P:FastReport.Table.TableBase.FixedColumns"/>
            properties.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.Layout">
            <summary>
            Gets or sets the table layout.
            </summary>
            <remarks>
            This property affects printing the big table that breaks across pages.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.WrappedGap">
            <summary>
            Gets or sets gap between parts of the table in wrapped layout mode.
            </summary>
            <remarks>
            This property is used if you set the <see cref="P:FastReport.Table.TableBase.Layout"/> property to <b>Wrapped</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.AdjustSpannedCellsWidth">
            <summary>
            Gets or sets a value that determines whether to adjust the spanned cell's width when breaking the table across pages.
            </summary>
            <remarks>
            If set to <b>true</b>, the spanned cell's width will be adjusted to accomodate all contained text.
            </remarks>
        </member>
        <member name="P:FastReport.Table.TableBase.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the table cell.
            </summary>
            <param name="col">Column index.</param>
            <param name="row">Row index.</param>
            <returns>The <b>TableCell</b> object that represents a cell.</returns>
        </member>
        <member name="P:FastReport.Table.TableBase.ColumnCount">
            <summary>
            Gets or sets a number of columns in the table.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.RowCount">
            <summary>
            Gets or sets a number of rows in the table.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableBase.ResultTable">
            <summary>
            Gets a table which contains the result of rendering dynamic table.
            </summary>
            <remarks>
            Use this property to access the result of rendering your table in dynamic mode.
            It may be useful if you want to center or right-align the result table on a page. 
            In this case, you need to add the following code at the end of your ManualBuild event handler:
            <code>
            // right-align the table
            Table1.ResultTable.Left = Engine.PageWidth - Table1.ResultTable.CalcWidth() - 1;
            </code>
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.IsVisible(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.GetCellData(System.Int32,System.Int32)">
            <summary>
            Gets data of the table cell with specified column and row numbers.
            </summary>
            <param name="col">The column number.</param>
            <param name="row">The row number.</param>
            <returns>TableCellData instance containing data of the table cell.</returns>
        </member>
        <member name="M:FastReport.Table.TableBase.CreateUniqueNames">
            <summary>
            Creates unique names for all table elements such as rows, columns, cells.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.UpdateLayout(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.CalcWidth">
            <summary>
            Calculates and returns the table width, in pixels.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableBase.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.Break(FastReport.BreakableComponent)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableBase.Sum(FastReport.Table.TableCell)">
            <summary>
            Calculates a sum of values in a specified cell.
            </summary>
            <param name="aggregateCell">The cell.</param>
            <returns>The <b>object</b> that contains calculated value.</returns>
            <remarks>
            This method can be called from the <b>ManualBuild</b> event handler only.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.Min(FastReport.Table.TableCell)">
            <summary>
            Calculates a minimum of values in a specified cell.
            </summary>
            <param name="aggregateCell">The cell.</param>
            <returns>The <b>object</b> that contains calculated value.</returns>
            <remarks>
            This method can be called from the <b>ManualBuild</b> event handler only.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.Max(FastReport.Table.TableCell)">
            <summary>
            Calculates a maximum of values in a specified cell.
            </summary>
            <param name="aggregateCell">The cell.</param>
            <returns>The <b>object</b> that contains calculated value.</returns>
            <remarks>
            This method can be called from the <b>ManualBuild</b> event handler only.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.Avg(FastReport.Table.TableCell)">
            <summary>
            Calculates an average of values in a specified cell.
            </summary>
            <param name="aggregateCell">The cell.</param>
            <returns>The <b>object</b> that contains calculated value.</returns>
            <remarks>
            This method can be called from the <b>ManualBuild</b> event handler only.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.Count(FastReport.Table.TableCell)">
            <summary>
            Calculates number of repeats of a specified cell.
            </summary>
            <param name="aggregateCell">The cell.</param>
            <returns>The <b>object</b> that contains calculated value.</returns>
            <remarks>
            This method can be called from the <b>ManualBuild</b> event handler only.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableBase"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableLayout">
            <summary>
            Specifies the layout that will be used when printing a big table.
            </summary>
        </member>
        <member name="F:FastReport.Table.TableLayout.AcrossThenDown">
            <summary>
            The table is printed across a pages then down.
            </summary>
        </member>
        <member name="F:FastReport.Table.TableLayout.DownThenAcross">
            <summary>
            The table is printed down then across a pages.
            </summary>
        </member>
        <member name="F:FastReport.Table.TableLayout.Wrapped">
            <summary>
            The table is wrapped.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableCellData">
            <summary>
            Represents data of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Table">
            <summary>
            Gets or sets parent table of the cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Objects">
            <summary>
            Gets or sets objects collection of the cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Text">
            <summary>
            Gets or sets text of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Value">
            <summary>
            Gets or sets value of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.HyperlinkValue">
            <summary>
            Gets or sets hyperlink value of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.ColSpan">
            <summary>
            Gets or sets column span of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.RowSpan">
            <summary>
            Gets or sets row span of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Address">
            <summary>
            Gets or sets the address of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Cell">
            <summary>
            Gets the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Style">
            <summary>
            Gets style of table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.OriginalCell">
            <summary>
            Gets original the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Width">
            <summary>
            Gets width of the table cell.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableCellData.Height">
            <summary>
            Gets height of the table cell.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableCellData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Table.TableCellData"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableCellData.AttachCell(FastReport.Table.TableCell)">
            <summary>
            Attaches the specified table cell.
            </summary>
            <param name="cell">The table cell instance.</param>
            <remarks>This method is called when we load the table.</remarks>
        </member>
        <member name="M:FastReport.Table.TableCellData.Assign(FastReport.Table.TableCellData)">
            <summary>
            Assigns another <see cref="T:FastReport.Table.TableCellData"/> instance.
            </summary>
            <param name="source">The table cell data that used as a source.</param>
            <remarks>This method is called when we copy cells or clone columns/rows in a designer.</remarks>
        </member>
        <member name="M:FastReport.Table.TableCellData.RunTimeAssign(FastReport.Table.TableCell,System.Boolean)">
            <summary>
            Assigns another <see cref="T:FastReport.Table.TableCellData"/> instance at run time.
            </summary>
            <param name="cell">The table cell data that used as a source.</param>
            <param name="copyChildren">This flag shows should children be copied or not.</param>
            <remarks>This method is called when we print a table. We should create a copy of the cell and set the style.</remarks>
        </member>
        <member name="M:FastReport.Table.TableCellData.SetStyle(FastReport.Table.TableCell)">
            <summary>
            Sets style of the table cell.
            </summary>
            <param name="style">The new style of the table cell.</param>
        </member>
        <member name="M:FastReport.Table.TableCellData.Dispose">
            <summary>
            Disposes the <see cref="T:FastReport.Table.TableCellData"/> instance.
            </summary>
        </member>
        <member name="M:FastReport.Table.TableCellData.CalcWidth">
            <summary>
            Calculates width of the table cell.
            </summary>
            <returns>The value of the table cell width.</returns>
        </member>
        <member name="M:FastReport.Table.TableCellData.CalcHeight(System.Single)">
            <summary>
            Calculates height of the table cell.
            </summary>
            <param name="width">The width of the table cell.</param>
            <returns>The value of the table cell height.</returns>
        </member>
        <member name="M:FastReport.Table.TableCellData.UpdateLayout(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Updates layout of the table cell.
            </summary>
            <param name="width">The width of the table cell.</param>
            <param name="height">The height of the table cell.</param>
            <param name="dx">The new value of x coordinate.</param>
            <param name="dy">The new value of y coordinate.</param>
        </member>
        <member name="T:FastReport.Table.TableColumnCollection">
            <summary>
            Represents a collection of <see cref="T:FastReport.Table.TableColumn"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableColumnCollection.Item(System.Int32)">
            <summary>
            Gets a column with specified index.
            </summary>
            <param name="index">Index of a column.</param>
            <returns>The column with specified index.</returns>
        </member>
        <member name="M:FastReport.Table.TableColumnCollection.OnInsert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableColumnCollection.OnRemove(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Table.TableResult">
            <summary>
            Represents a result table.
            </summary>
            <remarks>
            Do not use this class directly. It is used by the <see cref="T:FastReport.Table.TableObject"/> and 
            <see cref="T:FastReport.Matrix.MatrixObject"/> objects to render a result.
            </remarks>
        </member>
        <member name="E:FastReport.Table.TableResult.AfterCalcBounds">
            <summary>
            Occurs after calculation of table bounds.
            </summary>
            <remarks>
            You may use this event to change automatically calculated rows/column sizes. It may be useful
            if you need to fit dynamically printed table on a page.
            </remarks>
        </member>
        <member name="M:FastReport.Table.TableResult.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableResult.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableResult.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:FastReport.Table.TableResult"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Table.TableRowCollection">
            <summary>
            Represents a collection of <see cref="T:FastReport.Table.TableRow"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.Table.TableRowCollection.Item(System.Int32)">
            <summary>
            Gets a row with specified index.
            </summary>
            <param name="index">Index of a row.</param>
            <returns>The row with specified index.</returns>
        </member>
        <member name="M:FastReport.Table.TableRowCollection.OnInsert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Table.TableRowCollection.OnRemove(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TextObject">
            <summary>
            Represents the Text object that may display one or several text lines.
            </summary>
            <remarks>
            Specify the object's text in the <see cref="P:FastReport.TextObjectBase.Text">Text</see> property. 
            Text may contain expressions and data items, for example: "Today is [Date]". When report 
            is running, all expressions are calculated and replaced with actual values, so the text 
            would be "Today is 01.01.2008".
            <para/>The symbols used to find expressions in a text are set in the 
            <see cref="P:FastReport.TextObjectBase.Brackets">Brackets</see> property. You also may disable expressions 
            using the <see cref="P:FastReport.TextObjectBase.AllowExpressions">AllowExpressions</see> property.
            <para/>To format an expression value, use the <see cref="N:FastReport.Format"/> property.
            </remarks>
        </member>
        <member name="M:FastReport.TextObject.DrawSearchHighlight(FastReport.Utils.FRPaintEventArgs,System.Drawing.CharacterRange)">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.TextObject.Left">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.TextObject.Top">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.TextObject.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.TextObject.Height">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.AssignFormat(FastReport.ReportComponentBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.HandleDragOver(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.HandleDragDrop(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.HandleKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.GetSmartTag">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.TextObject.ParagraphFormat">
            <summary>
            Gets or sets a paragraph format for a new html rendering type, not for others rendering
            </summary>
        </member>
        <member name="P:FastReport.TextObject.AutoWidth">
            <summary>
            Gets or sets a value that determines if the text object should handle its width automatically.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.AutoShrink">
            <summary>
            Gets or sets a value that indicates whether the font size should shrink to
            display the longest text line without word wrap.
            </summary>
            <remarks>
            To limit the minimum size, use the <see cref="P:FastReport.TextObject.AutoShrinkMinSize"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.AutoShrinkMinSize">
            <summary>
            Gets or sets the minimum size of font (or minimum width ratio) if the <see cref="P:FastReport.TextObject.AutoShrink"/>
            mode is on.
            </summary>
            <remarks>
            This property determines the minimum font size (in case the <see cref="P:FastReport.TextObject.AutoShrink"/> property is set to
            <b>FontSize</b>), or the minimum font width ratio (if <b>AutoShrink</b> is set to <b>FontWidth</b>).
            <para/>The default value is 0, that means no limits.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.HorzAlign">
            <summary>
            Gets or sets the horizontal alignment of a text in the TextObject object.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.VertAlign">
            <summary>
            Gets or sets the vertical alignment of a text in the TextObject object.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.Angle">
            <summary>
            Gets or sets the text angle, in degrees.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.RightToLeft">
            <summary>
            Gets or sets a value that indicates whether the component should draw right-to-left for RTL languages.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.WordWrap">
            <summary>
            Gets or sets a value that indicates if lines are automatically word-wrapped.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.Underlines">
            <summary>
            Gets or sets a value that determines if the text object will underline each text line.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.Font">
            <summary>
            Gets or sets the font settings for this object.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.TextFill">
            <summary>
            Gets or sets the fill color used to draw a text.
            </summary>
            <remarks>
            Default fill is <see cref="T:FastReport.SolidFill"/>. You may specify other fill types, for example:
            <code>
            text1.TextFill = new HatchFill(Color.Black, Color.White, HatchStyle.Cross);
            </code>
            Use the <see cref="P:FastReport.TextObject.TextColor"/> property to set the solid text color.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.TextOutline">
            <summary>
            Gets or sets the text outline.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.TextColor">
            <summary>
            Gets or sets the text color in a simple manner.
            </summary>
            <remarks>
            This property can be used in a report script to change the text color of the object. It is 
            equivalent to: <code>textObject1.TextFill = new SolidFill(color);</code>
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.Trimming">
            <summary>
            Gets or sets the string trimming options.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.FontWidthRatio">
            <summary>
            Gets or sets the width ratio of the font. 
            </summary>
            <remarks>
            Default value is 1. To make a font wider, set a value grether than 1; to make a font narrower,
            set a value less than 1.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.LineHeight">
            <summary>
            Gets or sets the height of single text line, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.FirstTabOffset">
            <summary>
            Gets or sets the offset of the first TAB symbol.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.TabWidth">
            <summary>
            Gets or sets the width of TAB symbol, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.Clip">
            <summary>
            Gets or sets a value that indicates if text should be clipped inside the object's bounds.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.Highlight">
            <summary>
            Gets the collection of conditional highlight attributes.
            </summary>
            <remarks>
            Conditional highlight is used to change the visual appearance of the Text object
            depending on some condition(s). For example, you may highlight negative values displayed by
            the Text object with red color. To do this, add the highlight condition:
            <code>
            TextObject text1;
            HighlightCondition highlight = new HighlightCondition();
            highlight.Expression = "Value &lt; 0";
            highlight.Fill = new SolidFill(Color.Red);
            highlight.ApplyFill = true;
            text1.Highlight.Add(highlight);
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.Wysiwyg">
            <summary>
            Gets or sets a value that indicates if the text object should display its contents similar to the printout.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.ForceJustify">
            <summary>
            Forces justify for the last text line.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.HtmlTags">
            <summary>
            Allows handling html tags in the text.
            </summary>
            <remarks>
            The following html tags can be used in the object's text: &lt;b&gt;, &lt;i&gt;, &lt;u&gt;,
            &lt;strike&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;/b&gt;, &lt;/i&gt;, &lt;/u&gt;,
            &lt;/strike&gt;, &lt;/sub&gt;, &lt;/sup&gt;,
            &lt;font color=&amp;...&amp;&gt;, &lt;/font&gt;. Font size cannot
            be changed due to limitations in the rendering engine.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.HasHtmlTags">
            <summary>
            Indicates handling html tags in the text.
            </summary>
            <remarks>To set the value use the TextRenderer property.</remarks>
        </member>
        <member name="P:FastReport.TextObject.TextRenderType">
            <summary>
            The type of text render
            </summary>
                /// <remarks>
            The following html tags can be used in the object's text: &lt;b&gt;, &lt;i&gt;, &lt;u&gt;,
            &lt;strike&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;/b&gt;, &lt;/i&gt;, &lt;/u&gt;,
            &lt;/strike&gt;, &lt;/sub&gt;, &lt;/sup&gt;,
            &lt;font color=&amp;...&amp;&gt;, &lt;/font&gt;. Font size cannot
            be changed due to limitations in the rendering engine.
            </remarks>
        </member>
        <member name="P:FastReport.TextObject.ParagraphOffset">
            <summary>
            Gets or sets the paragraph offset, in pixels. For HtmlParagraph use ParagraphFormat.FirstLineIndent.
            </summary>
        </member>
        <member name="P:FastReport.TextObject.InlineImageCache">
            <summary>
            Cache for inline images
            </summary>
        </member>
        <member name="M:FastReport.TextObject.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.DrawText(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws a text.
            </summary>
            <param name="e">Paint event data.</param>
        </member>
        <member name="M:FastReport.TextObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.ApplyStyle(FastReport.Style)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.SaveStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.RestoreStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.CalcWidth">
            <summary>
            Calculates the object's width.
            </summary>
            <returns>The width, in pixels.</returns>
        </member>
        <member name="M:FastReport.TextObject.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.Break(FastReport.BreakableComponent)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.TextObject"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.TextObject.IsHaveToConvert(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObject.GetConvertedObjects">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TextObjectBase">
            <summary>
            Base class for text objects such as <see cref="T:FastReport.TextObject"/> and <see cref="T:FastReport.RichObject"/>.
            </summary>
            <remarks>
            This class implements common functionality of the text objects.
            </remarks>
        </member>
        <member name="M:FastReport.TextObjectBase.SearchText(System.String,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObjectBase.DrawSearchHighlight(FastReport.Utils.FRPaintEventArgs,System.Drawing.CharacterRange)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObjectBase.AssignFormat(FastReport.ReportComponentBase)">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.TextObjectBase.AllowExpressions">
            <summary>
            Gets or sets a value indicating that the object's text may contain expressions.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.Brackets">
            <summary>
            Gets or sets the symbols that will be used to find expressions in the object's text.
            </summary>
            <remarks>
            The default property value is "[,]". As you can see, the open and close symbols are 
            separated by the comma. You may use another symbols, for example: "&lt;,&gt;" or "&lt;%,%&gt;".
            You should use different open and close symbols.
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.Text">
            <summary>
            Gets or sets the object's text.
            </summary>
            <remarks>
            Text may contain expressions and data items, for example: "Today is [Date]". 
            When report is running, all expressions are calculated and replaced with actual 
            values, so the text would be "Today is 01.01.2008".
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.Padding">
            <summary>
            Gets or sets padding within the text object.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.HideZeros">
            <summary>
            Gets or sets a value indicating that zero values must be hidden.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.HideValue">
            <summary>
            Gets or sets a value that will be hidden.
            </summary>
            <remarks>
            Use this property to specify a value that you would like to hide. For example, specify "0"
            if you want to hide zero values, or use <see cref="P:FastReport.TextObjectBase.HideZeros"/> property to do this.
            <para/>You also may use this property to hide default DateTime values (such as 1/1/1900).
            In this case you need to specify a string containing both date and time, for example:
            "1/1/1900 0:00:00".
            <note type="caution">
            FastReport uses the <b>ToString</b> conversion to compare the expression value with this property.
            This conversion depends on regional settings selected in the Control Panel, so be aware of this
            if you going to distribute your report worldwide.
            </note>
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.NullValue">
            <summary>
            Gets or sets a string that will be displayed instead of a null value.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.Format">
            <summary>
            Gets or sets the formatter that will be used to format data in the Text object.
            </summary>
            <remarks>
            The default formatter does nothing, i.e. it shows expression values with no formatting.
            To set another formatting, create a new formatter and assign it to this property.
            <para/>If there are several expressions in the text, use the <see cref="P:FastReport.TextObjectBase.Formats"/> property
            to format each expression value.
            </remarks>
            <example>This example shows how to set currency formatter.
            <code>
            TextObject text1;
            text1.Format = new CurrencyFormat();
            </code>
            </example>
        </member>
        <member name="P:FastReport.TextObjectBase.ProcessAt">
            <summary>
            Gets or sets a value that specifies how the report engine processes this text object.
            </summary>
            <remarks>
            Use this property to perform such task as "print a total value in the group header". Normally,
            all total values are calculated in the footers (for example, in a group footer). If you try to print
            a total value in the group header, you will get 0. If you set this property to 
            <b>ProcessAt.DataFinished</b>, FastReport will do the following:
            <list type="bullet">
              <item>
                <description>print the object (with wrong value);</description>
              </item>
              <item>
                <description>print all related data rows;</description>
              </item>
              <item>
                <description>calculate the correct object's value and replace old (wrong) value with the new one.</description>
              </item>
            </list>
            <note type="caution">
            This option will not work if you set the <see cref="P:FastReport.Report.UseFileCache"/> to <b>true</b>.
            </note>
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.Formats">
            <summary>
            Gets the collection of formatters.
            </summary>
            <remarks>
            This property is used to set format for each expression contained in the text.
            For example, if the <b>TextObject</b> contains two expressions: 
            <para/><i>Today is [Date]; Page [PageN]</i>
            <para/>you can use the following code to format these expressions separately:
            <code>
            text1.Formats.Clear();
            text1.Formats.Add(new DateFormat());
            text1.Formats.Add(new NumberFormat());
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.TextObjectBase.Duplicates">
            <summary>
            Gets or sets a value that determines how to display duplicate values.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.Value">
            <summary>
            Gets a value of expression contained in the object's text.
            </summary>
        </member>
        <member name="P:FastReport.TextObjectBase.Editable">
            <summary>
            Gets or sets editable for pdf export
            </summary>
        </member>
        <member name="M:FastReport.TextObjectBase.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObjectBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObjectBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObjectBase.ExtractMacros">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextObjectBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.TextObjectBase"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Wizards.BlankReportWizard">
            <summary>
            Represents the "Blank Report" wizard.
            </summary>
        </member>
        <member name="M:FastReport.Wizards.BlankReportWizard.Run(FastReport.Design.Designer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Wizards.InheritedReportWizard">
            <summary>
            Represents the "Inherited Report" wizard.
            </summary>
        </member>
        <member name="M:FastReport.Wizards.InheritedReportWizard.Run(FastReport.Design.Designer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Wizards.LabelWizard">
            <summary>
            Represents the "Label" wizard.
            </summary>
        </member>
        <member name="P:FastReport.Wizards.LabelWizard.SelectedManufacturer">
            <summary>
            Gets a selected label manufacturer.
            </summary>
        </member>
        <member name="P:FastReport.Wizards.LabelWizard.SelectedLabelName">
            <summary>
            Gets a selected label name.
            </summary>
        </member>
        <member name="P:FastReport.Wizards.LabelWizard.SelectedLabelParameters">
            <summary>
            Gets the XML item containing a selected label parameters.
            </summary>
        </member>
        <member name="M:FastReport.Wizards.LabelWizard.Run(FastReport.Design.Designer)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Wizards.LabelWizard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Wizards.LabelWizard"/> class with the default settings.
            </summary>
        </member>
        <member name="T:FastReport.Wizards.NewDataSourceWizard">
            <summary>
            Represents the "New Data Source" wizard.
            </summary>
        </member>
        <member name="M:FastReport.Wizards.NewDataSourceWizard.Run(FastReport.Design.Designer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Wizards.StandardReportWizard">
            <summary>
            Represents the "Standard Report" wizard.
            </summary>
        </member>
        <member name="M:FastReport.Wizards.StandardReportWizard.Run(FastReport.Design.Designer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Wizards.WizardBase">
            <summary>
            The base class for all report wizards.
            </summary>
            <remarks>
            To create own wizard, use this class as a base. All you need is to override 
            the <see cref="M:FastReport.Wizards.WizardBase.Run(FastReport.Design.Designer)"/> method. To register a wizard, use the 
            <see cref="M:FastReport.Utils.RegisteredObjects.AddWizard(System.Type,System.Drawing.Bitmap,System.String,System.Boolean)"/> method.
            </remarks>
        </member>
        <member name="M:FastReport.Wizards.WizardBase.Run(FastReport.Design.Designer)">
            <summary>
            Runs the wizard.
            </summary>
            <param name="designer">Report designer.</param>
            <returns><b>true</b> if wizard was executed succesfully.</returns>
            <remarks>
            This method is called when you select a wizard in the "Add New Item" window and
            click "Add" button. You should do the work in this method.
            </remarks>
        </member>
        <member name="T:FastReport.Wizards.NewDialogWizard">
            <summary>
            Represents the "New Dialog" wizard.
            </summary>
        </member>
        <member name="M:FastReport.Wizards.NewDialogWizard.Run(FastReport.Design.Designer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Wizards.NewPageWizard">
            <summary>
            Represents the "New Page" wizard.
            </summary>
        </member>
        <member name="M:FastReport.Wizards.NewPageWizard.Run(FastReport.Design.Designer)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.ZipCodeObject">
            <summary>
            Represents a zip code object.
            </summary>
            <remarks>
            This object is mainly used in Russia to print postal index on envelopes. It complies with the
            GOST R 51506-99.
            </remarks>
        </member>
        <member name="M:FastReport.ZipCodeObject.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.OnAfterInsert(FastReport.InsertFrom)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.GetSmartTag">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.ZipCodeObject.SegmentWidth">
            <summary>
            Gets or sets the width of a single zipcode segment, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.SegmentHeight">
            <summary>
            Gets or sets the height of a single zipcode segment, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.Spacing">
            <summary>
            Gets or sets the spacing between origins of segments, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.SegmentCount">
            <summary>
            Gets or sets the number of segments in zipcode.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.ShowMarkers">
            <summary>
            Gets or sets a value indicating whether the reference markers should be drawn.
            </summary>
            <remarks>
            Reference markers are used by postal service to automatically read the zipcode.
            </remarks>
        </member>
        <member name="P:FastReport.ZipCodeObject.ShowGrid">
            <summary>
            Gets or sets a value indicating whether the segment grid should be drawn.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.DataColumn">
            <summary>
            Gets or sets a data column name bound to this control.
            </summary>
            <remarks>
            Value must be in the form "Datasource.Column".
            </remarks>
        </member>
        <member name="P:FastReport.ZipCodeObject.Expression">
            <summary>
            Gets or sets an expression that contains the zip code.
            </summary>
        </member>
        <member name="P:FastReport.ZipCodeObject.Text">
            <summary>
            Gets or sets the zip code.
            </summary>
        </member>
        <member name="M:FastReport.ZipCodeObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ZipCodeObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ZipCodeObject"/> with the default settings.
            </summary>
        </member>
        <member name="T:FastReport.SubreportObject">
            <summary>
            Represents a subreport object.
            </summary>
            <remarks>
            To create a subreport in code, you should create the report page first and 
            connect it to the subreport using the <see cref="P:FastReport.SubreportObject.ReportPage"/> property.
            </remarks>
            <example>The following example shows how to create a subreport object in code.
            <code>
            // create the main report page
            ReportPage reportPage = new ReportPage();
            reportPage.Name = "Page1";
            report.Pages.Add(reportPage);
            // create report title band
            reportPage.ReportTitle = new ReportTitleBand();
            reportPage.ReportTitle.Name = "ReportTitle1";
            reportPage.ReportTitle.Height = Units.Millimeters * 10;
            // add subreport on it
            SubreportObject subreport = new SubreportObject();
            subreport.Name = "Subreport1";
            subreport.Bounds = new RectangleF(0, 0, Units.Millimeters * 25, Units.Millimeters * 5);
            reportPage.ReportTitle.Objects.Add(subreport);
            // create subreport page
            ReportPage subreportPage = new ReportPage();
            subreportPage.Name = "SubreportPage1";
            report.Pages.Add(subreportPage);
            // connect the subreport to the subreport page
            subreport.ReportPage = subreportPage;
            </code>
            </example>
        </member>
        <member name="P:FastReport.SubreportObject.Printable">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.Exportable">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.Border">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.Fill">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.Cursor">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.Hyperlink">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.CanGrow">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.CanShrink">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.Style">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.BeforePrintEvent">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.AfterPrintEvent">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.ClickEvent">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.SubreportObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SubreportObject.SetName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SubreportObject.OnAfterInsert(FastReport.InsertFrom)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SubreportObject.Delete">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SubreportObject.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.SubreportObject.ReportPage">
            <summary>
            Gets or sets a report page that contains the subreport bands and objects.
            </summary>
        </member>
        <member name="P:FastReport.SubreportObject.PrintOnParent">
            <summary>
            Gets or sets a value indicating that subreport must print its objects on a parent band to which it belongs.
            </summary>
            <remarks>
            Default behavior of the subreport is to print subreport objects they own separate bands.
            </remarks>
        </member>
        <member name="M:FastReport.SubreportObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SubreportObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SubreportObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.SubreportObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ShapeObject">
            <summary>
            Represents a shape object.
            </summary>
            <remarks>
            Use the <see cref="T:FastReport.ShapeKind"/> property to specify a shape. To set the width, style and color of the
            shape's border, use the <b>Border.Width</b>, <b>Border.Style</b> and <b>Border.Color</b> properties.
            </remarks>
        </member>
        <member name="M:FastReport.ShapeObject.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ShapeObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.ShapeObject.Shape">
            <summary>
            Gets or sets a shape kind.
            </summary>
        </member>
        <member name="P:FastReport.ShapeObject.Curve">
            <summary>
            Gets or sets a shape curvature if <see cref="T:FastReport.ShapeKind"/> is <b>RoundRectangle</b>.
            </summary>
            <remarks>
            0 value means automatic curvature.
            </remarks>
        </member>
        <member name="M:FastReport.ShapeObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ShapeObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ShapeObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ShapeObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ShapeObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.RichObject">
            <summary>
            Represents a RichText object that can display formatted text.
            </summary>
            <remarks>
            Use the <see cref="P:FastReport.RichObject.Text"/> property to set the object's text. The text may include
            the RTF formatting tags.
            </remarks>
        </member>
        <member name="M:FastReport.RichObject.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.GetSmartTag">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.RichObject.Text">
            <summary>
            Gets or sets the object's text.
            </summary>
            <remarks>
            This property returns the formatted text with rtf tags.
            </remarks>
        </member>
        <member name="P:FastReport.RichObject.DataColumn">
            <summary>
            Gets or sets a name of the data column bound to this control.
            </summary>
            <remarks>
            Value must contain the datasource name, for example: "Datasource.Column".
            </remarks>
        </member>
        <member name="P:FastReport.RichObject.ActualTextStart">
            <summary>
            Gets the actual text start.
            </summary>
            <remarks>
            This property is for internal use only; you should not use it in your code.
            </remarks>
        </member>
        <member name="P:FastReport.RichObject.ActualTextLength">
            <summary>
            Gets the actual text length.
            </summary>
            <remarks>
            This property is for internal use only; you should not use it in your code.
            </remarks>
        </member>
        <member name="P:FastReport.RichObject.OldBreakStyle">
            <summary>
            Gets or sets the break style.
            </summary>
            <remarks> 
            Set this property to true if you want editable rich text when you edit the prepared report page.
            </remarks>
        </member>
        <member name="P:FastReport.RichObject.ConvertRichText">
            <summary>
            Experimental feature for translation of RichText into report objects
            </summary>
        </member>
        <member name="M:FastReport.RichObject.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.Break(FastReport.BreakableComponent)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.RichObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ReportSummaryBand">
            <summary>
            Represents a report summary band.
            </summary>
        </member>
        <member name="P:FastReport.ReportSummaryBand.RepeatOnEveryPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.ReportSummaryBand.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.MarkerStyle">
            <summary>
            The style of the report object markers.
            </summary>
        </member>
        <member name="F:FastReport.MarkerStyle.Rectangle">
            <summary>
            Rectangle marker.
            </summary>
        </member>
        <member name="F:FastReport.MarkerStyle.Corners">
            <summary>
            Small markers at the object's corners.
            </summary>
        </member>
        <member name="T:FastReport.PolyLineObject">
            <summary>
            Represents a poly line object.
            </summary>
            <remarks>
            Use the <b>Border.Width</b>, <b>Border.Style</b> and <b>Border.Color</b> properties to set
            the line width, style and color.
            </remarks>
        </member>
        <member name="P:FastReport.PolyLineObject.Height">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.PolyLineObject.Width">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.AddPointToEnd(System.Single,System.Single)">
            <summary>
            Add point to end of polyline and recalculate bounds after add.
            Can be first point.
            Deprecated, use insert point
            </summary>
            <param name="localX">local x - relative to left-top point</param>
            <param name="localY">local y - relative to left-top point</param>
        </member>
        <member name="M:FastReport.PolyLineObject.AddPointToStart(System.Single,System.Single)">
            <summary>
            Add point to start of polyline and recalculate bounds after add
            Can be first point
            Deprecated, use insert point
            </summary>
            <param name="localX">local x - relative to left-top point</param>
            <param name="localY">local y - relative to left-top point</param>
        </member>
        <member name="M:FastReport.PolyLineObject.CheckNegativeSize(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.DrawSelection(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.DrawStar(System.Int32)">
            <summary>
            Replace points with star
            </summary>
            <param name="spikes">Minimum value is 3</param>
        </member>
        <member name="M:FastReport.PolyLineObject.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.HandleKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.HandleMouseDown(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.HandleMouseMove(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.InsertPointByIndex(System.Int32,System.Single,System.Single)">
            <summary>
            Insert point to desired place of polyline
            Recalculate bounds after insert
            </summary>
            <param name="index">Index of place from zero to count</param>
            <param name="localX">local x - relative to left-top point</param>
            <param name="localY">local y - relative to left-top point</param>
        </member>
        <member name="M:FastReport.PolyLineObject.InsertPointByLocation(System.Single,System.Single,System.Single)">
            <summary>
            Insert point to near line
            Recalculate bounds after insert
            </summary>
            <param name="localX">local x - relative to left-top point</param>
            <param name="localY">local y - relative to left-top point</param>
            <param name="maxDistance">depricated</param>
            <returns>Index of inserted point</returns>
        </member>
        <member name="M:FastReport.PolyLineObject.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.OnAfterInsert(FastReport.InsertFrom)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.PointInObject(System.Drawing.PointF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.RemovePointAt(System.Int32)">
            <summary>
            Delete point from polyline by index
            Recalculate bounds after remove
            </summary>
            <param name="index">Index of point in polyline</param>
        </member>
        <member name="M:FastReport.PolyLineObject.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.DeletePointByIndex(System.Int32)">
            <summary>
            Delete point from polyline by index.
            Recalculate bounds.
            </summary>
            <param name="index">Index of point in polyline</param>
        </member>
        <member name="M:FastReport.PolyLineObject.DrawSelectionPoint(FastReport.Utils.FRPaintEventArgs,System.Drawing.Pen,System.Drawing.Brush,System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.GetBestPointPosition(System.Single,System.Single)">
            <summary>
            Returns best new point position based on mouse
            </summary>
            <returns></returns>
        </member>
        <member name="F:FastReport.PolyLineObject.polygonSelectionMode">
            <summary>
            do not set this value, internal use only
            </summary>
        </member>
        <member name="P:FastReport.PolyLineObject.Points">
            <summary>
            Return points collection.
            You can modify the collection for change this object.
            </summary>
        </member>
        <member name="P:FastReport.PolyLineObject.CenterX">
            <summary>
            Returns origin of coordinates relative to the top left corner
            </summary>
        </member>
        <member name="P:FastReport.PolyLineObject.CenterY">
            <summary>
            Returns origin of coordinates relative to the top left corner
            </summary>
        </member>
        <member name="P:FastReport.PolyLineObject.PointsArray">
            <summary>
            Return points array of line
            deprecated
            </summary>
        </member>
        <member name="P:FastReport.PolyLineObject.PointTypesArray">
            <summary>
            Return point types array. 0 - Start of line, 1 - Keep on line
            deprecated
            </summary>
        </member>
        <member name="M:FastReport.PolyLineObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.LineObject"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.PolyLineObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.GetPath(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculate GraphicsPath for draw to page
            </summary>
            <param name="pen">Pen for lines</param>
            <param name="left">Left boundary</param>
            <param name="top">Top boundary</param>
            <param name="right">Right boundary</param>
            <param name="bottom">Bottom boundary</param>
            <param name="scaleX">scale by width</param>
            <param name="scaleY">scale by height</param>
            <returns>Always returns a non-empty path</returns>
        </member>
        <member name="M:FastReport.PolyLineObject.RecalculateBounds">
            <summary>
            Recalculate position and size of element
            </summary>
        </member>
        <member name="M:FastReport.PolyLineObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolyLineObject.addPoint(System.Single,System.Single,System.Byte)">
            <summary>
            Add point to end of polyline, need to recalculate bounds after add
            First point must have zero coordinate and zero type.
            Recalculate bounds.
            Method is slow do not use this.
            </summary>
            <param name="localX">local x - relative to left-top point</param>
            <param name="localY">local y - relative to left-top point</param>
            <param name="pointType">depreceted</param>
        </member>
        <member name="M:FastReport.PolyLineObject.deletePoint(System.Int32)">
            <summary>
            Delete point from polyline by index.
            Recalculate bounds.
            Method is slow do not use this.
            </summary>
            <param name="index">Index of point in polyline</param>
        </member>
        <member name="M:FastReport.PolyLineObject.drawPoly(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draw polyline path to graphics
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FastReport.PolyLineObject.insertPoint(System.Int32,System.Single,System.Single,System.Byte)">
            <summary>
            Insert point to desired place of polyline
            recalculateBounds();
            Method is slow do not use this
            </summary>
            <param name="index">Index of place from zero to count</param>
            <param name="localX">local x - relative to left-top point</param>
            <param name="localY">local y - relative to left-top point</param>
            <param name="pointType">deprecated</param>
        </member>
        <member name="T:FastReport.PolyLineObject.PolyPoint">
            <summary>
            Represent a point for polygon object
            </summary>
        </member>
        <member name="T:FastReport.PolygonObject">
            <summary>
            Represents a polygon object.
            </summary>
            <remarks>
            Use the <b>Border.Width</b>, <b>Border.Style</b> and <b>Border.Color</b> properties to set 
            the line width, style and color.
            
            </remarks>
        </member>
        <member name="M:FastReport.PolygonObject.PointInObject(System.Drawing.PointF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolygonObject.getPolygonPath(System.Drawing.Pen,System.Single,System.Single)">
            <summary>
            Calculate GraphicsPath for draw to page
            </summary>
            <param name="pen">Pen for lines</param>
            <param name="scaleX">scale by width</param>
            <param name="scaleY">scale by height</param>
            <returns>Always returns a non-empty path</returns>
        </member>
        <member name="M:FastReport.PolygonObject.drawPoly(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draw polyline path to graphics
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:FastReport.PolygonObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PolygonObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.LineObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.PictureObject">
            <summary>
            Represents a Picture object that can display pictures.
            </summary>
            <remarks>
            The Picture object can display the following kind of pictures:
            <list type="bullet">
              <item>
                <description>picture that is embedded in the report file. Use the <see cref="P:FastReport.PictureObject.Image"/>
                property to do this;</description>
              </item>
              <item>
                <description>picture that is stored in the database BLOb field. Use the <see cref="!:DataColumn"/>
                property to specify the name of data column you want to show;</description>
              </item>
              <item>
                <description>picture that is stored in the local disk file. Use the <see cref="!:ImageLocation"/>
                property to specify the name of the file;</description>
              </item>
              <item>
                <description>picture that is stored in the Web. Use the <see cref="!:ImageLocation"/>
                property to specify the picture's URL.</description>
              </item>
            </list>
            <para/>Use the <see cref="!:SizeMode"/> property to specify a size mode. The <see cref="!:MaxWidth"/>
            and <see cref="!:MaxHeight"/> properties can be used to restrict the image size if <b>SizeMode</b>
            is set to <b>AutoSize</b>.
            <para/>The <see cref="P:FastReport.PictureObject.TransparentColor"/> property can be used to display an image with
            transparent background. Use the <see cref="P:FastReport.PictureObject.Transparency"/> property if you want to display
            semi-transparent image.
            </remarks>
        </member>
        <member name="M:FastReport.PictureObject.HandleDragDrop(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.HandleDragOver(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.InvokeEditor">
            <summary>
            Invokes the object's editor.
            </summary>
            <returns><b>true</b> if object was edited succesfully.</returns>
        </member>
        <member name="P:FastReport.PictureObject.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <remarks>
            By default, image that you assign to this property is never disposed - you should
            take care about it. If you want to dispose the image when this <b>PictureObject</b> is disposed,
            set the <see cref="P:FastReport.PictureObject.ShouldDisposeImage"/> property to <b>true</b> right after you assign an image:
            <code>
            myPictureObject.Image = new Bitmap("file.bmp");
            myPictureObject.ShouldDisposeImage = true;
            </code>
            </remarks>
        </member>
        <member name="P:FastReport.PictureObject.Grayscale">
            <summary>
            Gets or sets a value indicating that the image should be displayed in grayscale mode.
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.GrayscaleHash">
            <summary>
            Gets or sets a hash of grayscale svg image
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.TransparentColor">
            <summary>
            Gets or sets the color of the image that will be treated as transparent.
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.Transparency">
            <summary>
            Gets or sets the transparency of the PictureObject.
            </summary>
            <remarks>
            Valid range of values is 0..1. Default value is 0.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObject.Tile">
            <summary>
            Gets or sets a value indicating that the image should be tiled.
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.ShouldDisposeImage">
            <summary>
            Gets or sets a value indicating that the image stored in the <see cref="P:FastReport.PictureObject.Image"/> 
            property should be disposed when this object is disposed.
            </summary>
            <remarks>
            By default, image assigned to the <see cref="P:FastReport.PictureObject.Image"/> property is never disposed - you should
            take care about it. If you want to dispose the image when this <b>PictureObject</b> is disposed,
            set this property to <b>true</b> right after you assign an image to the <see cref="P:FastReport.PictureObject.Image"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObject.TransparentImage">
            <summary>
            Gets or sets a bitmap transparent image
            </summary>
        </member>
        <member name="P:FastReport.PictureObject.ImageWidth">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.PictureObject.ImageHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.DrawImage(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws the image.
            </summary>
            <param name="e">Paint event args.</param>
        </member>
        <member name="M:FastReport.PictureObject.SetImageData(System.Byte[])">
            <summary>
            Sets image data to FImageData
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:FastReport.PictureObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.LoadImage">
            <summary>
            Loads image
            </summary>
        </member>
        <member name="M:FastReport.PictureObject.DisposeImage">
            <summary>
            Disposes image
            </summary>
        </member>
        <member name="M:FastReport.PictureObject.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObject.ForceLoadImage">
            <summary>
            Forces loading the image from a data column.
            </summary>
            <remarks>
            Call this method in the <b>AfterData</b> event handler to force loading an image 
            into the <see cref="P:FastReport.PictureObject.Image"/> property. Normally, the image is stored internally as byte[] array 
            and never loaded into the <b>Image</b> property, to save the time. The side effect is that you 
            can't analyze the image properties such as width and height. If you need this, call this method
            before you access the <b>Image</b> property. Note that this will significantly slow down the report.
            </remarks>
        </member>
        <member name="M:FastReport.PictureObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PictureObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.LineObject">
            <summary>
            Represents a line object.
            </summary>
            <remarks>
            Use the <b>Border.Width</b>, <b>Border.Style</b> and <b>Border.Color</b> properties to set 
            the line width, style and color. Set the <see cref="P:FastReport.LineObject.Diagonal"/> property to <b>true</b>
            if you want to show a diagonal line.
            </remarks>
        </member>
        <member name="P:FastReport.LineObject.Fill">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.LineObject.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.PointInObject(System.Drawing.PointF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.CheckNegativeSize(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.HandleMouseMove(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.HandleMouseUp(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.LineObject.Diagonal">
            <summary>
            Gets or sets a value indicating that the line is diagonal.
            </summary>
            <remarks>
            If this property is <b>false</b>, the line can be only horizontal or vertical.
            </remarks>
        </member>
        <member name="P:FastReport.LineObject.StartCap">
            <summary>
            Gets or sets the start cap settings.
            </summary>
        </member>
        <member name="P:FastReport.LineObject.EndCap">
            <summary>
            Gets or sets the end cap settings.
            </summary>
        </member>
        <member name="M:FastReport.LineObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LineObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.LineObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.HtmlObject">
            <summary>
            Represents the Text object that may display one or several text lines.
            </summary>
            <remarks>
            Specify the object's text in the <see cref="P:FastReport.TextObjectBase.Text">Text</see> property. 
            Text may contain expressions and data items, for example: "Today is [Date]". When report 
            is running, all expressions are calculated and replaced with actual values, so the text 
            would be "Today is 01.01.2008".
            <para/>The symbols used to find expressions in a text are set in the 
            <see cref="P:FastReport.TextObjectBase.Brackets">Brackets</see> property. You also may disable expressions 
            using the <see cref="P:FastReport.TextObjectBase.AllowExpressions">AllowExpressions</see> property.
            <para/>To format an expression value, use the <see cref="N:FastReport.Format"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.HtmlObject.Left">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.HtmlObject.Top">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.HtmlObject.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.HtmlObject.Height">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.HandleDragOver(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.HandleDragDrop(FastReport.Utils.FRMouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.HandleKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.SelectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.GetSmartTag">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.HtmlObject.RightToLeft">
            <summary>
            Gets or sets a value that indicates whether the component should draw right-to-left for RTL languages.
            </summary>
        </member>
        <member name="M:FastReport.HtmlObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.DrawText(FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draws a text.
            </summary>
            <param name="e">Paint event data.</param>
        </member>
        <member name="M:FastReport.HtmlObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.ApplyStyle(FastReport.Style)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.SaveStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.RestoreStyle">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.CalcWidth">
            <summary>
            Calculates the object's width.
            </summary>
            <returns>The width, in pixels.</returns>
        </member>
        <member name="M:FastReport.HtmlObject.CalcHeight">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.GetData">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.Break(FastReport.BreakableComponent)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HtmlObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.HtmlObject"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.HeaderFooterBandBase">
            <summary>
            Base class for headers and footers which support the "Keep With Data" and "Repeat on Every Page" features.
            </summary>
        </member>
        <member name="M:FastReport.HeaderFooterBandBase.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.HeaderFooterBandBase.KeepWithData">
            <summary>
            Gets or sets a value indicating that the band should be printed together with data band.
            </summary>
        </member>
        <member name="P:FastReport.HeaderFooterBandBase.RepeatOnEveryPage">
            <summary>
            Gets or sets a value that determines whether to repeat this band on every page.
            </summary>
            <remarks>
            When band is repeated, its <see cref="P:FastReport.BandBase.Repeated"/> property is set to <b>true</b>. You can use
            it to show any additional information on the band. To do this,
            use the <see cref="P:FastReport.ReportComponentBase.PrintOn"/> property which
            can be set to "Rpeeated". In that case the object will be printed
            only on the repeated band.
            </remarks>
        </member>
        <member name="M:FastReport.HeaderFooterBandBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HeaderFooterBandBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.GroupHeaderBand">
            <summary>
            Represents a group header band.
            </summary>
            <remarks>
            A simple group consists of one <b>GroupHeaderBand</b> and the <b>DataBand</b> that is set 
            to the <see cref="P:FastReport.GroupHeaderBand.Data"/> property. To create the nested groups, use the <see cref="P:FastReport.GroupHeaderBand.NestedGroup"/> property.
            <note type="caution">
            Only the last nested group can have data band.
            </note>
            <para/>Use the <see cref="P:FastReport.GroupHeaderBand.Condition"/> property to set the group condition. The <see cref="P:FastReport.GroupHeaderBand.SortOrder"/>
            property can be used to set the sort order for group's data rows. You can also use the <b>Sort</b>
            property of the group's <b>DataBand</b> to specify additional sort.
            </remarks>
            <example>This example shows how to create nested groups.
            <code>
            ReportPage page = report.Pages[0] as ReportPage;
            
            // create the main group
            GroupHeaderBand mainGroup = new GroupHeaderBand();
            mainGroup.Height = Units.Millimeters * 10;
            mainGroup.Name = "MainGroup";
            mainGroup.Condition = "[Orders.CustomerName]";
            // add a group to the page
            page.Bands.Add(mainGroup);
            
            // create the nested group
            GroupHeaderBand nestedGroup = new GroupHeaderBand();
            nestedGroup.Height = Units.Millimeters * 10;
            nestedGroup.Name = "NestedGroup";
            nestedGroup.Condition = "[Orders.OrderDate]";
            // add it to the main group
            mainGroup.NestedGroup = nestedGroup;
            
            // create a data band
            DataBand dataBand = new DataBand();
            dataBand.Height = Units.Millimeters * 10;
            dataBand.Name = "GroupData";
            dataBand.DataSource = report.GetDataSource("Orders");
            // connect the databand to the nested group
            nestedGroup.Data = dataBand;
            </code>
            </example>
        </member>
        <member name="M:FastReport.GroupHeaderBand.Delete">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.GroupHeaderBand.NestedGroup">
            <summary>
            Gets or sets a nested group.
            </summary>
            <remarks>
            Use this property to create nested groups.
            <note type="caution">
            Only the last nested group can have data band.
            </note>
            </remarks>
            <example>
            This example demonstrates how to create a group with nested group.
            <code>
            ReportPage page;
            GroupHeaderBand group = new GroupHeaderBand();
            group.NestedGroup = new GroupHeaderBand();
            group.NestedGroup.Data = new DataBand();
            page.Bands.Add(group);
            </code>
            </example>
        </member>
        <member name="P:FastReport.GroupHeaderBand.Data">
            <summary>
            Gets or sets the group data band.
            </summary>
            <remarks>
            Use this property to add a data band to a group. Note: only the last nested group can have Data band.
            </remarks>
            <example>
            This example demonstrates how to add a data band to a group.
            <code>
            ReportPage page;
            GroupHeaderBand group = new GroupHeaderBand();
            group.Data = new DataBand();
            page.Bands.Add(group);
            </code>
            </example>
        </member>
        <member name="P:FastReport.GroupHeaderBand.GroupFooter">
            <summary>
            Gets or sets a group footer.
            </summary>
        </member>
        <member name="P:FastReport.GroupHeaderBand.Header">
            <summary>
            Gets or sets a header band.
            </summary>
        </member>
        <member name="P:FastReport.GroupHeaderBand.Footer">
            <summary>
            Gets or sets a footer band.
            </summary>
            <remarks>
            To access a group footer band, use the <see cref="P:FastReport.GroupHeaderBand.GroupFooter"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.GroupHeaderBand.Condition">
            <summary>
            Gets or sets the group condition.
            </summary>
            <remarks>
            This property can contain any valid expression. When running a report, this expression is calculated 
            for each data row. When the value of this condition is changed, FastReport starts a new group.
            </remarks>
        </member>
        <member name="P:FastReport.GroupHeaderBand.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
            <remarks>
            FastReport can sort data rows automatically using the <see cref="P:FastReport.GroupHeaderBand.Condition"/> value.
            </remarks>
        </member>
        <member name="P:FastReport.GroupHeaderBand.KeepTogether">
            <summary>
            Gets or sets a value indicating that the group should be printed together on one page.
            </summary>
        </member>
        <member name="P:FastReport.GroupHeaderBand.ResetPageNumber">
            <summary>
            Gets or sets a value that determines whether to reset the page numbers when this group starts print.
            </summary>
            <remarks>
            Typically you should set the <see cref="P:FastReport.BandBase.StartNewPage"/> property to <b>true</b> as well.
            </remarks>
        </member>
        <member name="M:FastReport.GroupHeaderBand.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GroupHeaderBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.GroupHeaderBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.DataBand">
            <summary>
            This class represents the Data band.
            </summary>
            <remarks>
            Use the <see cref="P:FastReport.DataBand.DataSource"/> property to connect the band to a datasource. Set the
            <see cref="P:FastReport.DataBand.Filter"/> property if you want to filter data rows. The <see cref="P:FastReport.DataBand.Sort"/>
            property can be used to sort data rows.
            </remarks>
        </member>
        <member name="M:FastReport.DataBand.Delete">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.GetSmartTag">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.InvokeEditor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.InvokeColumnsEditor">
            <summary>
            Invokes column editor
            </summary>
        </member>
        <member name="P:FastReport.DataBand.Header">
            <summary>
            Gets or sets a header band.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.Bands">
            <summary>
            Gets a collection of detail bands.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.Footer">
            <summary>
            Gets or sets a footer band.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.DataSource">
            <summary>
            Gets or sets a data source.
            Please note: data source have to be enabled.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.RowCount">
            <summary>
            Gets or sets a number of rows in the virtual data source.
            </summary>
            <remarks>
            Use this property if your data band is not connected to any data source. In this case
            the virtual data source with the specified number of rows will be used.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.MaxRows">
            <summary>
            Limits the maximum number of rows in a datasource. 0 means no limit.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.Relation">
            <summary>
            Gets or sets a relation used to establish a master-detail relationship between
            this band and its parent.
            </summary>
            <remarks>
            Use this property if there are several relations exist between two data sources.
            If there is only one relation (in most cases it is), you can leave this property empty.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.Sort">
            <summary>
            Gets the collection of sort conditions.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.Filter">
            <summary>
            Gets the row filter expression.
            </summary>
            <remarks>
            This property can contain any valid boolean expression. If the expression returns <b>false</b>,
            the corresponding data row will not be printed.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.Columns">
            <summary>
            Gets the band columns.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.PrintIfDetailEmpty">
            <summary>
            Gets or sets a value that determines whether to print a band if all its detail rows are empty.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.PrintIfDatasourceEmpty">
            <summary>
            Gets or sets a value that determines whether to print a band if its datasource is empty.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.KeepTogether">
            <summary>
            Gets or sets a value indicating that all band rows should be printed together on one page.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.KeepDetail">
            <summary>
            Gets or sets a value indicating that the band should be printed together with all its detail rows.
            </summary>
        </member>
        <member name="P:FastReport.DataBand.IdColumn">
            <summary>
            Gets or sets the key column that identifies the data row.
            </summary>
            <remarks>
            <para>This property is used when printing a hierarchic list.</para>
            <para>To print the hierarchic list, you have to setup three properties: <b>IdColumn</b>,
            <b>ParentIdColumn</b> and <b>Indent</b>. First two properties are used to identify the data
            row and its parent; the <b>Indent</b> property specifies the indent that will be used to shift
            the databand according to its hierarchy level.</para>
            <para/>When printing hierarchy, FastReport shifts the band to the right
            (by value specified in the <see cref="P:FastReport.DataBand.Indent"/> property), and also decreases the
            width of the band by the same value. You may use the <b>Anchor</b> property of the
            objects on a band to indicate whether the object should move with the band, or stay
            on its original position, or shrink.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.ParentIdColumn">
            <summary>
            Gets or sets the column that identifies the parent data row.
            </summary>
            <remarks>
            This property is used when printing a hierarchic list. See description of the
            <see cref="P:FastReport.DataBand.IdColumn"/> property for more details.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.Indent">
            <summary>
            Gets or sets the indent that will be used to shift the databand according to its hierarchy level.
            </summary>
            <remarks>
            This property is used when printing a hierarchic list. See description of the
            <see cref="P:FastReport.DataBand.IdColumn"/> property for more details.
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.CollectChildRows">
            <summary>
            Gets or sets a value indicating that the databand should collect child data rows.
            </summary>
            <remarks>
            This property determines how the master-detail report is printed. Default behavior is:
            <para/>MasterData row1
            <para/>-- DetailData row1
            <para/>-- DetailData row2
            <para/>-- DetailData row3
            <para/>MasterData row2
            <para/>-- DetailData row1
            <para/>-- DetailData row2
            <para/>When you set this property to <b>true</b>, the master databand will collect all child data rows
            under a single master data row:
            <para/>MasterData row1
            <para/>-- DetailData row1
            <para/>-- DetailData row2
            <para/>-- DetailData row3
            <para/>-- DetailData row4
            <para/>-- DetailData row5
            </remarks>
        </member>
        <member name="P:FastReport.DataBand.ResetPageNumber">
            <summary>
            Gets or sets a value that determines whether to reset the page numbers when this band starts print.
            </summary>
            <remarks>
            Typically you should set the <see cref="P:FastReport.BandBase.StartNewPage"/> property to <b>true</b> as well.
            </remarks>
        </member>
        <member name="M:FastReport.DataBand.DeserializeSubItems(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.GetChildObjects(FastReport.ObjectCollection)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.CanContain(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.AddChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.RemoveChild(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.GetChildOrder(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.SetChildOrder(FastReport.Base,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.InitDataSource">
            <summary>
            Initializes the data source connected to this band.
            </summary>
        </member>
        <member name="M:FastReport.DataBand.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.DataBand"/> class.
            </summary>
        </member>
        <member name="T:FastReport.CrossBandShape">
            <summary>
            Specifies the shape of the <b>CrossBandObject</b>.
            </summary>
        </member>
        <member name="F:FastReport.CrossBandShape.Line">
            <summary>
            Specifies the vertical line shape.
            </summary>
        </member>
        <member name="F:FastReport.CrossBandShape.Rectangle">
            <summary>
            Specifies the rectangle shape.
            </summary>
        </member>
        <member name="T:FastReport.CrossBandObject">
            <summary>
            Represents an object that can be printed across several bands.
            </summary>
        </member>
        <member name="P:FastReport.CrossBandObject.Shape">
            <summary>
            Gets or sets the object's shape.
            </summary>
        </member>
        <member name="M:FastReport.CrossBandObject.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossBandObject.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossBandObject.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossBandObject.PointInObject(System.Drawing.PointF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossBandObject.CheckParent(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossBandObject.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossBandObject.OnBeforeInsert(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CrossBandObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CrossBandObject"/> class with the default settings.
            </summary>
        </member>
        <member name="T:FastReport.EmailSettings">
            <summary>
            Contains the email settings such as recipient(s) address, name, subject, message body.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:FastReport.EmailSettings.Recipients">
            <summary>
            Gets or sets the recipient(s) email addresses.
            </summary>
            <remarks>
            This property contains one or several email addresses in the following form: "john@url.com".
            </remarks>
        </member>
        <member name="P:FastReport.EmailSettings.Subject">
            <summary>
            Gets or sets the message subject.
            </summary>
        </member>
        <member name="P:FastReport.EmailSettings.Message">
            <summary>
            Gets or sets the message body.
            </summary>
        </member>
        <member name="M:FastReport.EmailSettings.Assign(FastReport.EmailSettings)">
            <summary>
            Copies email settings from another source.
            </summary>
            <param name="source">Source to copy settings from.</param>
        </member>
        <member name="M:FastReport.EmailSettings.Clear">
            <summary>
            Resets all settings to its default values.
            </summary>
        </member>
        <member name="M:FastReport.EmailSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.EmailSettings"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Messaging.Authentication.Sasl.DigestMd5Mechanism">
            <summary>
            The DIGEST-MD5 SASL authentication mechanism.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.Authentication.Sasl.DigestMd5Mechanism.MECHANISM_NAME">
            <summary>
            The mechanism name.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Authentication.Sasl.DigestMd5Mechanism.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Authentication.Sasl.DigestMd5Mechanism"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The user's password.</param>
        </member>
        <member name="M:FastReport.Messaging.Authentication.Sasl.DigestMd5Mechanism.ComputeResponse(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Messaging.Authentication.Sasl.PlainMechanism">
            <summary>
            The PLAIN SASL authentication mechanism.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.Authentication.Sasl.PlainMechanism.MECHANISM_NAME">
            <summary>
            The mechanism name.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Authentication.Sasl.PlainMechanism.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Authentication.Sasl.PlainMechanism"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The user's password.</param>
        </member>
        <member name="M:FastReport.Messaging.Authentication.Sasl.PlainMechanism.ComputeResponse(System.Byte[])">
            <summary>
            Computes the client response for server challenge.
            </summary>
            <param name="challenge">The challenge from server. Usually empty for PLAIN mechanism.</param>
            <returns>The response from client.</returns>
        </member>
        <member name="T:FastReport.Messaging.Authentication.Sasl.SaslMechanism">
            <summary>
            The base abstarct class for all SASL mechanisms.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Authentication.Sasl.SaslMechanism.Name">
            <summary>
            Gets or sets the name of mechanism.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Authentication.Sasl.SaslMechanism.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Authentication.Sasl.SaslMechanism.Password">
            <summary>
            Gets or sets the user's password.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Authentication.Sasl.SaslMechanism.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Authentication.Sasl.SaslMechanism"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Authentication.Sasl.SaslMechanism.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Authentication.Sasl.SaslMechanism"/> class with specified parameters.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The user's password.</param>
        </member>
        <member name="M:FastReport.Messaging.Authentication.Sasl.SaslMechanism.ComputeResponse(System.Byte[])">
            <summary>
            Computes client response for server challenge.
            </summary>
            <param name="challenge">The server challenge.</param>
            <returns>The client response.</returns>
        </member>
        <member name="M:FastReport.Messaging.Authentication.Sasl.SaslMechanism.GetResponse(System.String)">
            <summary>
            Gets the base64-encoded client response fo the server challenge.
            </summary>
            <param name="challenge">The base64-string containing server challenge.</param>
            <returns>The base64-string containing client response.</returns>
        </member>
        <member name="M:FastReport.Messaging.Authentication.Sasl.SaslMechanism.GetResponse(System.Byte[])">
            <summary>
            Gets the client response for the server challenge.
            </summary>
            <param name="challenge">Byte array containing server challenge.</param>
            <returns>Byte array containing client response.</returns>
        </member>
        <member name="T:FastReport.Messaging.MessengerBase">
            <summary>
            The base class for all messengers.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.MessengerBase.Filename">
            <summary>
            Gets the filename.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.MessengerBase.ProxySettings">
            <summary>
            Gets or sets the proxy settings.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.MessengerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.MessengerBase"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.MessengerBase.Authorize">
            <summary>
            Authorizes the user.
            </summary>
            <returns>True if user has been successfully authorized.</returns>
        </member>
        <member name="M:FastReport.Messaging.MessengerBase.PrepareToSave(FastReport.Report,FastReport.Export.ExportBase)">
            <summary>
            Prepares the report before it will be send.
            </summary>
            <param name="report">The report template.</param>
            <param name="export">The export filter.</param>
            <returns>Memory stream that contains prepared report.</returns>
        </member>
        <member name="M:FastReport.Messaging.MessengerBase.SendReport(FastReport.Report,FastReport.Export.ExportBase)">
            <summary>
            Sends the report.
            </summary>
            <param name="report">The report template that should be sent.</param>
            <param name="export">The export filter that should export template before.</param>
            <returns>True if report has been successfully sent.</returns>
        </member>
        <member name="T:FastReport.Messaging.MessengerForm">
            <summary>
            Represents form of messenger.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.MessengerForm.Report">
            <summary>
            Gets or sets the report template.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.MessengerForm.Exports">
            <summary>
            Gets or sets the list of exports.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.MessengerForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.#ctor(FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.MessengerForm"/> class.
            </summary>
            <param name="report">The report template.</param>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.InitExports">
            <summary>
            Initializes the list of exports.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.GetProxySettings">
            <summary>
            Gets the proxy settings.
            </summary>
            <returns>The proxy settings.</returns>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.Init">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.IsNumeric(System.String)">
            <summary>
            Checks is the string numeric.
            </summary>
            <param name="str">The checking string.</param>
            <returns>True if string is numeric, otherwise false.</returns>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.Done">
            <summary>
            Finishes the form work.
            </summary>
            <returns>Returns true if work has been successfully finished, otherwise false.</returns>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.cbFileType_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            SelectedIndexChanged event handler for ComboBox File Type.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.buttonSettings_Click(System.Object,System.EventArgs)">
            <summary>
            Click event handler for Button Settings.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.MessengerForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            FormClosing event handler for CloudStorageClientForm.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.btnOk_Click(System.Object,System.EventArgs)">
            <summary>
            Click event handler for button OK.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Messaging.MessengerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.pgFile">
            <summary>
            Page File.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.pgProxy">
            <summary>
            Page Proxy.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.cbFileType">
            <summary>
            ComboBox File Type.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.labelFileType">
            <summary>
            Label File Type.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.buttonSettings">
            <summary>
            Buttons Settings.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.labelProxyColon">
            <summary>
            Label Colon.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.labelProxyPassword">
            <summary>
            Label Password.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.labelProxyUsername">
            <summary>
            Label Username.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.labelProxyServer">
            <summary>
            Label Server.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.tbProxyUsername">
            <summary>
            TextBox Username.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.tbProxyPort">
            <summary>
            TextBox Port.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.tbProxyServer">
            <summary>
            TextBox Server.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.tbProxyPassword">
            <summary>
            TextBox Password.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.MessengerForm.pageControl1">
            <summary>
            PageControl pageControl1.
            </summary>
        </member>
        <member name="T:FastReport.Messaging.ProxySettings">
            <summary>
            Represents proxy settings of the messenger.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.ProxySettings.Server">
            <summary>
            Gets or sets the proxy server.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.ProxySettings.Port">
            <summary>
            Gets or sets the port number of proxy server.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.ProxySettings.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.ProxySettings.Password">
            <summary>
            Gets or sets the user's password.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.ProxySettings.ProxyType">
            <summary>
            Gets or sets the type of proxy.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.ProxySettings.#ctor(System.String,System.Int32,System.String,System.String,FastReport.Messaging.ProxyType)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.ProxySettings"/> class.
            </summary>
            <param name="server">The proxy server.</param>
            <param name="port">The port number of server.</param>
            <param name="username">The username.</param>
            <param name="password">The user's password.</param>
            <param name="proxyType">The type of proxy.</param>
        </member>
        <member name="T:FastReport.Messaging.ProxyType">
            <summary>
            Represents the type of rpoxy.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.ProxyType.Http">
            <summary>
            The HTTP proxy type.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.ProxyType.Socks4">
            <summary>
            The SOCKS4 proxy type.
            </summary>
        </member>
        <member name="F:FastReport.Messaging.ProxyType.Socks5">
            <summary>
            The SOCKS5 proxy type.
            </summary>
        </member>
        <member name="T:FastReport.Messaging.Xmpp.Iq">
            <summary>
            Represents the IQ stanza.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.Iq.Type">
            <summary>
            Gets or sets the type of iq.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Iq.#ctor(System.String,System.String,System.String,System.String,System.String,System.Globalization.CultureInfo,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.Iq"/> class with specified parameters.
            </summary>
            <param name="nspace">The namespace of the iq.</param>
            <param name="type">The type of iq.</param>
            <param name="jidFrom">The JID of the sender.</param>
            <param name="jidTo">The JID of the recipient.</param>
            <param name="id">The ID of the iq.</param>
            <param name="language">The language of the iq.</param>
            <param name="data">The data of the iq.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Iq.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.Iq"/> class using specified XmlElement instance.
            </summary>
            <param name="data">The XmlElement instance using like a data.</param>
        </member>
        <member name="T:FastReport.Messaging.Xmpp.Message">
            <summary>
            Represents the XMPP message.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.Message.Type">
            <summary>
            Gets or sets the type of message.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Message.#ctor(System.String,System.String,System.String,System.String,System.String,System.Globalization.CultureInfo,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.Message"/> class with specified parameters.
            </summary>
            <param name="nspace">The namespace of the message.</param>
            <param name="type">The type of message.</param>
            <param name="jidFrom">The JID of the sender.</param>
            <param name="jidTo">The JID of the recipient.</param>
            <param name="id">The ID of the message.</param>
            <param name="language">The language of the message.</param>
            <param name="data">The data of the message.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Message.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.Message"/> class using specified XmlElement instance.
            </summary>
            <param name="data">The XmlElement instance using like a data.</param>
        </member>
        <member name="T:FastReport.Messaging.Xmpp.Presence">
            <summary>
            Represents the XMPP Presence.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Presence.#ctor(System.String,System.String,System.String,System.String,System.Globalization.CultureInfo,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.Presence"/> class with specified parameters.
            </summary>
            <param name="nspace">The namespace of the presence.</param>
            <param name="jidFrom">The JID of the sender.</param>
            <param name="jidTo">The JID of the recipient.</param>
            <param name="id">The ID of the presence.</param>
            <param name="language">The language of the presence.</param>
            <param name="data">The data of the presence.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Presence.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.Presence"/> class using specified XmlElement instance.
            </summary>
            <param name="data">The XmlElement instance using like a data.</param>
        </member>
        <member name="T:FastReport.Messaging.Xmpp.Stanza">
            <summary>
            Represents the base class for XML stanzas used in XMPP.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.Stanza.Data">
            <summary>
            Gets the data of the stanza.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.Stanza.JidFrom">
            <summary>
            Gets or sets the JID of the sender.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.Stanza.JidTo">
            <summary>
            Gets or sets the JID of the recipient.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.Stanza.Id">
            <summary>
            Gets or sets the ID of the stanza.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.Stanza.Language">
            <summary>
            Gets or sets the language of the stanza.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Stanza.#ctor(System.String,System.String,System.String,System.String,System.Globalization.CultureInfo,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.Stanza"/> class with specified parameters.
            </summary>
            <param name="nspace">The namespace of the stanza.</param>
            <param name="jidFrom">The JID of the sender.</param>
            <param name="jidTo">The JID of the recipient.</param>
            <param name="id">The ID of the stanza.</param>
            <param name="language">The language of the stanza.</param>
            <param name="data">The data of the stanza.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Stanza.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.Stanza"/> class using specified XmlElement instance.
            </summary>
            <param name="data">The XmlElement instance using like a data.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Stanza.ToString">
            <summary>
            Converts stanza to string.
            </summary>
            <returns>String containing stanza value.</returns>
        </member>
        <member name="T:FastReport.Messaging.Xmpp.StreamParser">
            <summary>
            The parser for XMPP XML-streams.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.StreamParser.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.StreamParser"/> class.
            </summary>
            <param name="stream">The stream for parsing.</param>
            <param name="leaveOpen">True to leave the stream opened after closing the StreamReader instance.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.StreamParser.ReadRootElement">
            <summary>
            Read the XML stream up to opening "stream:stream" tag.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.StreamParser.ReadNextElement(System.Collections.Generic.List{System.String})">
            <summary>
            Reads the next XML element from the stream.
            </summary>
            <param name="expected">The list of XML elements that are expected.</param>
            <returns>The XML element.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.StreamParser.Close">
            <summary>
            Closes the stream parser.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.StreamParser.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:FastReport.Messaging.Xmpp.StreamParser"/> class.
            </summary>
        </member>
        <member name="T:FastReport.Messaging.Xmpp.Xml">
            <summary>
            Represents a static class to simplify the work with XmlElement instance.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Xml.CreateElement(System.String,System.String)">
            <summary>
            Creates a new XmlElement instance.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="nspace">The namespace of the element.</param>
            <returns>A new instance of the <see cref="T:System.Xml.XmlElement"/> class.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Xml.AddChild(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            Adds the specified child to the end of child nodes of element.
            </summary>
            <param name="element">The element for add the child to.</param>
            <param name="child">The child node to add.</param>
            <returns>A XmlElement instance.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Xml.AddAttribute(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Adds the attribute to XmlElement with spefied name and value.
            </summary>
            <param name="element">The element for add the attribute to.</param>
            <param name="name">The name of attribute.</param>
            <param name="value">The value of attribute.</param>
            <returns>A XmlElement instance.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Xml.AddText(System.Xml.XmlElement,System.String)">
            <summary>
            Adds the specified text to the end of child nodes of element.
            </summary>
            <param name="element">The element for add the text to.</param>
            <param name="text">The text for add.</param>
            <returns>A XmlElement instance.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.Xml.ToXmlString(System.Xml.XmlElement,System.Boolean,System.Boolean)">
            <summary>
            Converts the XmlElement instance to a string.
            </summary>
            <param name="element">The element to convert to.</param>
            <param name="includeDeclaration">True if needed to include XML declaration.</param>
            <param name="leaveOpen">True if needed to leave the tag of an empty element open.</param>
            <returns>The XmlElement instance as string.</returns>
        </member>
        <member name="T:FastReport.Messaging.Xmpp.XmppMessenger">
            <summary>
            Represents the XMPP messenger.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.XmppMessenger.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.XmppMessenger.Password">
            <summary>
            Gets or sets the user's password.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.XmppMessenger.Hostname">
            <summary>
            Gets or sets the hostname of XMPP server.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.XmppMessenger.Port">
            <summary>
            Gets or sets the port number of the XMPP service of the server.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.XmppMessenger.SendToUsername">
            <summary>
            Gets or sets the username to send file to.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.XmppMessenger.JidFrom">
            <summary>
            Gets or sets the JID to send from.
            </summary>
        </member>
        <member name="P:FastReport.Messaging.Xmpp.XmppMessenger.JidTo">
            <summary>
            Gets or set the JID to send to.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.XmppMessenger"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.#ctor(System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.XmppMessenger"/> class with specified parameters.
            </summary>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
            <param name="hostname">Hostname.</param>
            <param name="port">Port.</param>
            <param name="sendToUsername">Username to send file to.</param>
            <param name="sendToResource">Send to user's resource.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.XmppMessenger"/> class with specified parameters.
            </summary>
            <param name="jidFrom">User's JID without resource.</param>
            <param name="password">User's password.</param>
            <param name="jidTo">JID to send to with resource.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.SendString(System.String)">
            <summary>
            Sends the specified string to the server.
            </summary>
            <param name="str">The string to send.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.InitiateStream(System.String)">
            <summary>
            Initiates the stream to the server.
            </summary>
            <param name="hostname">The hostname.</param>
            <returns>The features response of the server.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.ValidateServerCertificate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Validates the server certificate.
            </summary>
            <param name="sender">The sender object.</param>
            <param name="certificate">X509 certificate.</param>
            <param name="chain">The X509 chain.</param>
            <param name="sslPolicyErrors">The SSL policy errors.</param>
            <returns>True if successfull.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.StartTls(System.String)">
            <summary>
            Secures the stream by TLS.
            </summary>
            <param name="hostname">The hostname.</param>
            <returns>The features response of the server.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.SelectMechanism(System.Collections.Generic.List{System.String})">
            <summary>
            Selects the SASL authentication mechanism.
            </summary>
            <param name="mechanisms">List of mechanisms.</param>
            <returns>The string containing mechanism name.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.AuthenticateUsingPlainMechanism">
            <summary>
            Authenticates the user on the server using Plain mechanism.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.AuthenticateUsingDigestMd5Mechanism">
            <summary>
            Authenticates the user on the server using Digest-MD5 mechanism.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.Authenticate(System.Collections.Generic.List{System.String})">
            <summary>
            Authenticates the user on the server.
            </summary>
            <param name="mechanisms">The SASL mechanisms list.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.SetupConnection">
            <summary>
            Setups the connection with the server.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.BindResource">
            <summary>
            Binds resource and gets the full JID that will be associated with current session.
            </summary>
            <returns>The full session JID.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.OpenSession">
            <summary>
            Opens session between client and server.
            </summary>
            <returns>The id of the opened session.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.Connect">
            <summary>
            Connects to the server.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.SendMessage(System.String)">
            <summary>
            Sends the message.
            </summary>
            <param name="text">The text of the message.</param>
            <returns>True if message has been successfully sent.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.SendPresence(System.String)">
            <summary>
            Sends the presence.
            </summary>
            <param name="text">The text of the presence.</param>
            <returns>True if presence has been successfully sent.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.InitiateInBandBytestream">
            <summary>
            Initiates the In Band Bytestream for sending the file (XEP-0047).
            </summary>
            <returns>True if bytestream has been successfully initiated.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.SendChunk(System.Byte[],System.Int32)">
            <summary>
            Sends the chunk to the XMPP server.
            </summary>
            <param name="chunk">The data of the chunk.</param>
            <param name="number">The number of the chunk.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.SendFileUsingIbb(System.IO.MemoryStream)">
            <summary>
            Sends the file using In Band Bytestream.
            </summary>
            <param name="ms">The memory stream containing data of the file.</param>
            <returns>True if file has been successfully sent.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.SendFileUsingFastReportCloud(FastReport.Report,FastReport.Export.ExportBase)">
            <summary>
            Sends the file using FastReport Cloud as a proxy server.
            </summary>
            <param name="report">The report template.</param>
            <param name="export">The export filter to export report before sending.</param>
            <returns>True if file has been successfully sent.</returns>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.Disconnect">
            <summary>
            Disconnects from the server.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.Authorize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.SendReport(FastReport.Report,FastReport.Export.ExportBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.Close">
            <summary>
            Closes the connection.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessenger.Dispose">
            <summary>
            Releases all the resources used by the XMPP messenger.
            </summary>
        </member>
        <member name="T:FastReport.Messaging.Xmpp.XmppMessengerForm">
            <summary>
            Represents the form of the XMPP messenger.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessengerForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.XmppMessengerForm"/> class.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessengerForm.#ctor(System.String,System.String,System.String,FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Messaging.Xmpp.XmppMessengerForm"/> class with specified parameters.
            </summary>
            <param name="jidFrom">User's JID without resource.</param>
            <param name="password">User's password.</param>
            <param name="jidTo">Send to user's JID.</param>
            <param name="report">Report template.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessengerForm.Init">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessengerForm.Done">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessengerForm.Localize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessengerForm.btnOk_Click(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="F:FastReport.Messaging.Xmpp.XmppMessengerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessengerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastReport.Messaging.Xmpp.XmppMessengerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastReport.EnvironmentSettings">
            <summary>
            This class contains some global settings that used in the FastReport.Net.
            </summary>
            <remarks>
            This component is intended for use in the Visual Studio IDE to quickly configure
            FastReport global settings. To use it, drop the component on your Form and set up
            its properties and events.
            <para/>Here are some common actions that can be performed with this object:
            <list type="bullet">
              <item>
                <description>To define own open/save dialogs that will be used in the report designer,
                  use the <see cref="E:FastReport.EnvironmentSettings.CustomOpenDialog"/>, <see cref="E:FastReport.EnvironmentSettings.CustomSaveDialog"/>, 
                  <see cref="E:FastReport.EnvironmentSettings.CustomOpenReport"/>, <see cref="E:FastReport.EnvironmentSettings.CustomSaveReport"/> events;
                </description>
              </item>
              <item>
                <description>To pass connection string to the connection object defined in a report,
                  or to define own database login dialog, use the <see cref="E:FastReport.EnvironmentSettings.DatabaseLogin"/> event;
                </description>
              </item>
              <item>
                <description>To adjust the connection object after it is opened,
                  use the <see cref="E:FastReport.EnvironmentSettings.AfterDatabaseLogin"/> event;
                </description>
              </item>
              <item>
                <description>To define own progress window, use the <see cref="E:FastReport.EnvironmentSettings.StartProgress"/>,
                  <see cref="E:FastReport.EnvironmentSettings.FinishProgress"/> and <see cref="E:FastReport.EnvironmentSettings.Progress"/> events;
                </description>
              </item>
              <item>
                <description>To setup some common properties of the report, designer and preview,
                  use properties defined in this class;
                </description>
              </item>
              <item>
                <description>To set UI style of the designer and preview window,
                  use <see cref="P:FastReport.EnvironmentSettings.UIStyle"/> property.
                </description>
              </item>
            </list>
            <para/>This component actually uses the <see cref="T:FastReport.Utils.Config"/> static class which 
            contains <see cref="P:FastReport.Utils.Config.ReportSettings"/>, <see cref="P:FastReport.Utils.Config.DesignerSettings"/> and
            <see cref="P:FastReport.Utils.Config.PreviewSettings"/> properties. You can use <b>Config</b> class as well.
            </remarks>
        </member>
        <member name="P:FastReport.EnvironmentSettings.UIStyle">
            <summary>
            Gets or sets the UI style of the designer and preview windows.
            </summary>
            <remarks>
            This property affects both designer and preview windows.
            </remarks>
        </member>
        <member name="P:FastReport.EnvironmentSettings.UseRibbonUI">
            <summary>
            Indicates whether the Ribbon-style window should be used.
            </summary>
        </member>
        <member name="E:FastReport.EnvironmentSettings.StartProgress">
            <summary>
            Occurs before displaying a progress window.
            </summary>
        </member>
        <member name="E:FastReport.EnvironmentSettings.FinishProgress">
            <summary>
            Occurs after closing a progress window.
            </summary>
        </member>
        <member name="E:FastReport.EnvironmentSettings.Progress">
            <summary>
            Occurs when progress state is changed.
            </summary>
        </member>
        <member name="E:FastReport.EnvironmentSettings.DatabaseLogin">
            <summary>
        Occurs when database connection is about to open.
        </summary><remarks>
        Use this event to provide own connection string or user name/password to the connection
        object that is about to open.
        <para />To provide own connection string, set the <b>e.ConnectionString</b> property.
        In this case the new connection string will be used.
        <para />To provide own user name/password, set the <b>e.UserName</b> and <b>e.Password</b> properties.
        You may ask these values in own login dialog.
        </remarks><example>This example shows how to provide username/password using own login dialog.
        <code>
        private void report1_DatabaseLogin(object sender, DatabaseLoginEventArgs e)
        {
          using (MyLoginDialog dialog = new MyLoginDialog())
          {
            if (dialog.ShowDialog() == DialogResult.OK)
            {
              e.UserName = dialog.UserName;
              e.Password = dialog.Password;
            }
          }
        }
        </code>
        </example><example>This example shows how to provide own connection string.
        <code>
        private void report1_DatabaseLogin(object sender, DatabaseLoginEventArgs e)
        {
          e.ConnectionString = my_connection_string;
        }
        </code>
        </example>
        </member>
        <member name="E:FastReport.EnvironmentSettings.AfterDatabaseLogin">
            <summary>
            Occurs after the database connection is established.
            </summary>
        </member>
        <member name="E:FastReport.EnvironmentSettings.FilterBusinessObjectProperties">
            <summary>
            Occurs when discovering the business object's structure.
            </summary>
        </member>
        <member name="E:FastReport.EnvironmentSettings.GetBusinessObjectPropertyKind">
            <summary>
            Occurs when determining the kind of business object's property.
            </summary>
        </member>
        <member name="P:FastReport.EnvironmentSettings.ReportSettings">
            <summary>
            Gets or sets the report settings.
            </summary>
        </member>
        <member name="E:FastReport.EnvironmentSettings.DesignerLoaded">
            <summary>
            Occurs when the designer is loaded.
            </summary>
            <remarks>
            Use this event if you want to customize some aspects of the designer, for example,
            to hide some menu items.
            </remarks>
            <example>
            This example demonstrates how to hide the "File|Select Language..." menu item.
            <code>
            environmentSettings1.DesignerLoaded += new EventHandler(DesignerSettings_DesignerLoaded);
            
            void DesignerSettings_DesignerLoaded(object sender, EventArgs e)
            {
              (sender as DesignerControl).MainMenu.miFileSelectLanguage.Visible = false;
            }
            </code>
            </example>
        </member>
        <member name="E:FastReport.EnvironmentSettings.ReportLoaded">
            <summary>
            Occurs when report is loaded in the designer.
            </summary>
            <remarks>
            Use this event handler to register application data in a report.
            </remarks>
        </member>
        <member name="E:FastReport.EnvironmentSettings.ObjectInserted">
            <summary>
            Occurs when object is inserted in the designer.
            </summary>
            <remarks>
            Use this event handler to set some object's properties when it is inserted.
            </remarks>
        </member>
        <member name="E:FastReport.EnvironmentSettings.CustomOpenDialog">
            <summary>
        Occurs when the report designer is about to show the "Open" dialog.
        </summary><remarks>
        Use this event to attach own "Open" dialog to the designer. In the event handler, you must 
        display a dialog window to allow user to choose a report file.
        If dialog was executed successfully, you must return <b>e.Cancel</b> = <b>false</b> and set the 
        <b>e.FileName</b> to the selected file name.
        <para />You also need to use <see cref="E:FastReport.EnvironmentSettings.CustomOpenReport" /> event to provide code that
        will open the report.
        </remarks>
            <example>
        This example shows how to attach own "Open" and "Save" dialogs to the designer. 
        It uses the following events: <see cref="E:FastReport.EnvironmentSettings.CustomOpenDialog" />, <see cref="E:FastReport.EnvironmentSettings.CustomSaveDialog" />, 
        <see cref="E:FastReport.EnvironmentSettings.CustomOpenReport" />, <see cref="E:FastReport.EnvironmentSettings.CustomSaveReport" />.
        <code>
        private void CustomOpenDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (OpenFileDialog dialog = new OpenFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomSaveDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (SaveFileDialog dialog = new SaveFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";
            // get default file name from e.FileName
            dialog.FileName = e.FileName;

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomOpenReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // load the report from the given e.FileName
          e.Report.Load(e.FileName);
        }

        private void CustomSaveReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // save the report to the given e.FileName
          e.Report.Save(e.FileName);
        }
        </code>
      </example>
        </member>
        <member name="E:FastReport.EnvironmentSettings.CustomSaveDialog">
            <summary>
        Occurs when the report designer is about to show the "Save" dialog.
        </summary><remarks>
        Use this event to attach own "Save" dialog to the designer. In the event handler, you must 
        display a dialog window to allow user to choose a report file.
        If dialog was executed successfully, you must return <b>e.Cancel</b> = <b>false</b> and set the 
        <b>e.FileName</b> to the selected file name.
        <para />You also need to use <see cref="E:FastReport.EnvironmentSettings.CustomSaveReport" /> event to provide code that
        will save the report.
        </remarks>
            <example>
        This example shows how to attach own "Open" and "Save" dialogs to the designer. 
        It uses the following events: <see cref="E:FastReport.EnvironmentSettings.CustomOpenDialog" />, <see cref="E:FastReport.EnvironmentSettings.CustomSaveDialog" />, 
        <see cref="E:FastReport.EnvironmentSettings.CustomOpenReport" />, <see cref="E:FastReport.EnvironmentSettings.CustomSaveReport" />.
        <code>
        private void CustomOpenDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (OpenFileDialog dialog = new OpenFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomSaveDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (SaveFileDialog dialog = new SaveFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";
            // get default file name from e.FileName
            dialog.FileName = e.FileName;

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomOpenReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // load the report from the given e.FileName
          e.Report.Load(e.FileName);
        }

        private void CustomSaveReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // save the report to the given e.FileName
          e.Report.Save(e.FileName);
        }
        </code>
      </example>
        </member>
        <member name="E:FastReport.EnvironmentSettings.CustomOpenReport">
            <summary>
        Occurs when the report designer is about to load the report.
        </summary><remarks>
        <para />This event is used together with the <see cref="E:FastReport.EnvironmentSettings.CustomOpenDialog" /> event.
        <para />Use this event to attach own "Open" dialog to the designer. In the event handler, you must 
        load the <b>e.Report</b> from the location specified in the <b>e.FileName</b> property.
        For example, if you work with files: <c>e.Report.Load(e.FileName);</c>
        </remarks>
            <example>
        This example shows how to attach own "Open" and "Save" dialogs to the designer. 
        It uses the following events: <see cref="E:FastReport.EnvironmentSettings.CustomOpenDialog" />, <see cref="E:FastReport.EnvironmentSettings.CustomSaveDialog" />, 
        <see cref="E:FastReport.EnvironmentSettings.CustomOpenReport" />, <see cref="E:FastReport.EnvironmentSettings.CustomSaveReport" />.
        <code>
        private void CustomOpenDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (OpenFileDialog dialog = new OpenFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomSaveDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (SaveFileDialog dialog = new SaveFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";
            // get default file name from e.FileName
            dialog.FileName = e.FileName;

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomOpenReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // load the report from the given e.FileName
          e.Report.Load(e.FileName);
        }

        private void CustomSaveReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // save the report to the given e.FileName
          e.Report.Save(e.FileName);
        }
        </code>
      </example>
        </member>
        <member name="E:FastReport.EnvironmentSettings.CustomSaveReport">
            <summary>
        Occurs when the report designer is about to save the report.
        </summary><remarks>
        <para />This event is used together with the <see cref="E:FastReport.EnvironmentSettings.CustomSaveDialog" /> event.
        <para />Use this event to attach own "Save" dialog to the designer. In the event handler, you must 
        save the <b>e.Report</b> to the location specified in the <b>e.FileName</b> property.
        For example, if you work with files: <c>e.Report.Save(e.FileName);</c>
        </remarks>
            <example>
        This example shows how to attach own "Open" and "Save" dialogs to the designer. 
        It uses the following events: <see cref="E:FastReport.EnvironmentSettings.CustomOpenDialog" />, <see cref="E:FastReport.EnvironmentSettings.CustomSaveDialog" />, 
        <see cref="E:FastReport.EnvironmentSettings.CustomOpenReport" />, <see cref="E:FastReport.EnvironmentSettings.CustomSaveReport" />.
        <code>
        private void CustomOpenDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (OpenFileDialog dialog = new OpenFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomSaveDialog_Handler(object sender, OpenSaveDialogEventArgs e)
        {
          using (SaveFileDialog dialog = new SaveFileDialog())
          {
            dialog.Filter = "Report files (*.frx)|*.frx";
            // get default file name from e.FileName
            dialog.FileName = e.FileName;

            // set e.Cancel to false if dialog was succesfully executed
            e.Cancel = dialog.ShowDialog() != DialogResult.OK;
            // set e.FileName to the selected file name
            e.FileName = dialog.FileName;
          }
        }

        private void CustomOpenReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // load the report from the given e.FileName
          e.Report.Load(e.FileName);
        }

        private void CustomSaveReport_Handler(object sender, OpenSaveReportEventArgs e)
        {
          // save the report to the given e.FileName
          e.Report.Save(e.FileName);
        }
        </code>
      </example>
        </member>
        <member name="E:FastReport.EnvironmentSettings.CustomPreviewReport">
            <summary>
            Occurs when previewing a report from the designer.
            </summary>
            <remarks>
            Use this event to show own preview window.
            </remarks>
            <example>
            <code>
            environmentSettings1.CustomPreviewReport += new EventHandler(MyPreviewHandler);
            
            private void MyPreviewHandler(object sender, EventArgs e)
            {
              Report report = sender as Report;
              using (MyPreviewForm form = new MyPreviewForm())
              {
                report.Preview = form.previewControl1;
                report.ShowPreparedReport();
                form.ShowDialog();
              }
            }
            </code>
            </example>
        </member>
        <member name="E:FastReport.EnvironmentSettings.FilterConnectionTables">
            <summary>
            Occurs when getting available table names from the connection.
            </summary>
            <remarks>
            Use this handler to filter the list of tables returned by the connection object.
            </remarks>
            <example>
            This example demonstrates how to hide the table with "Table 1" name from the Data Wizard.
            <code>
            environmentSettings1.FilterConnectionTables += DesignerSettings_FilterConnectionTables;
            
            private void DesignerSettings_FilterConnectionTables(object sender, FilterConnectionTablesEventArgs e)
            {
              if (e.TableName == "Table 1")
                e.Skip = true;
            }
            </code>
            </example>
        </member>
        <member name="P:FastReport.EnvironmentSettings.DesignerSettings">
            <summary>
            Gets or sets the designer settings.
            </summary>
        </member>
        <member name="P:FastReport.EnvironmentSettings.PreviewSettings">
            <summary>
            Gets or sets the preview settings.
            </summary>
        </member>
        <member name="P:FastReport.EnvironmentSettings.EmailSettings">
            <summary>
            Gets or sets the email settings.
            </summary>
        </member>
        <member name="T:FastReport.PreviewButtons">
            <summary>
            Specifies the set of buttons available in the preview.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.None">
            <summary>
            No buttons visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Print">
            <summary>
            The "Print" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Open">
            <summary>
            The "Open" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Save">
            <summary>
            The "Save" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Email">
            <summary>
            The "Email" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Find">
            <summary>
            The "Find" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Zoom">
            <summary>
            The zoom buttons are visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Outline">
            <summary>
            The "Outline" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.PageSetup">
            <summary>
            The "Page setup" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Edit">
            <summary>
            The "Edit" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Watermark">
            <summary>
            The "Watermark" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Navigator">
            <summary>
            The page navigator buttons are visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Close">
            <summary>
            The "Close" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.Design">
            <summary>
            The "Design" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.CopyPage">
            <summary>
            The "Copy Page" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.DeletePage">
            <summary>
            The "Delete Page" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.About">
            <summary>
            The "About" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewButtons.All">
            <summary>
            All buttons are visible.
            </summary>
        </member>
        <member name="T:FastReport.PreviewExports">
            <summary>
            Specifies the set of export buttons available in the preview.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.None">
            <summary>
            No exports visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.Prepared">
            <summary>
            The "Prepared" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.PDFExport">
            <summary>
            The "PDFExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.RTFExport">
            <summary>
            The "RTFExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.HTMLExport">
            <summary>
            The "HTMLExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.MHTExport">
            <summary>
            The "MHTExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.XMLExport">
            <summary>
            The "XMLExport" export button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.Excel2007Export">
            <summary>
            The "Excel2007Export" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.Excel2003Document">
            <summary>
            The "Excel2003Document" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.Word2007Export">
            <summary>
            The "Word2007Export" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.PowerPoint2007Export">
            <summary>
            The "PowerPoint2007Export" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.ODSExport">
            <summary>
            The "ODSExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.ODTExport">
            <summary>
            The "ODTExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.XPSExport">
            <summary>
            The "XPSExport" export button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.CSVExport">
            <summary>
            The "CSVExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.DBFExport">
            <summary>
            The "DBFExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.TextExport">
            <summary>
            The "TextExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.ZplExport">
            <summary>
            The "ZplExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.ImageExport">
            <summary>
            The "ImageExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.XAMLExport">
            <summary>
            The "XAMLExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.SVGExport">
            <summary>
            The "SVGExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.PPMLExport">
            <summary>
            The "PPMLExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.PSExport">
            <summary>
            The "PSExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.JsonExport">
            <summary>
            The "JsonExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.LaTeXExport">
            <summary>
            The "LaTeXExport" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewExports.All">
            <summary>
            The All export buttons is visible.
            </summary>
        </member>
        <member name="T:FastReport.PreviewClouds">
            <summary>
            Specifies the set of export in clouds buttons available in the preview.
            </summary>
        </member>
        <member name="F:FastReport.PreviewClouds.None">
            <summary>
            No exports in clouds visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewClouds.Box">
            <summary>
            The "Box" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewClouds.Dropbox">
            <summary>
            The "Dropbox" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewClouds.FastCloud">
            <summary>
            The "FastCloud" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewClouds.Ftp">
            <summary>
            The "Ftp" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewClouds.GoogleDrive">
            <summary>
            The "GoogleDrive" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewClouds.SkyDrive">
            <summary>
            The "SkyDrive" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewClouds.Xmpp">
            <summary>
            The "Xmpp" button is visible.
            </summary>
        </member>
        <member name="F:FastReport.PreviewClouds.All">
            <summary>
            The All export in clouds buttons is visible.
            </summary>
        </member>
        <member name="T:FastReport.PreviewSettings">
            <summary>
            Contains some settings of the preview window.
            </summary>
        </member>
        <member name="E:FastReport.PreviewSettings.PreviewOpened">
            <summary>
            Occurs when the standard preview window opened.
            </summary>
            <remarks>
            You may use this event to change the standard preview window, for example, add an own button to it.
            The <b>sender</b> parameter in this event is the <b>PreviewControl</b>.
            </remarks>
        </member>
        <member name="P:FastReport.PreviewSettings.Buttons">
            <summary>
            Gets or sets a set of buttons that will be visible in the preview's toolbar.
            </summary>
            <example>
            Here is an example how you can disable the "Print" and "EMail" buttons:
            <code>
            Config.PreviewSettings.Buttons = PreviewButtons.Open | 
            PreviewButtons.Save | 
            PreviewButtons.Find | 
            PreviewButtons.Zoom | 
            PreviewButtons.Outline | 
            PreviewButtons.PageSetup | 
            PreviewButtons.Edit | 
            PreviewButtons.Watermark | 
            PreviewButtons.Navigator | 
            PreviewButtons.Close;
            </code>
            </example>
        </member>
        <member name="P:FastReport.PreviewSettings.Exports">
            <summary>
            Specifies the set of exports that will be available in the preview's "save" menu.
            </summary>
        </member>
        <member name="P:FastReport.PreviewSettings.Clouds">
            <summary>
            Specifies the set of exports in clouds that will be available in the preview's "save" menu.
            </summary>
        </member>
        <member name="P:FastReport.PreviewSettings.PagesInCache">
            <summary>
            Gets or sets the number of prepared pages that can be stored in the memory cache during preview.
            </summary>
            <remarks>
            Decrease this value if your prepared report contains a lot of pictures. This will
            save the RAM memory.
            </remarks>
        </member>
        <member name="P:FastReport.PreviewSettings.ShowInTaskbar">
            <summary>
            Gets or sets a value indicating whether the preview window is displayed in the Windows taskbar. 
            </summary>
        </member>
        <member name="P:FastReport.PreviewSettings.TopMost">
            <summary>
            Gets or sets a value indicating whether the preview window should be displayed as a topmost form. 
            </summary>
        </member>
        <member name="P:FastReport.PreviewSettings.Icon">
            <summary>
            Gets or sets the icon for the preview window.
            </summary>
        </member>
        <member name="P:FastReport.PreviewSettings.Text">
            <summary>
            Gets or sets the text for the preview window.
            </summary>
            <remarks>
            If no text is set, the default text "Preview" will be used.
            </remarks>
        </member>
        <member name="P:FastReport.PreviewSettings.FastScrolling">
            <summary>
            Gets or sets a value indicating whether the fast scrolling method should be used.
            </summary>
            <remarks>
            If you enable this property, the gradient background will be disabled.
            </remarks>
        </member>
        <member name="P:FastReport.PreviewSettings.AllowPrintToFile">
            <summary>
            Enables or disables the "Print to file" feature in the print dialog.
            </summary>
        </member>
        <member name="P:FastReport.PreviewSettings.SaveInitialDirectory">
            <summary>
            Gets or sets the initial directory that is displayed by a save file dialog.
            </summary>
        </member>
        <member name="M:FastReport.PreviewSettings.#ctor">
            <summary>
            Initializes a new instance of the <b>PreviewSettings</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._000">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._001">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._002">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._003">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._004">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._005">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._006">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._007">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._008">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._009">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._010">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._011">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._012">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._013">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._014">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._015">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._016">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._017">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._018">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._019">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._020">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._021">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._022">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._023">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._024">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._025">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._026">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._027">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._028">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._029">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._030">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._031">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._032">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._033">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._034">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._035">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._036">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._037">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._038">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._039">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._040">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._041">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._042">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._043">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._044">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._045">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._046">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._047">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._048">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._049">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._050">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._051">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._052">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._053">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._054">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._055">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._056">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._057">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._058">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._059">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._060">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._061">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._062">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._063">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._064">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._065">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._066">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._067">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._068">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._069">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._070">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._071">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._072">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._073">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._074">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._075">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._076">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._077">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._078">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._079">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._080">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._081">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._082">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._083">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._084">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._085">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._086">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._087">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._088">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._089">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._090">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._091">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._092">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._093">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._094">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._095">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._096">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._097">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._098">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._099">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._100">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._101">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._102">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._103">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._104">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._105">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._106">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._107">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._108">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._109">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._110">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._111">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._112">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._113">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._114">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._115">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._116">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._117">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._118">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._119">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._120">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._121">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._122">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._123">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._124">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._125">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._126">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._127">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._129">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._130">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._131">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._132">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._133">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._134">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._135">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._136">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._137">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._138">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._139">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._140">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._141">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._142">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._143">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._144">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._145">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._146">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._147">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._148">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._149">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._150">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._151">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._152">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._153">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._154">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._155">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._156">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._157">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._158">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._159">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._160">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._161">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._162">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._163">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._164">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._165">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._166">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._167">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._168">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._169">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._170">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._171">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._172">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._173">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._174">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._175">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._176">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._177">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._178">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._179">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._180">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._181">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._182">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._183">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._184">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._185">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._186">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._187">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._188">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._189">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._190">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._191">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._192">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._193">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._194">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._195">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._196">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._197">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._198">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._199">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._200">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._201">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._202">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._203">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._204">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._205">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._206">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._207">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._208">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._209">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._210">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._211">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._212">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._213">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._214">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._215">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._216">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._217">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._218">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._219">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._220">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._221">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._222">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._223">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._224">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._225">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._226">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._227">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._228">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._229">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._230">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._231">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._232">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._233">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._234">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources._235">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.AddDataSource">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.AlignMenu">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.Bands">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.BringToFront">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.ChooseData">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.ChooseData1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.FitToGrid">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.Group">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.Grouping">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.PageSetup">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.Panels">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.report">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.Report1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.SendToBack">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.SizeMenu">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.SpacingMenu">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.splash">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.style">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.Ungroup">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.ViewGridlines">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.ViewGuides">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:FastReport.Properties.Resources.welcome">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:FastReport.TextObjectBaseMenu">
            <summary>
            The class introduces some menu items specific to the <b>TextObjectBase</b>.
            </summary>
        </member>
        <member name="F:FastReport.TextObjectBaseMenu.miFormat">
            <summary>
            The "Format" menu item.
            </summary>
        </member>
        <member name="F:FastReport.TextObjectBaseMenu.miAllowExpressions">
            <summary>
            The "Allow Expressions" menu item.
            </summary>
        </member>
        <member name="F:FastReport.TextObjectBaseMenu.miHideZeros">
            <summary>
            The "Hide Zeros" menu item.
            </summary>
        </member>
        <member name="M:FastReport.TextObjectBaseMenu.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <b>TextObjectBaseMenu</b> 
            class with default settings. 
            </summary>
            <param name="designer">The reference to a report designer.</param>
        </member>
        <member name="T:FastReport.BreakableComponentMenu">
            <summary>
            This class represents the context menu of the <see cref="T:FastReport.BreakableComponent"/>.
            </summary>
            <remarks>
            This class adds the "Can Break" menu item to the component context menu.
            </remarks>
        </member>
        <member name="F:FastReport.BreakableComponentMenu.miCanBreak">
            <summary>
            The "Can Break" menu item.
            </summary>
        </member>
        <member name="M:FastReport.BreakableComponentMenu.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <b>BreakableComponentMenu</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.DataColumnSmartTag">
            <summary>
            Class represent a smart tag that is used to choose a data column.
            </summary>
        </member>
        <member name="P:FastReport.DataColumnSmartTag.DataColumn">
            <summary>
            Gets or sets the data column name.
            </summary>
        </member>
        <member name="M:FastReport.DataColumnSmartTag.CreateItems">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataColumnSmartTag.FindRootDataSource">
            <summary>
            Gets a root datasource for the object currently edited.
            </summary>
            <returns>The <b>DataSourceBase</b> object if found; <b>null</b> otherwise.</returns>
        </member>
        <member name="M:FastReport.DataColumnSmartTag.#ctor(FastReport.ComponentBase)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.DataColumnSmartTag"/> class with default settings.
            </summary>
            <param name="obj">Report object that owns this smart tag.</param>
        </member>
        <member name="T:FastReport.DataSourceSmartTag">
            <summary>
            Represents a smart tag that is used to choose a data source.
            </summary>
        </member>
        <member name="P:FastReport.DataSourceSmartTag.DataSource">
            <summary>
            Gets or sets a data source.
            </summary>
        </member>
        <member name="M:FastReport.DataSourceSmartTag.CreateItems">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.DataSourceSmartTag.#ctor(FastReport.ComponentBase)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.DataSourceSmartTag"/> class with default settings.
            </summary>
            <param name="obj">Report object that owns this smart tag.</param>
        </member>
        <member name="T:FastReport.IHasEditor">
            <summary>
            Implements the object's editor.
            </summary>
        </member>
        <member name="M:FastReport.IHasEditor.InvokeEditor">
            <summary>
            Invokes the object's editor.
            </summary>
            <returns><b>true</b> if object was succesfully edited.</returns>
            <remarks>
            This method is called by FastReport when the object is doubleclicked in the designer.
            </remarks>
        </member>
        <member name="T:FastReport.ISearchable">
            <summary>
            Provides the "search" functionality in the preview and designer.
            </summary>
        </member>
        <member name="M:FastReport.ISearchable.SearchText(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the specified text inside the object.
            </summary>
            <param name="text">Text to find.</param>
            <param name="matchCase"><b>true</b> to perform case-sensitive search.</param>
            <param name="wholeWord"><b>true</b> to find whole words only.</param>
            <returns>Array of character ranges that describes the occurences of text found; 
            <b>null</b> if text not found.</returns>
        </member>
        <member name="M:FastReport.ISearchable.DrawSearchHighlight(FastReport.Utils.FRPaintEventArgs,System.Drawing.CharacterRange)">
            <summary>
            Draws the highlight to show the text found.
            </summary>
            <param name="e">Draw event arguments.</param>
            <param name="range">Range of characters to highlight.</param>
        </member>
        <member name="T:FastReport.SmartTagBase">
            <summary>
            The base class for smart tags.
            </summary>
            <remarks>
            <para>
            "Smart tag" is a little button that appears near the object's top-right corner when we are in the
            designer and move the mouse over the object. When you click that button you will see a popup window
            where you can set up some properties of the object. FastReport uses smart tags to quickly choose
            the datasource (for a band) or data column (for objects).
            </para>
            <para>
            Smart tag is internally a ContextMenuStrip.
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.SmartTagBase.Menu">
            <summary>
            Gets the underlying context menu.
            </summary>
        </member>
        <member name="P:FastReport.SmartTagBase.Obj">
            <summary>
            Gets the report object that invokes this smart tag.
            </summary>
        </member>
        <member name="P:FastReport.SmartTagBase.Designer">
            <summary>
            Gets the report designer.
            </summary>
        </member>
        <member name="M:FastReport.SmartTagBase.ItemClicked">
            <summary>
            Called when the menu item is clicked.
            </summary>
            <remarks>
            Override this method to define a reaction on the menu item click.
            </remarks>
        </member>
        <member name="M:FastReport.SmartTagBase.CreateItems">
            <summary>
            Creates the smart tag menu items.
            </summary>
            <remarks>
            Override this method to create the smart tag menu.
            </remarks>
        </member>
        <member name="M:FastReport.SmartTagBase.Show(System.Drawing.Point)">
            <summary>
            Displays a smart tag at the specified screen location.
            </summary>
            <remarks>
            Do not call this method directly. It is called automatically when click on smart tag button.
            </remarks>
            <param name="pt">Screen location.</param>
        </member>
        <member name="M:FastReport.SmartTagBase.#ctor(FastReport.ComponentBase)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.SmartTagBase"/> class with default settings.
            </summary>
            <param name="obj">Report object that owns this smart tag.</param>
        </member>
        <member name="T:FastReport.TypeConverters.ComponentRefConverter">
            <summary>
            Provides a type converter for a property representing a reference to another component in a report.
            </summary>
        </member>
        <member name="M:FastReport.TypeConverters.ComponentRefConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.ComponentRefConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.ComponentRefConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.ComponentRefConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeConverters.UnitsConverter">
            <summary>
            Provides a type converter for a property representing a value measured in the current report units.
            </summary>
        </member>
        <member name="M:FastReport.TypeConverters.UnitsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.UnitsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.UnitsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.UnitsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeConverters.FRExpandableObjectConverter">
            <summary>
            Provides a type converter for a property representing an expandable object.
            </summary>
        </member>
        <member name="M:FastReport.TypeConverters.FRExpandableObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.FRExpandableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.FRExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.FRExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.TypeConverters.DataTypeConverter">
            <summary>
            Provides a type converter for a property representing a data type.
            </summary>
        </member>
        <member name="M:FastReport.TypeConverters.DataTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.DataTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.DataTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TypeConverters.DataTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.ComponentBaseMenu">
            <summary>
            The base class for the context menu of the report component.
            </summary>
            <remarks>
            This class represents a context menu of the report component that is displayed when the object 
            is right-clicked in the designer. This class implements the following actions: Edit, Cut, Copy, 
            Paste, Delete, Bring to Front, Send to Back.
            </remarks>
        </member>
        <member name="F:FastReport.ComponentBaseMenu.miName">
            <summary>
            The "Name" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ComponentBaseMenu.miEdit">
            <summary>
            The "Edit" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ComponentBaseMenu.miCut">
            <summary>
            The "Cut" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ComponentBaseMenu.miCopy">
            <summary>
            The "Copy" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ComponentBaseMenu.miPaste">
            <summary>
            The "Paste" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ComponentBaseMenu.miDelete">
            <summary>
            The "Delete" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ComponentBaseMenu.miBringToFront">
            <summary>
            The "BringToFront" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ComponentBaseMenu.miSendToBack">
            <summary>
            The "SendToBack" menu item.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBaseMenu.Designer">
            <summary>
            The reference to the report designer.
            </summary>
        </member>
        <member name="P:FastReport.ComponentBaseMenu.Items">
            <summary>
            Gets a collection of menu items.
            </summary>
            <remarks>
            You should add new items to this collection.
            </remarks>
        </member>
        <member name="M:FastReport.ComponentBaseMenu.Change">
            <summary>
            This method is called to reflect changes in the designer.
            </summary>
        </member>
        <member name="M:FastReport.ComponentBaseMenu.CreateMenuItem(System.String)">
            <summary>
            Creates a new menu item.
            </summary>
            <param name="text">Item's text.</param>
            <returns>New item.</returns>
        </member>
        <member name="M:FastReport.ComponentBaseMenu.CreateMenuItem(System.String,System.EventHandler)">
            <summary>
            Creates a new menu item.
            </summary>
            <param name="text">Item's text.</param>
            <param name="click">Click handler.</param>
            <returns>New item.</returns>
        </member>
        <member name="M:FastReport.ComponentBaseMenu.CreateMenuItem(System.Drawing.Image,System.String,System.EventHandler)">
            <summary>
            Creates a new menu item.
            </summary>
            <param name="image">Item's image.</param>
            <param name="text">Item's text.</param>
            <param name="click">Click handler.</param>
            <returns>New item.</returns>
        </member>
        <member name="M:FastReport.ComponentBaseMenu.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <b>ComponentBaseMenu</b> class with default settings. 
            </summary>
            <param name="designer">The reference to a report designer.</param>
        </member>
        <member name="T:FastReport.PrintMode">
            <summary>
            Specifies the report printing mode.
            </summary>
        </member>
        <member name="F:FastReport.PrintMode.Default">
            <summary>
            Specifies the default printing mode. One report page produces 
            one printed paper sheet of the same size.
            </summary>
        </member>
        <member name="F:FastReport.PrintMode.Split">
            <summary>
            Specifies the split mode. Big report page produces several smaller paper sheets.
            Use this mode to print A3 report on A4 printer.
            </summary>
        </member>
        <member name="F:FastReport.PrintMode.Scale">
            <summary>
            Specifies the scale mode. One or several report pages produce one bigger paper sheet.
            Use this mode to print A5 report on A4 printer. 
            </summary>
        </member>
        <member name="T:FastReport.PagesOnSheet">
            <summary>
            Specifies the number of report pages printed on one paper sheet.
            </summary>
        </member>
        <member name="F:FastReport.PagesOnSheet.One">
            <summary>
            Specifies one report page per sheet.
            </summary>
        </member>
        <member name="F:FastReport.PagesOnSheet.Two">
            <summary>
            Specifies two report pages per sheet.
            </summary>
        </member>
        <member name="F:FastReport.PagesOnSheet.Four">
            <summary>
            Specifies four report pages per sheet.
            </summary>
        </member>
        <member name="F:FastReport.PagesOnSheet.Eight">
            <summary>
            Specifies eight report pages per sheet.
            </summary>
        </member>
        <member name="T:FastReport.PrintPages">
            <summary>
            Specifies the pages to print.
            </summary>
        </member>
        <member name="F:FastReport.PrintPages.All">
            <summary>
            Print all report pages.
            </summary>
        </member>
        <member name="F:FastReport.PrintPages.Odd">
            <summary>
            Print odd pages only.
            </summary>
        </member>
        <member name="F:FastReport.PrintPages.Even">
            <summary>
            Print even pages only.
            </summary>
        </member>
        <member name="T:FastReport.PrintSettings">
            <summary>
            This class contains the printer settings. 
            It is used in the <see cref="P:FastReport.Report.PrintSettings"/> property.
            </summary>
            <remarks>
            Typical use of this class is to setup a printer properties without using the "Print"
            dialog. In this case, setup necessary properties and turn off the dialog via the 
            <see cref="P:FastReport.PrintSettings.ShowDialog"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.PrintSettings.Printer">
            <summary>
            Gets or sets the printer name.
            </summary>
        </member>
        <member name="P:FastReport.PrintSettings.SavePrinterWithReport">
            <summary>
            Gets or sets a value indicating that the printer name should be saved in a report file.
            </summary>
            <remarks>
            If this property is set to <b>true</b>, the printer name will be saved in a report file.
            Next time when you open the report, the printer will be automatically selected.
            </remarks>
        </member>
        <member name="P:FastReport.PrintSettings.PrintToFile">
            <summary>
            Gets or sets a value indicating that the printing output should be send 
            to a file instead of a printer.
            </summary>
            <remarks>
            Also set the <see cref="P:FastReport.PrintSettings.PrintToFileName"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.PrintSettings.PrintToFileName">
            <summary>
            The name of a file to print the report to.
            </summary>
            <remarks>
            This property is used if <see cref="P:FastReport.PrintSettings.PrintToFile"/> property is <b>true</b>.
            </remarks>
        </member>
        <member name="P:FastReport.PrintSettings.PageRange">
            <summary>
            Gets or sets a value specifies the page range to print.
            </summary>
        </member>
        <member name="P:FastReport.PrintSettings.PageNumbers">
            <summary>
            Gets or sets the page number(s) to print.
            </summary>
            <remarks>
            This property is used if <see cref="P:FastReport.PrintSettings.PageRange"/> property is set to <b>PageNumbers</b>.
            You can specify the page numbers, separated by commas, or the page ranges.
            For example: "1,3,5-12".
            </remarks>
        </member>
        <member name="P:FastReport.PrintSettings.Copies">
            <summary>
            Gets or sets the number of copies to print.
            </summary>
        </member>
        <member name="P:FastReport.PrintSettings.Collate">
            <summary>
            Gets or sets a value indicating whether the printed document should be collated.
            </summary>
        </member>
        <member name="P:FastReport.PrintSettings.PrintPages">
            <summary>
            Gets or sets a value specifies the pages to print.
            </summary>
        </member>
        <member name="P:FastReport.PrintSettings.Reverse">
            <summary>
            Gets or sets a value determines whether to print pages in reverse order.
            </summary>
        </member>
        <member name="P:FastReport.PrintSettings.Duplex">
            <summary>
            Gets or sets the duplex mode.
            </summary>
        </member>
        <member name="P:FastReport.PrintSettings.PaperSource">
            <summary>
            Gets or sets the paper source.
            </summary>
            <remarks>
            This property corresponds to the RAW source number. Default value is 7 which 
            corresponds to DMBIN_AUTO.
            </remarks>
        </member>
        <member name="P:FastReport.PrintSettings.PrintMode">
            <summary>
            Gets or sets the print mode.
            </summary>
            <remarks>
            See the <see cref="T:FastReport.PrintMode"/> enumeration for details. If you use 
            the mode other than <b>Default</b>, you must specify the sheet size in the
            <see cref="P:FastReport.PrintSettings.PrintOnSheetWidth"/>, <see cref="P:FastReport.PrintSettings.PrintOnSheetHeight"/> properties.
            </remarks>
        </member>
        <member name="P:FastReport.PrintSettings.PrintOnSheetWidth">
            <summary>
            Gets or sets the width of the paper sheet to print on.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.PrintSettings.PrintMode"/> property is not <b>Default</b>.
            Specify the paper width in millimeters.
            </remarks>
        </member>
        <member name="P:FastReport.PrintSettings.PrintOnSheetHeight">
            <summary>
            Gets or sets the height of the paper sheet to print on.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.PrintSettings.PrintMode"/> property is not <b>Default</b>.
            Specify the paper height in millimeters.
            </remarks>
        </member>
        <member name="P:FastReport.PrintSettings.PrintOnSheetRawPaperSize">
            <summary>
            Gets or sets the raw index of a paper size.
            </summary>
        </member>
        <member name="P:FastReport.PrintSettings.PagesOnSheet">
            <summary>
            Gets or sets the number of pages per printed sheet.
            </summary>
            <remarks>
            This property is used if the <see cref="P:FastReport.PrintSettings.PrintMode"/> property is set to <b>Scale</b>.
            </remarks>
        </member>
        <member name="P:FastReport.PrintSettings.CopyNames">
            <summary>
            Gets or sets an array of printed copy names, such as "Original", "Copy", etc.
            </summary>
        </member>
        <member name="P:FastReport.PrintSettings.ShowDialog">
            <summary>
            Specifies whether to display the "Print" dialog.
            </summary>
        </member>
        <member name="M:FastReport.PrintSettings.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PrintSettings.Assign(FastReport.PrintSettings)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.PrintSettings.Clear">
            <summary>
            Resets all settings to its default values.
            </summary>
        </member>
        <member name="M:FastReport.PrintSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PrintSettings"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ReportComponentBaseMenu">
            <summary>
            The class introduces some menu items specific 
            to the <b>ReportComponentBase</b>.
            </summary>
        </member>
        <member name="F:FastReport.ReportComponentBaseMenu.miCanGrow">
            <summary>
            The "Can Grow" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ReportComponentBaseMenu.miCanShrink">
            <summary>
            The "Can Shrink" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ReportComponentBaseMenu.miGrowToBottom">
            <summary>
            The "Grow to Bottom" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ReportComponentBaseMenu.miHyperlink">
            <summary>
            The "Hyperlink" menu item.
            </summary>
        </member>
        <member name="F:FastReport.ReportComponentBaseMenu.miStyle">
            <summary>
            The "Style" menu item.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentBaseMenu.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <b>ReportComponentBaseMenu</b> 
            class with default settings. 
            </summary>
            <param name="designer">The reference to a report designer.</param>
        </member>
        <member name="T:FastReport.SelectedComponents">
            <summary>
            Holds the list of <see cref="T:FastReport.ComponentBase"/> objects currently selected in the designer.
            </summary>
            <remarks>
            This class is used by the "Alignment" toolbar. Use methods of this class to perform some 
            operations on the selected objects. 
            <para/>Note: after calling any method in this class, call the 
            <see cref="M:FastReport.Design.Designer.SetModified">Designer.SetModified</see> method to reflect changes.
            <para/>Note: this list contains only objects of <see cref="T:FastReport.ComponentBase"/> type. If you want to access all
            selected objects, use the <see cref="P:FastReport.Design.Designer.SelectedObjects"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.SelectedComponents.First">
            <summary>
            Gets the first selected object.
            </summary>
        </member>
        <member name="P:FastReport.SelectedComponents.Count">
            <summary>
            Gets the number of selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.AlignLeft">
            <summary>
            Aligns left edges of the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.AlignRight">
            <summary>
            Aligns right edges of the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.AlignCenter">
            <summary>
            Aligns centers of the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.AlignTop">
            <summary>
            Aligns top edges of the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.AlignBottom">
            <summary>
            Aligns bottom edges of the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.AlignMiddle">
            <summary>
            Aligns middles of the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.SameWidth">
            <summary>
            Makes the selected objects the same width as the first object.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.SameHeight">
            <summary>
            Makes the selected objects the same height as the first object.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.SameSize">
            <summary>
            Makes the selected objects the same size as the first object.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.CenterHorizontally">
            <summary>
            Centers the selected objects horizontally.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.CenterVertically">
            <summary>
            Centers the selected objects vertically.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.AlignToGrid">
            <summary>
            Aligns the selected objects to the grid.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.SizeToGrid">
            <summary>
            Adjusts the size of selected objects to the grid.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.SpaceHorizontally">
            <summary>
            Spaces the selected objects horizontally.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.IncreaseHorizontalSpacing">
            <summary>
            Increases horizontal spacing between the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.DecreaseHorizontalSpacing">
            <summary>
            Decreases horizontal spacing between the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.RemoveHorizontalSpacing">
            <summary>
            Removes horizontal spacing between the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.SpaceVertically">
            <summary>
            Spaces the selected objects vertically.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.IncreaseVerticalSpacing">
            <summary>
            Increases vertical spacing between the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.DecreaseVerticalSpacing">
            <summary>
            Decreases vertical spacing between the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedComponents.RemoveVerticalSpacing">
            <summary>
            Removes vertical spacing between the selected objects.
            </summary>
        </member>
        <member name="T:FastReport.SelectedReportComponents">
            <summary>
            Holds the list of <see cref="T:FastReport.ReportComponentBase"/> objects currently selected in the designer.
            </summary>
            <remarks>
            This class is used by the "Border and Fill" toolbar. Use methods of this class to perform some 
            operations on the selected objects. 
            <para/>Note: after calling any method in this class, call the 
            <see cref="M:FastReport.Design.Designer.SetModified">Designer.SetModified</see> method to reflect changes.
            <para/>Note: this list contains only objects of <see cref="T:FastReport.ReportComponentBase"/> type. 
            If you want to access all selected objects, use the <see cref="P:FastReport.Design.Designer.SelectedObjects"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.SelectedReportComponents.First">
            <summary>
            Gets the first selected object.
            </summary>
        </member>
        <member name="P:FastReport.SelectedReportComponents.Count">
            <summary>
            Gets the number of selected objects.
            </summary>
        </member>
        <member name="P:FastReport.SelectedReportComponents.Enabled">
            <summary>
            Gets a value indicating whether the operations are enabled.
            </summary>
        </member>
        <member name="P:FastReport.SelectedReportComponents.SimpleBorder">
            <summary>
            Gets a value indicating whether the object with simple border is selected.
            </summary>
            <remarks>
            When the object has a simple border, you cannot change individual border lines.
            Example of such an object is the "Shape" and "Line" objects.
            </remarks>
        </member>
        <member name="P:FastReport.SelectedReportComponents.BorderEnabled">
            <summary>
            Gets a value indicating whether the border operations are enabled.
            </summary>
        </member>
        <member name="P:FastReport.SelectedReportComponents.FillEnabled">
            <summary>
            Gets a value indicating whether the fill operations are enabled.
            </summary>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetColor(System.Drawing.Color)">
            <summary>
            Sets the solid fill color for the selected objects.
            </summary>
            <param name="color">Fill color.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetFill(FastReport.FillBase)">
            <summary>
            Sets the fill for the selected objects.
            </summary>
            <param name="fill">Fill.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetStyle(System.String)">
            <summary>
            Sets the style for the selected objects.
            </summary>
            <param name="style">Style name.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetHyperlink(FastReport.Hyperlink,System.Boolean,System.Boolean)">
            <summary>
            Sets the hyperlink for the selected objects.
            </summary>
            <param name="hyperlink">Hyperlink.</param>
            <param name="modifyAppearance">Indicates whether to modify the object's appearance.</param>
            <param name="setModified">Indicates whether it is necessary to change designer's modified state.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetCanGrow(System.Boolean)">
            <summary>
            Sets the CanGrow flag for the selected objects.
            </summary>
            <param name="value">Flag value.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetCanShrink(System.Boolean)">
            <summary>
            Sets the CanShrink flag for the selected objects.
            </summary>
            <param name="value">Flag value.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetGrowToBottom(System.Boolean)">
            <summary>
            Sets the GrowToBottom flag for the selected objects.
            </summary>
            <param name="value">Flag value.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.ToggleLine(FastReport.BorderLines,System.Boolean)">
            <summary>
            Toggles the specified border line for the selected objects.
            </summary>
            <param name="line">Border line.</param>
            <param name="toggle">Toggle value.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetLineColor(System.Drawing.Color)">
            <summary>
            Sets the border color for the selected objects.
            </summary>
            <param name="color">Border color.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetWidth(System.Single)">
            <summary>
            Sets the border width for the selected objects.
            </summary>
            <param name="width">Border width.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetLineStyle(FastReport.LineStyle)">
            <summary>
            Sets the border style for the selected objects.
            </summary>
            <param name="style">Border style.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.SetBorder(FastReport.Border)">
            <summary>
            Sets the border for the selected objects.
            </summary>
            <param name="border">Border.</param>
        </member>
        <member name="M:FastReport.SelectedReportComponents.InvokeFillEditor">
            <summary>
            Invokes the fill editor for the selected objects.
            </summary>
            <returns><b>true</b> if editor was closed by the OK button.</returns>
        </member>
        <member name="M:FastReport.SelectedReportComponents.InvokeBorderEditor">
            <summary>
            Invokes the border editor for the selected objects.
            </summary>
            <returns><b>true</b> if editor was closed by the OK button.</returns>
        </member>
        <member name="M:FastReport.SelectedReportComponents.InvokeHyperlinkEditor">
            <summary>
            Invokes the hyperlink editor for the selected objects.
            </summary>
            <returns><b>true</b> if editor was closed by the OK button.</returns>
        </member>
        <member name="T:FastReport.SelectedTextObjects">
            <summary>
            Holds the list of <see cref="T:FastReport.TextObject"/> objects currently selected in the designer.
            </summary>
            <remarks>
            This class is used by the "Text" toolbar. Use methods of this class to perform some 
            operations on the selected objects. 
            <para/>Note: after calling any method in this class, call the 
            <see cref="M:FastReport.Design.Designer.SetModified">Designer.SetModified</see> method to reflect changes.
            <para/>Note: this list contains only objects of <see cref="T:FastReport.TextObject"/> type. If you want to access all
            selected objects, use the <see cref="P:FastReport.Design.Designer.SelectedObjects"/> property.
            </remarks>
        </member>
        <member name="P:FastReport.SelectedTextObjects.First">
            <summary>
            Gets the first selected object.
            </summary>
        </member>
        <member name="P:FastReport.SelectedTextObjects.Count">
            <summary>
            Gets the number of selected objects.
            </summary>
        </member>
        <member name="P:FastReport.SelectedTextObjects.Enabled">
            <summary>
            Gets a value indicating whether the operations are enabled.
            </summary>
        </member>
        <member name="M:FastReport.SelectedTextObjects.SetFontName(System.String)">
            <summary>
            Sets the font name for the selected objects.
            </summary>
            <param name="name">Font name.</param>
        </member>
        <member name="M:FastReport.SelectedTextObjects.SetFontSize(System.Single)">
            <summary>
            Sets the font size for the selected objects.
            </summary>
            <param name="size">Font size.</param>
        </member>
        <member name="M:FastReport.SelectedTextObjects.ToggleFontStyle(System.Drawing.FontStyle,System.Boolean)">
            <summary>
            Toggles the specified font style for the selected objects.
            </summary>
            <param name="style">Font style.</param>
            <param name="toggle">Toggle value.</param>
        </member>
        <member name="M:FastReport.SelectedTextObjects.SetHAlign(FastReport.HorzAlign)">
            <summary>
            Sets the horizontal text alignment for tthe selected objects.
            </summary>
            <param name="align">Alignment to set.</param>
        </member>
        <member name="M:FastReport.SelectedTextObjects.SetVAlign(FastReport.VertAlign)">
            <summary>
            Sets the vertical text alignment for tthe selected objects.
            </summary>
            <param name="align">Alignment to set.</param>
        </member>
        <member name="M:FastReport.SelectedTextObjects.SetTextColor(System.Drawing.Color)">
            <summary>
            Sets the text color for the selected objects.
            </summary>
            <param name="color">Text color.</param>
        </member>
        <member name="M:FastReport.SelectedTextObjects.SetAngle(System.Int32)">
            <summary>
            Sets the angle for the selected objects.
            </summary>
            <param name="angle">Angle to set.</param>
        </member>
        <member name="M:FastReport.SelectedTextObjects.SetAutoWidth(System.Boolean)">
            <summary>
            Sets the AutoWidth property value for the selected objects.
            </summary>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:FastReport.SelectedTextObjects.SetWordWrap(System.Boolean)">
            <summary>
            Sets the WordWrap property value for the selected objects.
            </summary>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:FastReport.SelectedTextObjects.SetConditions(FastReport.ConditionCollection)">
            <summary>
            Sets the highlight conditions for the selected objects.
            </summary>
            <param name="value">Highlight conditions.</param>
        </member>
        <member name="M:FastReport.SelectedTextObjects.ClearText">
            <summary>
            Clears the text of the selected objects.
            </summary>
        </member>
        <member name="M:FastReport.SelectedTextObjects.InvokeHighlightEditor">
            <summary>
            Invokes the highlight editor for the selected objects.
            </summary>
            <returns><b>true</b> if editor was closed with the OK button.</returns>
        </member>
        <member name="T:FastReport.TextObjectMenu">
            <summary>
            The class introduces some menu items specific to the <b>TextObject</b>.
            </summary>
        </member>
        <member name="F:FastReport.TextObjectMenu.miClear">
            <summary>
            The "Clear" menu item.
            </summary>
        </member>
        <member name="F:FastReport.TextObjectMenu.miAutoWidth">
            <summary>
            The "Auto Width" menu item.
            </summary>
        </member>
        <member name="F:FastReport.TextObjectMenu.miWordWrap">
            <summary>
            The "Word Wrap" menu item.
            </summary>
        </member>
        <member name="M:FastReport.TextObjectMenu.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <b>TextObjectMenu</b> 
            class with default settings. 
            </summary>
            <param name="designer">The reference to a report designer.</param>
        </member>
        <member name="T:FastReport.HtmlObjectMenu">
            <summary>
            The class introduces some menu items specific to the <b>TextObject</b>.
            </summary>
        </member>
        <member name="M:FastReport.HtmlObjectMenu.#ctor(FastReport.Design.Designer)">
            <summary>
            Initializes a new instance of the <b>TextObjectMenu</b> 
            class with default settings. 
            </summary>
            <param name="designer">The reference to a report designer.</param>
        </member>
        <member name="T:FastReport.SelectedObjectCollection">
            <summary>
            Holds the list of selected objects of <see cref="T:FastReport.Base"/> type. Used by the 
            <see cref="P:FastReport.Design.Designer.SelectedObjects"/>.
            </summary>
        </member>
        <member name="P:FastReport.SelectedObjectCollection.IsPageSelected">
            <summary>
            Gets a value indicating that report page is selected.
            </summary>
        </member>
        <member name="P:FastReport.SelectedObjectCollection.IsReportSelected">
            <summary>
            Gets a value indicating that report is selected.
            </summary>
        </member>
        <member name="T:FastReport.PictureObjectBase">
            <summary>
            the base class for all picture objects
            </summary>
        </member>
        <member name="M:FastReport.PictureObjectBase.DrawErrorImage(System.Drawing.Graphics,FastReport.Utils.FRPaintEventArgs)">
            <summary>
            Draw an error image to Graphics g, when the image is designing
            </summary>
            <param name="g"></param>
            <param name="e"></param>
        </member>
        <member name="M:FastReport.PictureObjectBase.GetSelectionPoints">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.GetContextMenu">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.GetPreferredSize">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.GetSmartTag">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.InvokeEditor">
            <summary>
            Invokes the object's editor.
            </summary>
            <returns><b>true</b> if object was edited succesfully.</returns>
        </member>
        <member name="P:FastReport.PictureObjectBase.Angle">
            <summary>
            Gets or sets the image rotation angle, in degrees. Possible values are 0, 90, 180, 270.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.DataColumn">
            <summary>
            Gets or sets the data column name to get the image from.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.Grayscale">
            <summary>
            Gets or sets a value indicating that the image should be displayed in grayscale mode.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.Height">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.PictureObjectBase.ImageLocation">
            <summary>
            Gets or sets the path for the image to display in the PictureObject.
            </summary>
            <remarks>
            This property may contain the path to the image file as well as external URL.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObjectBase.IsDataColumn">
            <summary>
            Gets a value indicating that the image stored in the databases column
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.IsFileLocation">
            <summary>
            Gets a value indicating that the image stored in the separate file
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.IsWebLocation">
            <summary>
            Gets a value indicating that the image stored in the Web
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.MaxHeight">
            <summary>
            Gets or sets the maximum height of a Picture object, in pixels.
            </summary>
            <remarks>
            Use this property to restrict the object size if the <see cref="P:FastReport.PictureObjectBase.SizeMode"/> property
            is set to <b>AutoSize</b>.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObjectBase.MaxWidth">
            <summary>
            Gets or sets the maximum width of a Picture object, in pixels.
            </summary>
            <remarks>
            Use this property to restrict the object size if the <see cref="P:FastReport.PictureObjectBase.SizeMode"/> property
            is set to <b>AutoSize</b>.
            </remarks>
        </member>
        <member name="P:FastReport.PictureObjectBase.Padding">
            <summary>
            Gets or sets padding within the PictureObject.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.ShowErrorImage">
            <summary>
            Gets or sets a value indicating whether the PictureObject should display
            the error indicator if there is no image in it.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.SizeMode">
            <summary>
            Gets or sets a value that specifies how an image is positioned within a PictureObject.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.Width">
            <inheritdoc/>
        </member>
        <member name="P:FastReport.PictureObjectBase.ImageAlign">
            <summary>
            Gets or sets the alignment of a image in the border.
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.ImageHeight">
            <summary>
            Return base size of image, internal use only
            </summary>
        </member>
        <member name="P:FastReport.PictureObjectBase.ImageWidth">
            <summary>
            Return base size of image, internal use only
            </summary>
        </member>
        <member name="M:FastReport.PictureObjectBase.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.CalculateUri">
            <summary>
            Calculates URI from ImageLocation
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.PictureObjectBase.Draw(FastReport.Utils.FRPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.GetImageAngleTransform(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            gets points for transform this image
            </summary>
            <param name="drawRect">the box where to draw image</param>
            <param name="imageWidth">image width</param>
            <param name="imageHeight">image height</param>
            <param name="scaleX">scale horizontal</param>
            <param name="scaleY">scale vertical</param>
            <param name="offsetX">offset of left</param>
            <param name="offsetY">offset of top</param>
            <param name="upperLeft">out start of vectors</param>
            <param name="upperRight">out end of frist vector</param>
            <param name="lowerLeft">out end of second vector</param>
        </member>
        <member name="M:FastReport.PictureObjectBase.LoadImage">
            <summary>
            Loads image
            </summary>
        </member>
        <member name="M:FastReport.PictureObjectBase.MovePointOnAngle(System.Drawing.PointF,System.Drawing.SizeF,System.Single)">
            <summary>
            Moves the point on specified angle
            </summary>
            <param name="p"></param>
            <param name="size"></param>
            <param name="fangle"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.PictureObjectBase.RestoreState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.rotateVector(System.Drawing.PointF,System.Single)">
            <summary>
            Rotates vector on specified angle
            </summary>
            <param name="p"></param>
            <param name="fangle"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.PictureObjectBase.SaveState">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PictureObjectBase.DrawImageInternal(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <summary>
            Draws not tiled image
            </summary>
            <param name="e"></param>
            <param name="drawRect"></param>
            <param name="image"></param>
        </member>
        <member name="M:FastReport.PictureObjectBase.ResetImageIndex">
            <summary>
            Reset index of image
            </summary>
        </member>
        <member name="M:FastReport.PictureObjectBase.UpdateAutoSize">
            <summary>
            When auto size was updated, internal use only
            </summary>
        </member>
        <member name="M:FastReport.PictureObjectBase.GetExpressions">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.AssemblyInitializer">
            <summary>
            The FastReport.dll assembly initializer.
            </summary>
        </member>
        <member name="M:FastReport.AssemblyInitializer.#ctor">
            <summary>
            Registers all core objects, wizards, export filters.
            </summary>
        </member>
        <member name="T:FastReport.AssemblyInitializerBaseExt">
            <summary>
            The FastReport.dll assembly initializer.
            </summary>
        </member>
        <member name="M:FastReport.AssemblyInitializerBaseExt.#ctor">
            <summary>
            Registers all core objects, wizards, export filters.
            </summary>
        </member>
        <member name="T:FastReport.BandCollection">
            <summary>
            Represents a collection of bands.
            </summary>
        </member>
        <member name="P:FastReport.BandCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.BandCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.BandCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.BandCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.BandCollection"/> class with specified owner.
            </summary>
            <param name="owner">Owner that owns this collection.</param>
        </member>
        <member name="T:FastReport.ColumnLayout">
            <summary>
            The layout of the data band columns.
            </summary>
        </member>
        <member name="F:FastReport.ColumnLayout.AcrossThenDown">
            <summary>
            Print columns across then down.
            </summary>
        </member>
        <member name="F:FastReport.ColumnLayout.DownThenAcross">
            <summary>
            Print columns down then across.
            </summary>
        </member>
        <member name="T:FastReport.BandColumns">
            <summary>
            This class holds the band columns settings. It is used in the <see cref="P:FastReport.DataBand.Columns"/> property.
            </summary>
        </member>
        <member name="P:FastReport.BandColumns.Count">
            <summary>
            Gets or sets the number of columns.
            </summary>
            <remarks>
            Set this property to 0 or 1 if you don't want to use columns.
            </remarks>
        </member>
        <member name="P:FastReport.BandColumns.Width">
            <summary>
            The column width, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.BandColumns.Layout">
            <summary>
            Gets or sets the layout of the columns.
            </summary>
        </member>
        <member name="P:FastReport.BandColumns.MinRowCount">
            <summary>
            Gets or sets the minimum row count that must be printed.
            </summary>
            <remarks>
            This property is used if the <b>Layout</b> property is set to <b>DownThenAcross</b>. 0 means that
            FastReport should calculate the optimal number of rows.
            </remarks>
        </member>
        <member name="M:FastReport.BandColumns.Assign(FastReport.BandColumns)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.BandColumns.#ctor(FastReport.DataBand)">
            <summary>
            Initializes a new instance of the <b>BandColumns</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Restrictions">
            <summary>
            Specifies a set of actions that cannot be performed on the object in the design mode.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.None">
            <summary>
            Specifies no restrictions.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.DontMove">
            <summary>
            Restricts moving the object.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.DontResize">
            <summary>
            Restricts resizing the object.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.DontModify">
            <summary>
            Restricts modifying the object's properties.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.DontEdit">
            <summary>
            Restricts editing the object.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.DontDelete">
            <summary>
            Restricts deleting the object.
            </summary>
        </member>
        <member name="F:FastReport.Restrictions.HideAllProperties">
            <summary>
            Hides all properties of the object.
            </summary>
        </member>
        <member name="T:FastReport.Flags">
            <summary>
            Specifies a set of actions that can be performed on the object in the design mode.
            </summary>
        </member>
        <member name="F:FastReport.Flags.None">
            <summary>
            Specifies no actions.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanMove">
            <summary>
            Allows moving the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanResize">
            <summary>
            Allows resizing the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanDelete">
            <summary>
            Allows deleting the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanEdit">
            <summary>
            Allows editing the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanChangeOrder">
            <summary>
            Allows changing the Z-order of an object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanChangeParent">
            <summary>
            Allows moving the object to another parent.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanCopy">
            <summary>
            Allows copying the object to the clipboard.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanDraw">
            <summary>
            Allows drawing the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanGroup">
            <summary>
            Allows grouping the object.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanWriteChildren">
            <summary>
            Allows write children in the preview mode by itself.
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanWriteBounds">
            <summary>
            Allows write object's bounds into the report stream.
            </summary>
        </member>
        <member name="F:FastReport.Flags.HasSmartTag">
            <summary>
            Allows the "smart tag" functionality.
            </summary>
        </member>
        <member name="F:FastReport.Flags.HasGlobalName">
            <summary>
            Specifies that the object's name is global (this is true for all report objects 
            such as Text, Picture and so on).
            </summary>
        </member>
        <member name="F:FastReport.Flags.CanShowChildrenInReportTree">
            <summary>
            Specifies that the object can display children in the designer's Report Tree window.
            </summary>
        </member>
        <member name="F:FastReport.Flags.InterceptsPreviewMouseEvents">
            <summary>
            Specifies that the object supports mouse wheel in the preview window.
            </summary>
        </member>
        <member name="T:FastReport.LineStyle">
            <summary>
            Specifies the style of a border line.
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.Solid">
            <summary>
            Specifies a solid line. 
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.Dot">
            <summary>
            Specifies a line consisting of dots. 
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot. 
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot. 
            </summary>
        </member>
        <member name="F:FastReport.LineStyle.Double">
            <summary>
            Specifies a double line. 
            </summary>
        </member>
        <member name="T:FastReport.BorderLines">
            <summary>
            Specifies the sides of a border.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.None">
            <summary>
            Specifies no border lines.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.Left">
            <summary>
            Specifies the left border line.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.Right">
            <summary>
            Specifies the right border line.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.Top">
            <summary>
            Specifies the top border line.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.Bottom">
            <summary>
            Specifies the bottom border line.
            </summary>
        </member>
        <member name="F:FastReport.BorderLines.All">
            <summary>
            Specifies all border lines.
            </summary>
        </member>
        <member name="T:FastReport.BorderLine">
            <summary>
            Represents a single border line.
            </summary>
        </member>
        <member name="P:FastReport.BorderLine.Color">
            <summary>
            Gets or sets a color of the line.
            </summary>
        </member>
        <member name="P:FastReport.BorderLine.Style">
            <summary>
            Gets or sets a style of the line.
            </summary>
        </member>
        <member name="P:FastReport.BorderLine.Width">
            <summary>
            Gets or sets a width of the line, in pixels.
            </summary>
        </member>
        <member name="M:FastReport.BorderLine.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BorderLine.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Border">
            <summary>
            Represents a border around the report object.
            </summary>
            <remarks>
            Border consists of four lines. Each line has own color, style and width. Lines are accessible through
            <see cref="P:FastReport.Border.LeftLine"/>, <see cref="P:FastReport.Border.RightLine"/>, <see cref="P:FastReport.Border.TopLine"/>, <see cref="P:FastReport.Border.BottomLine"/> properties.
            <para/>
            To turn on and off the lines, use the <see cref="P:FastReport.Border.Lines"/> property. To set the same color, style or width
            for each line, use <see cref="P:FastReport.Border.Color"/>, <see cref="P:FastReport.Border.Style"/>, <see cref="P:FastReport.Border.Width"/> properties of the <b>Border</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Border.Color">
            <summary>
            Gets or sets a color of the border.
            </summary>
            <remarks>
            This property actually returns a color of the <see cref="P:FastReport.Border.LeftLine"/>. When you assign a value 
            to this property, the value will be set to each border line.
            </remarks>
        </member>
        <member name="P:FastReport.Border.Shadow">
            <summary>
            Gets or sets a value determines whether to draw a shadow.
            </summary>
        </member>
        <member name="P:FastReport.Border.ShadowWidth">
            <summary>
            Gets or sets a shadow width, in pixels.
            </summary>
        </member>
        <member name="P:FastReport.Border.ShadowColor">
            <summary>
            Gets or sets a shadow color.
            </summary>
        </member>
        <member name="P:FastReport.Border.Style">
            <summary>
            Gets or sets a style of the border.
            </summary>
            <remarks>
            This property actually returns a style of the <see cref="P:FastReport.Border.LeftLine"/>. When you assign a value 
            to this property, the value will be set to each border line.
            </remarks>
        </member>
        <member name="P:FastReport.Border.Lines">
            <summary>
            Gets or sets a visible lines of a border.
            </summary>
        </member>
        <member name="P:FastReport.Border.Width">
            <summary>
            Gets or sets a width of the border, in pixels.
            </summary>
            <remarks>
            This property actually returns a width of the <see cref="P:FastReport.Border.LeftLine"/>. When you assign a value 
            to this property, the value will be set to each border line.
            </remarks>
        </member>
        <member name="P:FastReport.Border.LeftLine">
            <summary>
            Gets or sets the left line of the border.
            </summary>
        </member>
        <member name="P:FastReport.Border.TopLine">
            <summary>
            Gets or sets the top line of the border.
            </summary>
        </member>
        <member name="P:FastReport.Border.RightLine">
            <summary>
            Gets or sets the right line of the border.
            </summary>
        </member>
        <member name="P:FastReport.Border.BottomLine">
            <summary>
            Gets or sets the bottom line of the border.
            </summary>
        </member>
        <member name="P:FastReport.Border.SimpleBorder">
            <summary>
            Gets or sets a value determines that <b>Border</b> must serialize only one line.
            </summary>
            <remarks>
            This property is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Border.Clone">
            <summary>
            Creates the exact copy of this <b>Border</b>.
            </summary>
            <returns>A copy of this border.</returns>
        </member>
        <member name="M:FastReport.Border.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Border.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Border.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Border)">
            <summary>
            Serializes the border.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Border property name.</param>
            <param name="c">Another Border to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Border.Draw(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <summary>
            Draw the border using draw event arguments and specified bounding rectangle.
            </summary>
            <param name="e">Draw event arguments.</param>
            <param name="rect">Bounding rectangle.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Border.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Border"/> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.BreakableComponent">
            <summary>
            Base class for report components that can break across pages.
            </summary>
        </member>
        <member name="P:FastReport.BreakableComponent.CanBreak">
            <summary>
            Gets or sets a value that determines if the component can break its contents across pages.
            </summary>
        </member>
        <member name="P:FastReport.BreakableComponent.BreakTo">
            <summary>
            Gets or sets a reference to another similar object that will be used for displaying the
            text that not fit in this object.
            </summary>
        </member>
        <member name="M:FastReport.BreakableComponent.Assign(FastReport.Base)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BreakableComponent.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.BreakableComponent.Break(FastReport.BreakableComponent)">
            <summary>
            Breaks the contents of the object.
            </summary>
            <param name="breakTo">Object to put the part of content to that does not fit in this object. These two 
            objects must have the same type.</param>
            <returns><b>true</b> if there is enough space in this object to display at least one text line.</returns>
            <remarks>
            <para>
            Do not call this method directly, it is used by the report engine. You should override it if
            you are writing a new FastReport object.
            </para>
            <para>
            This method must break the contents of the object. The part of content that fit in current object's
            bounds should remain in this object, the part that does not fit should be transferred to <b>breakTo</b>
            object. 
            </para>
            </remarks>
        </member>
        <member name="M:FastReport.BreakableComponent.#ctor">
            <summary>
            Initializes a new instance of the <b>BreakableComponent</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.CapStyle">
            <summary>
            Specifies a line cap style.
            </summary>
        </member>
        <member name="F:FastReport.CapStyle.None">
            <summary>
            Specifies a line without a cap.
            </summary>
        </member>
        <member name="F:FastReport.CapStyle.Circle">
            <summary>
            Specifies a line with a circle cap.
            </summary>
        </member>
        <member name="F:FastReport.CapStyle.Square">
            <summary>
            Specifies a line with a square cap.
            </summary>
        </member>
        <member name="F:FastReport.CapStyle.Diamond">
            <summary>
            Specifies a line with a diamond cap.
            </summary>
        </member>
        <member name="F:FastReport.CapStyle.Arrow">
            <summary>
            Specifies a line with an arrow cap.
            </summary>
        </member>
        <member name="T:FastReport.CapSettings">
            <summary>
            Specifies a start and end line caps.
            </summary>
        </member>
        <member name="P:FastReport.CapSettings.Width">
            <summary>
            Gets or sets a width of the cap.
            </summary>
        </member>
        <member name="P:FastReport.CapSettings.Height">
            <summary>
            Gets or sets a height of the cap.
            </summary>
        </member>
        <member name="P:FastReport.CapSettings.Style">
            <summary>
            Gets or sets a cap style.
            </summary>
        </member>
        <member name="M:FastReport.CapSettings.Assign(FastReport.CapSettings)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.CapSettings.Clone">
            <summary>
            Creates exact copy of this object.
            </summary>
            <returns>Copy of this object.</returns>
        </member>
        <member name="M:FastReport.CapSettings.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CapSettings.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.CapSettings.Serialize(System.String,FastReport.Utils.FRWriter,FastReport.CapSettings)">
            <summary>
            Serializes the cap settings.
            </summary>
            <param name="prefix">Name of the cap property.</param>
            <param name="writer">Writer object.</param>
            <param name="diff">Another cap to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.CapSettings.#ctor">
            <summary>
            Initializes a new instance of the <b>CapSettings</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.CheckedSymbol">
            <summary>
            Specifies a symbol that will be displayed when a <see cref="T:FastReport.CheckBoxObject"/> is in the checked state.
            </summary>
        </member>
        <member name="F:FastReport.CheckedSymbol.Check">
            <summary>
            Specifies a check symbol.
            </summary>
        </member>
        <member name="F:FastReport.CheckedSymbol.Cross">
            <summary>
            Specifies a diagonal cross symbol.
            </summary>
        </member>
        <member name="F:FastReport.CheckedSymbol.Plus">
            <summary>
            Specifies a plus symbol.
            </summary>
        </member>
        <member name="F:FastReport.CheckedSymbol.Fill">
            <summary>
            Specifies a filled rectangle.
            </summary>
        </member>
        <member name="T:FastReport.UncheckedSymbol">
            <summary>
            Specifies a symbol that will be displayed when a <see cref="T:FastReport.CheckBoxObject"/> is in the unchecked state.
            </summary>
        </member>
        <member name="F:FastReport.UncheckedSymbol.None">
            <summary>
            Specifies no symbol.
            </summary>
        </member>
        <member name="F:FastReport.UncheckedSymbol.Cross">
            <summary>
            Specifies a diagonal cross symbol.
            </summary>
        </member>
        <member name="F:FastReport.UncheckedSymbol.Minus">
            <summary>
            Specifies a minus symbol.
            </summary>
        </member>
        <member name="T:FastReport.ColumnFooterBand">
            <summary>
            This class represents a column footer band.
            </summary>
        </member>
        <member name="P:FastReport.ColumnFooterBand.StartNewPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.ColumnFooterBand.PrintOnBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.ColumnFooterBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ColumnFooterBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ColumnHeaderBand">
            <summary>
            This class represents a column header band.
            </summary>
        </member>
        <member name="P:FastReport.ColumnHeaderBand.StartNewPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.ColumnHeaderBand.PrintOnBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.ColumnHeaderBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ColumnHeaderBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ConditionCollection">
            <summary>
            Represents a collection of highlight conditions used in the <see cref="P:FastReport.TextObject.Highlight"/> property
            of the <see cref="T:FastReport.TextObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.ConditionCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.ConditionCollection.AddRange(FastReport.HighlightCondition[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range">Array of elements to add.</param>
        </member>
        <member name="M:FastReport.ConditionCollection.Add(FastReport.HighlightCondition)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.ConditionCollection.Insert(System.Int32,FastReport.HighlightCondition)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.ConditionCollection.Remove(FastReport.HighlightCondition)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.ConditionCollection.IndexOf(FastReport.HighlightCondition)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.ConditionCollection.Contains(FastReport.HighlightCondition)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.ConditionCollection.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ConditionCollection.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ConditionCollection.Assign(FastReport.ConditionCollection)">
            <summary>
            Copies conditions from another collection.
            </summary>
            <param name="collection">Collection to copy from.</param>
        </member>
        <member name="M:FastReport.ConditionCollection.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.ConditionCollection.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.DataFooterBand">
            <summary>
            This class represents a data band footer.
            </summary>
        </member>
        <member name="T:FastReport.DataHeaderBand">
            <summary>
            This class represents a header of the data band.
            </summary>
        </member>
        <member name="T:FastReport.FillBase">
            <summary>
            Base class for all fills.
            </summary>
        </member>
        <member name="P:FastReport.FillBase.IsTransparent">
            <summary>
            Returned true if Color = Transparent
            </summary>
        </member>
        <member name="M:FastReport.FillBase.Clone">
            <summary>
            Creates exact copy of this fill.
            </summary>
            <returns>Copy of this object.</returns>
        </member>
        <member name="M:FastReport.FillBase.CreateBrush(System.Drawing.RectangleF)">
            <summary>
            Creates the GDI+ Brush object.
            </summary>
            <param name="rect">Drawing rectangle.</param>
            <returns>Brush object.</returns>
        </member>
        <member name="M:FastReport.FillBase.CreateBrush(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Creates the GDI+ Brush object with scaling.
            </summary>
            <param name="rect">Drawing rectangle.</param>
            <param name="scaleX">X scaling coefficient.</param>
            <param name="scaleY">Y scaling coefficient.</param>
            <returns>Brush object.</returns>
        </member>
        <member name="M:FastReport.FillBase.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <summary>
            Serializes the fill.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">Name of the fill property.</param>
            <param name="fill">Fill object to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.FillBase.Draw(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <summary>
            Fills the specified rectangle.
            </summary>
            <param name="e">Draw event arguments.</param>
            <param name="rect">Drawing rectangle.</param>
        </member>
        <member name="T:FastReport.SolidFill">
            <summary>
            Class represents the solid fill.
            </summary>
        </member>
        <member name="P:FastReport.SolidFill.Color">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="M:FastReport.SolidFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.Draw(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SolidFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.SolidFill"/> class with Transparent color.
            </summary>
        </member>
        <member name="M:FastReport.SolidFill.#ctor(System.Drawing.Color)">
            <summary>
            Initializes the <see cref="T:FastReport.SolidFill"/> class with specified color.
            </summary>
            <param name="color"></param>
        </member>
        <member name="T:FastReport.LinearGradientFill">
            <summary>
            Class represents the linear gradient fill.
            </summary>
        </member>
        <member name="P:FastReport.LinearGradientFill.StartColor">
            <summary>
            Gets or sets the start color of the gradient. 
            </summary>
        </member>
        <member name="P:FastReport.LinearGradientFill.EndColor">
            <summary>
            Gets or sets the end color of the gradient. 
            </summary>
        </member>
        <member name="P:FastReport.LinearGradientFill.Angle">
            <summary>
            Gets or sets the angle of the gradient.
            </summary>
        </member>
        <member name="P:FastReport.LinearGradientFill.Focus">
            <summary>
            Gets or sets the focus point of the gradient.
            </summary>
            <remarks>
            Value is a floating point value from 0 to 1.
            </remarks>
        </member>
        <member name="P:FastReport.LinearGradientFill.Contrast">
            <summary>
            Gets or sets the gradient contrast.
            </summary>
            <remarks>
            Value is a floating point value from 0 to 1.
            </remarks>
        </member>
        <member name="M:FastReport.LinearGradientFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LinearGradientFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LinearGradientFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LinearGradientFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LinearGradientFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.LinearGradientFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.LinearGradientFill"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.LinearGradientFill.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes the <see cref="T:FastReport.LinearGradientFill"/> class with start and end colors.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="endColor">End color.</param>
        </member>
        <member name="M:FastReport.LinearGradientFill.#ctor(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            Initializes the <see cref="T:FastReport.LinearGradientFill"/> class with start, end colors and angle.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="endColor">End color.</param>
            <param name="angle">Angle.</param>
        </member>
        <member name="M:FastReport.LinearGradientFill.#ctor(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Single,System.Single)">
            <summary>
            Initializes the <see cref="T:FastReport.LinearGradientFill"/> class with start and end colors, angle, focus and contrast.
            </summary>
            <param name="startColor">Start color.</param>
            <param name="endColor">End color.</param>
            <param name="angle">Angle.</param>
            <param name="focus">Focus.</param>
            <param name="contrast">Contrast.</param>
        </member>
        <member name="T:FastReport.PathGradientStyle">
            <summary>
            The style of the path gradient.
            </summary>
        </member>
        <member name="F:FastReport.PathGradientStyle.Elliptic">
            <summary>
            Elliptic gradient.
            </summary>
        </member>
        <member name="F:FastReport.PathGradientStyle.Rectangular">
            <summary>
            Rectangular gradient.
            </summary>
        </member>
        <member name="T:FastReport.PathGradientFill">
            <summary>
            Class represents the path gradient fill.
            </summary>
        </member>
        <member name="P:FastReport.PathGradientFill.CenterColor">
            <summary>
            Gets or sets the center color of the gradient.
            </summary>
        </member>
        <member name="P:FastReport.PathGradientFill.EdgeColor">
            <summary>
            Gets or sets the edge color of the gradient.
            </summary>
        </member>
        <member name="P:FastReport.PathGradientFill.Style">
            <summary>
            Gets or sets the style of the gradient.
            </summary>
        </member>
        <member name="M:FastReport.PathGradientFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PathGradientFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PathGradientFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PathGradientFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PathGradientFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.PathGradientFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.PathGradientFill"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.PathGradientFill.#ctor(System.Drawing.Color,System.Drawing.Color,FastReport.PathGradientStyle)">
            <summary>
            Initializes the <see cref="T:FastReport.PathGradientFill"/> class with center, edge colors and style.
            </summary>
            <param name="centerColor">Center color.</param>
            <param name="edgeColor">Edge color.</param>
            <param name="style">Gradient style.</param>
        </member>
        <member name="T:FastReport.HatchFill">
            <summary>
            Class represents the hatch fill.
            </summary>
        </member>
        <member name="P:FastReport.HatchFill.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:FastReport.HatchFill.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:FastReport.HatchFill.Style">
            <summary>
            Gets or sets the hatch style.
            </summary>
        </member>
        <member name="M:FastReport.HatchFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HatchFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HatchFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HatchFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HatchFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HatchFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.HatchFill"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.HatchFill.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.HatchStyle)">
            <summary>
            Initializes the <see cref="T:FastReport.HatchFill"/> class with foreground, background colors and hatch style.
            </summary>
            <param name="foreColor">Foreground color.</param>
            <param name="backColor">Background color.</param>
            <param name="style">Hatch style.</param>
        </member>
        <member name="T:FastReport.GlassFill">
            <summary>
            Class represents the glass fill.
            </summary>
        </member>
        <member name="P:FastReport.GlassFill.Color">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="P:FastReport.GlassFill.Blend">
            <summary>
            Gets or sets the blend value.
            </summary>
            <remarks>Value must be between 0 and 1.
            </remarks>
        </member>
        <member name="P:FastReport.GlassFill.Hatch">
            <summary>
            Gets or sets a value determines whether to draw a hatch or not.
            </summary>
        </member>
        <member name="M:FastReport.GlassFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.Draw(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.GlassFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.GlassFill"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.GlassFill.#ctor(System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            Initializes the <see cref="T:FastReport.GlassFill"/> class with given color, blend ratio and hatch style.
            </summary>
            <param name="color">Color.</param>
            <param name="blend">Blend ratio (0..1).</param>
            <param name="hatch">Display the hatch.</param>
        </member>
        <member name="T:FastReport.TextureFill">
            <summary>
            Class represents the Texture fill.
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.PreserveAspectRatio">
            <summary>
            Gets or sets value, indicating that image should preserve aspect ratio
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageWidth">
            <summary>
            Gets or sets the image width
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageHeight">
            <summary>
            Gets or sets the image height
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.WrapMode">
            <summary>
            Gets or sets the texture wrap mode
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageIndex">
            <summary>
            Gets or sets the image index
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageData">
            <summary>
            Gets or sets the image data
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageOffsetX">
            <summary>
            Image left offset
            </summary>
        </member>
        <member name="P:FastReport.TextureFill.ImageOffsetY">
            <summary>
            Image top offset
            </summary>
        </member>
        <member name="M:FastReport.TextureFill.SetImageData(System.Byte[])">
            <summary>
            Sets image data to imageData
            </summary>
            <param name="data">input image data</param>
        </member>
        <member name="M:FastReport.TextureFill.SetImage(System.Drawing.Image)">
            <summary>
            Set image
            </summary>
            <param name="image">input image</param>
        </member>
        <member name="M:FastReport.TextureFill.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.CreateBrush(System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.CreateBrush(System.Drawing.RectangleF,System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.FillBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.Deserialize(FastReport.Utils.FRReader,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.FinalizeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.InitializeComponent">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.Draw(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.TextureFill.#ctor">
            <summary>
            Initializes the <see cref="T:FastReport.TextureFill"/> class with default texture.
            </summary>
        </member>
        <member name="M:FastReport.TextureFill.#ctor(System.Byte[])">
            <summary>
            Initializes the <see cref="T:FastReport.TextureFill"/> class with specified image.
            </summary>
            <param name="imageBytes"></param>
        </member>
        <member name="M:FastReport.TextureFill.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Drawing.Drawing2D.WrapMode,System.Int32,System.Int32)">
            <summary>
            Initializes the <see cref="T:FastReport.TextureFill"/> class with specified image.
            </summary>
            <param name="image"></param>
        </member>
        <member name="T:FastReport.Fonts.FastFont">
            <summary>
            Font descriptor
            </summary>
        </member>
        <member name="F:FastReport.Fonts.FastGraphicsPath.PointType.Start">
            <summary>
             Indicates that the point is the start of a figure.
            </summary>
        </member>
        <member name="F:FastReport.Fonts.FastGraphicsPath.PointType.Connect">
            <summary>
            Indicates that the point is one of the two endpoints of a line.
            </summary>
        </member>
        <member name="F:FastReport.Fonts.FastGraphicsPath.PointType.Bezier">
            <summary>
            Indicates that the point is an endpoint or control point of a cubic Bézier spline.
            </summary>
        </member>
        <member name="F:FastReport.Fonts.FastGraphicsPath.PointType.All">
            <summary>
            Masks all bits except for the three low-order bits, which indicate the point type.
            </summary>
        </member>
        <member name="F:FastReport.Fonts.FastGraphicsPath.PointType.Marker">
            <summary>
            Specifies that the point is a marker.
            </summary>
        </member>
        <member name="F:FastReport.Fonts.FastGraphicsPath.PointType.Last">
            <summary>
            Specifies that the point is the last point in a closed subpath (figure).
            </summary>
        </member>
        <member name="T:FastReport.Fonts.FontHeaderClass">
            <summary>
            FontHeader table
            </summary>
        </member>
        <member name="T:FastReport.Fonts.FontType">
            <summary>
            Define type of font file
            </summary>
        </member>
        <member name="F:FastReport.Fonts.FontType.TrueTypeFont">
            <summary>
            Classic TrueType font
            </summary>
        </member>
        <member name="F:FastReport.Fonts.FontType.TrueTypeCollection">
            <summary>
            Collection of TrueType fonts
            </summary>
        </member>
        <member name="F:FastReport.Fonts.FontType.OpenTypeFont">
            <summary>
            OpenType font format
            </summary>
        </member>
        <member name="F:FastReport.Fonts.FontType.UnknownFontType">
            
        </member>
        <member name="T:FastReport.Fonts.GlyphSubstitutionClass">
            <summary>
            GlyphSubstitution table
            </summary>
        </member>
        <member name="M:FastReport.Fonts.GlyphSubstitutionClass.Substitution.Apply(System.Collections.Generic.List{System.UInt16},System.UInt16[],System.Int32@)">
            <summary>
            Return true if was applied
            </summary>
            <param name="list"></param>
            <param name="chars"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.GlyphSubstitutionClass.Substitution.IsApply(System.UInt16[],System.Int32)">
            <summary>
            Return coverageIndex for ApplyForce or if fail then return -1 
            </summary>
            <param name="chars"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.GlyphSubstitutionClass.Substitution.ApplyForce(System.Collections.Generic.List{System.UInt16},System.UInt16[],System.Int32@,System.Int32)">
            <summary>
            Apply this Substitution with specified coverageIndex, cant be called only after IsApply
            </summary>
            <param name="list"></param>
            <param name="chars"></param>
            <param name="index"></param>
            <param name="coverageIndex"></param>
        </member>
        <member name="T:FastReport.Fonts.GlyphTableClass">
            <summary>
            Table with encoded glyphs' outline
            </summary>
        </member>
        <member name="T:FastReport.Fonts.HorizontalMetrixClass">
            <summary>
            HorizontalMetrix table 
            </summary>
        </member>
        <member name="T:FastReport.Fonts.IndexToLocationClass">
            <summary>
            IndexToLocation table 
            </summary>
        </member>
        <member name="T:FastReport.Fonts.KerningTableClass">
            <summary>
            Kerning table
            </summary>
        </member>
        <member name="T:FastReport.Fonts.MaximumProfileClass">
            <summary>
            MaximumProfile table
            </summary>
        </member>
        <member name="T:FastReport.Fonts.NameTableClass">
            <summary>
            Name table keep human friendly description about font properties, including font names, author and copyright notes
            </summary>
        </member>
        <member name="T:FastReport.Fonts.OS2WindowsMetricsClass">
            <summary>
            OS/2 and Windows Metrics table 
            </summary>
        </member>
        <member name="T:FastReport.Fonts.OS2WindowsMetricsClass.FontTextMetric">
            <summary>
            Description of FontTextMetric structure
            </summary>
        </member>
        <member name="T:FastReport.Fonts.OS2WindowsMetricsClass.FontPanose">
            <summary>
            Description of FontPanose structure
            </summary>
        </member>
        <member name="T:FastReport.Fonts.RequestFontHandler">
            <summary>
            Request font file
            </summary>
            <param name="font">System.Drawing.Font object</param>
            <param name="stream">System/IO.Stream object</param>
        </member>
        <member name="T:FastReport.Fonts.GetFontPathHandler">
            <summary>
            Get full path to a font file by it's identifier
            </summary>
            <param name="font_id">font name with attributes</param>
            <param name="pathname">path to a font file</param>
        </member>
        <member name="T:FastReport.Fonts.SetFontPathHandler">
            <summary>
            assign full path to a font file to it's identifier
            </summary>
            <param name="font_id">font name with attributes</param>
            <param name="pathname">path to a font file</param>
        </member>
        <member name="E:FastReport.Fonts.TrueTypeCollection.OnRequestFontData">
            <summary>
            Request font file location
            </summary>
        </member>
        <member name="E:FastReport.Fonts.TrueTypeCollection.OnGetFontPath">
            <summary>
            Request font file location
            </summary>
        </member>
        <member name="E:FastReport.Fonts.TrueTypeCollection.OnSetFontPath">
            <summary>
            Register font file
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeCollection.RefCounter">
            <summary>
            Reference counter
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeCollection.FileCheckOptions">
            <summary>
            Will be removed soon
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeCollection.CacheOptions">
            <summary>
            Different caching strategies
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeCollection.StatusHandler">
            <summary>
            Progress callback type definition
            </summary>
            <param name="status">Progress information</param>
        </member>
        <member name="E:FastReport.Fonts.TrueTypeCollection.OnStatusChanged">
            <summary>
            Progress callback event
            </summary>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeCollection.CheckFile(FastReport.Fonts.TrueTypeCollection.CacheOptions,System.String)">
            <summary>
            Open and parse TrueType file
            </summary>
            <param name="cache_options"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeCollection.RecursiveFind(System.String,System.String)">
            <summary>
            Find all fonts files in directory and it's subdirectories
            </summary>
            <param name="path">Directory where find fond files</param>
            <param name="font_list">Defines file which collect found fonts</param>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeCollection.GetTrueTypeFont(System.String)">
            <summary>
            Get TrueType font from static collection
            </summary>
            <param name="key">String which identifies font - family name + "-B" for bold and "-I" for italic</param>
            <returns></returns>
        </member>
        <member name="P:FastReport.Fonts.TrueTypeCollection.Item(System.String)">
            <summary>
            Get font by its name and bold/italic attributes
            </summary>
            <param name="FastName"></param>
            <returns>TrueType font object</returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeCollection.ParseFont(System.Boolean,FastReport.Fonts.ITrueTypeFont,System.String)">
            <summary>
            Workaround function for avoid font duplicates
            </summary>
            <param name="load">if true then font append to collection, if false then font append to hash</param>
            <param name="f">Internal font structure</param>
            <param name="path">This parameter defines path to font file if file append to hash. Not used otherwise</param>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeCollection.AddFontData(FastReport.Fonts.FontType,System.IntPtr)">
            <summary>
            Parse raw image of font data and create TrueTypeFont objects from this image
            </summary>
            <param name="CollectionMode">Defines font or collections</param>
            <param name="font_data">Pointer to memory of raw font data</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeCollection.CheckFontList(System.String)">
            <summary>
            Build list of fonts
            </summary>
            <param name="folder">Optional path to font.list folder.</param>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeCollection.EnumerateFonts">
            <summary>
            Enumerate available fonts
            </summary>
        </member>
        <member name="T:FastReport.Fonts.ITrueTypeFont">
            <summary>
            Interface for TrueTypeFont object
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont">
            <summary>
            TrueTypeFont object
            </summary>
        </member>
        <member name="P:FastReport.Fonts.TrueTypeFont.Script">
            <summary>
            Get or set current script
            </summary>
        </member>
        <member name="P:FastReport.Fonts.TrueTypeFont.Language">
            <summary>
            Get or set current Language
            </summary>
        </member>
        <member name="P:FastReport.Fonts.TrueTypeFont.Scripts">
            <summary>
            Get available scripts
            </summary>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.GetLanguages(System.String)">
            <summary>
            Get available languages for script
            </summary>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.GetFeatures(System.String,System.String)">
            <summary>
            Get available features for language and script
            </summary>
            <param name="script"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.Prepare">
            <summary>
            Prepare tables for drawing, subsetting and so on
            </summary>
            <returns>always true</returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.GetRawFontData">
            <summary>
            Return raw image of the font
            </summary>
            <returns>Array of font bytes</returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.PackFont(System.Collections.Generic.IList{System.UInt16},System.Boolean)">
            <summary>
            Cut some information from TTF file to reduce its size
            </summary>
            <param name="keep_list">List of character codes to preserve them in font</param>
            <param name="uniscribe">If true then ignore CMAP table</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.PrepareFont">
            <summary>
            Parse font supplement tables which store properties of the font
            </summary>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.GetHashKey">
            <summary>
            Get unique font identifier
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.GetGlyph(System.Char,System.Int32,System.Drawing.PointF)">
            <summary>
            Create glyph outline assigned to specific position
            </summary>
            <param name="ch">unicode character which will be drawn</param>
            <param name="size">size of the character</param>
            <param name="position">position of outline</param>
            <returns>outline of character</returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.GetGlyph(System.UInt16,System.Single)">
            <summary>
            Get glyph's outline
            </summary>
            <param name="ch">unicode charter</param>
            <param name="size">outline image size</param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.DrawString(System.UInt16[],System.Drawing.PointF,System.Single)">
            <summary>
            Create outline for group of characters
            </summary>
            <param name="text">text as array of glyph's indexes</param>
            <param name="position">position of text</param>
            <param name="size">font size</param>
            <returns>text in form of outline vectors</returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.DrawString(System.String,System.Drawing.PointF,System.Single)">
            <summary>
            Create outline for text string
            </summary>
            <param name="text">text which will be transformed to outline</param>
            <param name="position">position of text</param>
            <param name="size">font size in px</param>
            <returns>text in form of outline vectors</returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.DrawGSUBTable(System.Int32,System.Int32,System.Single,FastReport.Fonts.GlyphSubstitutionClass.LookupTypes[])">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.#ctor(System.IntPtr,System.IntPtr,FastReport.Fonts.TrueTypeCollection.RefCounter@)">
            <summary>
            Constructor of TrueTypeFont object
            </summary>
            <param name="begin">The start of RAW image of font or font collection</param>
            <param name="font">Actual address of font within RAW image</param>
            <param name="collection_size">Reference count emulation</param>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.SCRIPT_STATE">
            <summary>
            Description of SCRIPT_STATE structure
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_STATE.data">
            <summary>
            data
            </summary>
        </member>
        <member name="P:FastReport.Fonts.TrueTypeFont.SCRIPT_STATE.uBidiLevel">
            <summary>
            uBidiLevel
            </summary>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.SCRIPT_STATE.SetRtl">
            <summary>
            SetRtl
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.SCRIPT_ANALYSIS">
            <summary>
            Description of SCRIPT_ANALYSIS structure
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_ANALYSIS.data">
            <summary>
            data
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_ANALYSIS.state">
            <summary>
            state
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.SCRIPT_CONTROL">
            <summary>
            Description of SCRIPT_CONTROL structure
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_CONTROL.data">
            <summary>
            data
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.SCRIPT_DIGITSUBSTITUTE">
            <summary>
            Description of SCRIPT_DIGITSUBSTITUTE structure
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_DIGITSUBSTITUTE.NationalDigitLanguage">
            <summary>
            NationalDigitLanguage
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_DIGITSUBSTITUTE.TraditionalDigitLanguage">
            <summary>
            TraditionalDigitLanguage
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_DIGITSUBSTITUTE.DigitSubstitute">
            <summary>
            DigitSubstitute
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_DIGITSUBSTITUTE.dwReserved">
            <summary>
            dwReserved
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.SCRIPT_ITEM">
            <summary>
            Description of SCRIPT_ITEM structure
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_ITEM.iCharPos">
            <summary>
            iCharPos
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_ITEM.analysis">
            <summary>
            analysis
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.SCRIPT_VISATTR">
            <summary>
            Description of SCRIPT_VISATTR structure
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.SCRIPT_VISATTR.data">
            <summary>
            data
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.GOFFSET">
            <summary>
            Description of GOFFSET structure
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.GOFFSET.du">
            <summary>
            du
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.GOFFSET.dv">
            <summary>
            dv
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.ABC">
            <summary>
            Description of ABC structure
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.ABC.abcA">
            <summary>
            abcA
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.ABC.abcB">
            <summary>
            abcB
            </summary>
        </member>
        <member name="F:FastReport.Fonts.TrueTypeFont.ABC.abcC">
            <summary>
            abcC
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.FontRect">
            <summary>
            Description of FontRect structure
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.FontPoint">
            <summary>
            Description of FontPoint structure
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeFont.OutlineTextMetric">
            <summary>
            Description of OutlineTextMetric structure
            </summary>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.GetOutlineTextMetrics(FastReport.Fonts.TrueTypeFont.OutlineTextMetric@)">
            <summary>
            Emulation of Uniscribe GetOutlineTextMetrics
            </summary>
            <param name="TextMetric">Reference to metric structure</param>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.GetGlyphIndices(System.String,System.Single,System.UInt16[]@,System.Single[]@,System.Boolean)">
            <summary>
            Translate text to positions of glyphs in glyph tables and glyphs width
            </summary>
            <param name="text"></param>
            <param name="font_size">size in px</param>
            <param name="glyphs"></param>
            <param name="widths"></param>
            <param name="rtl"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TrueTypeFont.Finalize">
            <summary>
            Destructor of TrueTypeFont object
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TrueTypeTable">
            <summary>
            Base class which is parent of any table in TrueType font or collection
            </summary>
        </member>
        <member name="T:FastReport.Fonts.TTF_Helpers">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Fonts.TTF_Helpers.SwapUInt16(System.UInt16)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TTF_Helpers.SwapInt16(System.Int16)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TTF_Helpers.SwapUInt32(System.UInt32)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TTF_Helpers.SwapInt32(System.Int32)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TTF_Helpers.SwapUInt64(System.UInt64)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TTF_Helpers.Increment(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
            <param name="cbSize"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Fonts.TTF_Helpers.Increment(System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
            <param name="cbSize"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.Format.BooleanFormat">
            <summary>
            Defines how boolean values are formatted and displayed.
            </summary>
        </member>
        <member name="P:FastReport.Format.BooleanFormat.FalseText">
            <summary>
            Gets or sets a string that will be displayed if value is <b>false</b>.
            </summary>
        </member>
        <member name="P:FastReport.Format.BooleanFormat.TrueText">
            <summary>
            Gets or sets a string that will be displayed if value is <b>true</b>.
            </summary>
        </member>
        <member name="M:FastReport.Format.BooleanFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.BooleanFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.BooleanFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.BooleanFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.BooleanFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>BooleanFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.CurrencyFormat">
            <summary>
            Defines how currency values are formatted and displayed.
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.UseLocale">
            <summary>
            Gets or sets a value that determines whether to use system locale settings to format a value.
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.DecimalDigits">
            <summary>
            Gets or sets the number of decimal places to use in currency values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.DecimalSeparator">
            <summary>
            Gets or sets the string to use as the decimal separator in currency values.
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.GroupSeparator">
            <summary>
            Gets or sets the string that separates groups of digits to the left of the decimal in currency values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.CurrencySymbol">
            <summary>
            Gets or sets the string to use as the currency symbol.
            </summary>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.PositivePattern">
            <summary>
            Gets or sets the format pattern for positive currency values.
            </summary>
            <remarks>This property can have one of the values in the following table. 
            The symbol "$" is the <b>CurrencySymbol</b> and <i>n</i> is a number.
            <list type="table">
              <listheader><term>Value</term><description>Associated Pattern</description></listheader>
              <item><term>0</term><description>$n</description></item>
              <item><term>1</term><description>n$</description></item>
              <item><term>2</term><description>$ n</description></item>
              <item><term>3</term><description>n $</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Format.CurrencyFormat.NegativePattern">
            <summary>
            Gets or sets the format pattern for negative currency values.
            </summary>
            <remarks>This property can have one of the values in the following table. 
            The symbol "$" is the <b>CurrencySymbol</b> and <i>n</i> is a number.
            <list type="table">
              <listheader><term>Value</term><description>Associated Pattern</description></listheader>
              <item><term>0</term> <description>($n)</description></item>
              <item><term>1</term> <description>-$n</description></item>
              <item><term>2</term> <description>$-n</description></item>
              <item><term>3</term> <description>$n-</description></item>
              <item><term>4</term> <description>(n$)</description></item>
              <item><term>5</term> <description>-n$</description></item>
              <item><term>6</term> <description>n-$</description></item>
              <item><term>7</term> <description>n$-</description></item>
              <item><term>8</term> <description>-n $</description></item>
              <item><term>9</term> <description>-$ n</description></item>
              <item><term>10</term><description>n $-</description></item>
              <item><term>11</term><description>$ n-</description></item>
              <item><term>12</term><description>$ -n</description></item>
              <item><term>13</term><description>n- $</description></item>
              <item><term>14</term><description>($ n)</description></item>
              <item><term>15</term><description>(n $)</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:FastReport.Format.CurrencyFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CurrencyFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CurrencyFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CurrencyFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CurrencyFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>CurrencyFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.CustomFormat">
            <summary>
            Represents a format that uses the <b>Format</b> string to display values.
            </summary>
        </member>
        <member name="P:FastReport.Format.CustomFormat.Format">
            <summary>
            Gets or sets a format string.
            </summary>
            <remarks>
            Default format is "G". For example, if you want to format a date, use the following
            format string: "MM/dd/yyyy". See the <b>System.String.Format</b> method for list 
            of possible format strings.
            </remarks>
        </member>
        <member name="M:FastReport.Format.CustomFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CustomFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CustomFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CustomFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.CustomFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>CustomFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.DateFormat">
            <summary>
            Defines how date values are formatted and displayed.
            </summary>
        </member>
        <member name="M:FastReport.Format.DateFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.DateFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>DateFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.FormatBase">
            <summary>
            Base class for all formats.
            </summary>
            <remarks>
            The format is used to format expression value in a <see cref="T:FastReport.TextObject"/> object. 
            </remarks>
        </member>
        <member name="P:FastReport.Format.FormatBase.Name">
            <summary>
            Gets the short format name (e.g. without a "Format" suffix).
            </summary>
        </member>
        <member name="M:FastReport.Format.FormatBase.Clone">
            <summary>
            Creates exact copy of this format.
            </summary>
            <returns>The copy of this format.</returns>
        </member>
        <member name="M:FastReport.Format.FormatBase.FormatValue(System.Object)">
            <summary>
            Formats the specified value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The string that represents the formatted value.</returns>
        </member>
        <member name="M:FastReport.Format.FormatBase.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.FormatBase.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Format.FormatCollection">
            <summary>
            Represents a collection of formats used by the <see cref="T:FastReport.TextObject"/> and <see cref="T:FastReport.RichObject"/>
            objects.
            </summary>
        </member>
        <member name="P:FastReport.Format.FormatCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.Format.FormatCollection.AddRange(FastReport.Format.FormatBase[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range">Array of elements to add.</param>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Add(FastReport.Format.FormatBase)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Insert(System.Int32,FastReport.Format.FormatBase)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Remove(FastReport.Format.FormatBase)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.Format.FormatCollection.IndexOf(FastReport.Format.FormatBase)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Contains(FastReport.Format.FormatBase)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Assign(FastReport.Format.FormatCollection)">
            <summary>
            Copies formats from another collection.
            </summary>
            <param name="collection">Collection to copy from.</param>
        </member>
        <member name="M:FastReport.Format.FormatCollection.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.FormatCollection.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Format.GeneralFormat">
            <summary>
            Represents a format used to display values with no formatting.
            </summary>
        </member>
        <member name="M:FastReport.Format.GeneralFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.GeneralFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.GeneralFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.GeneralFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:FastReport.Format.NumberFormat">
            <summary>
            Defines how numeric values are formatted and displayed.
            </summary>
        </member>
        <member name="P:FastReport.Format.NumberFormat.UseLocale">
            <summary>
            Gets or sets a value that determines whether to use system locale settings to format a value.
            </summary>
        </member>
        <member name="P:FastReport.Format.NumberFormat.DecimalDigits">
            <summary>
            Gets or sets the number of decimal places to use in numeric values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.NumberFormat.DecimalSeparator">
            <summary>
            Gets or sets the string to use as the decimal separator in numeric values.
            </summary>
        </member>
        <member name="P:FastReport.Format.NumberFormat.GroupSeparator">
            <summary>
            Gets or sets the string that separates groups of digits to the left of the decimal in numeric values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.NumberFormat.NegativePattern">
            <summary>
            Gets or sets the format pattern for negative numeric values.
            </summary>
            <remarks>This property can have one of the values in the following table. 
            The symbol <i>n</i> is a number.
            <list type="table">
              <listheader><term>Value</term><description>Associated Pattern</description></listheader>
              <item><term>0</term><description>(n)</description></item>
              <item><term>1</term><description>-n</description></item>
              <item><term>2</term><description>- n</description></item>
              <item><term>3</term><description>n-</description></item>
              <item><term>4</term><description>n -</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:FastReport.Format.NumberFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.NumberFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.NumberFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.NumberFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.NumberFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>NumberFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.PercentFormat">
            <summary>
            Defines how percent values are formatted and displayed.
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.UseLocale">
            <summary>
            Gets or sets a value that determines whether to use system locale settings to format a value.
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.DecimalDigits">
            <summary>
            Gets or sets the number of decimal places to use in percent values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.DecimalSeparator">
            <summary>
            Gets or sets the string to use as the decimal separator in percent values.
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.GroupSeparator">
            <summary>
            Gets or sets the string that separates groups of digits to the left of the decimal in percent values. 
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.PercentSymbol">
            <summary>
            Gets or sets the string to use as the percent symbol.
            </summary>
        </member>
        <member name="P:FastReport.Format.PercentFormat.PositivePattern">
            <summary>
            Gets or sets the format pattern for positive percent values.
            </summary>
            <remarks>This property can have one of the values in the following table. 
            The symbol "%" is the <b>PercentSymbol</b> and <i>n</i> is a number.
            <list type="table">
              <listheader><term>Value</term><description>Associated Pattern</description></listheader>
              <item><term>0</term><description>n %</description></item>
              <item><term>1</term><description>n%</description></item>
              <item><term>2</term><description>%n</description></item>
              <item><term>3</term><description>% n</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:FastReport.Format.PercentFormat.NegativePattern">
            <summary>
            Gets or sets the format pattern for negative percent values.
            </summary>
            <remarks>This property can have one of the values in the following table. 
            The symbol "%" is the <b>PercentSymbol</b> and <i>n</i> is a number.
            <list type="table">
              <listheader><term>Value</term><description>Associated Pattern</description></listheader>
              <item><term>0</term> <description>-n %</description></item>
              <item><term>1</term> <description>-n%</description></item>
              <item><term>2</term> <description>-%n</description></item>
              <item><term>3</term> <description>%-n</description></item>
              <item><term>4</term> <description>%n-</description></item>
              <item><term>5</term> <description>n-%</description></item>
              <item><term>6</term> <description>n%-</description></item>
              <item><term>7</term> <description>-%n</description></item>
              <item><term>8</term> <description>n %-</description></item>
              <item><term>9</term> <description>% n-</description></item>
              <item><term>10</term><description>% -n</description></item>
              <item><term>11</term><description>n- %</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:FastReport.Format.PercentFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.PercentFormat.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.PercentFormat.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.PercentFormat.FormatValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.PercentFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>PercentFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Format.TimeFormat">
            <summary>
            Defines how time values are formatted and displayed.
            </summary>
        </member>
        <member name="M:FastReport.Format.TimeFormat.Clone">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Format.TimeFormat.#ctor">
            <summary>
            Initializes a new instance of the <b>TimeFormat</b> class with default settings. 
            </summary>
        </member>
        <member name="T:FastReport.Functions.Roman">
            <summary>
            Based on code of Stefan Bцther,  xprocs@hotmail.de
            </summary>
        </member>
        <member name="T:FastReport.Functions.StdFunctions">
            <summary>
            Contains standard functions registered in the "Data" window.
            </summary>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Maximum(System.Int32,System.Int32)">
            <summary>
            Returns the larger of two 32-bit signed integers. 
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Maximum(System.Int64,System.Int64)">
            <summary>
            Returns the larger of two 64-bit signed integers. 
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Maximum(System.Single,System.Single)">
            <summary>
            Returns the larger of two single-precision floating-point numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Maximum(System.Double,System.Double)">
            <summary>
            Returns the larger of two double-precision floating-point numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Maximum(System.Decimal,System.Decimal)">
            <summary>
            Returns the larger of two decimal numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minimum(System.Int32,System.Int32)">
            <summary>
            Returns the smaller of two 32-bit signed integers. 
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minimum(System.Int64,System.Int64)">
            <summary>
            Returns the smaller of two 64-bit signed integers. 
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minimum(System.Single,System.Single)">
            <summary>
            Returns the smaller of two single-precision floating-point numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minimum(System.Double,System.Double)">
            <summary>
            Returns the smaller of two double-precision floating-point numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minimum(System.Decimal,System.Decimal)">
            <summary>
            Returns the smaller of two decimal numbers.
            </summary>
            <param name="val1">The first of two values to compare.</param>
            <param name="val2">The second of two values to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Asc(System.Char)">
            <summary>
            Returns an integer value representing the character code corresponding to a character.
            </summary>
            <param name="c">Character to convert.</param>
            <returns>The character code.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Chr(System.Int32)">
            <summary>
            Returns the character associated with the specified character code.
            </summary>
            <param name="i">Character code to convert.</param>
            <returns>The character.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Insert(System.String,System.Int32,System.String)">
            <summary>
            Inserts a specified string at a specified index position in the original string.
            </summary>
            <param name="s">The original string.</param>
            <param name="startIndex">The index position of the insertion.</param>
            <param name="value">The string to insert.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Length(System.String)">
            <summary>
            Gets the number of characters in a string.
            </summary>
            <param name="s">The original string.</param>
            <returns>The number of characters.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.LowerCase(System.String)">
            <summary>
            Converts a specified string to lowercase.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>A string in lowercase.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.PadLeft(System.String,System.Int32)">
            <summary>
            Right-aligns the characters in a string, padding with spaces on the left for a specified total length.
            </summary>
            <param name="s">The original string.</param>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <returns>Right-aligned string, padded on the left with spaces.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.PadLeft(System.String,System.Int32,System.Char)">
            <summary>
            Right-aligns the characters in a string, padding on the left with a specified character
            for a specified total length.
            </summary>
            <param name="s">The original string.</param>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <param name="paddingChar">A padding character.</param>
            <returns>Right-aligned string, padded on the left with padding characters.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.PadRight(System.String,System.Int32)">
            <summary>
            Left-aligns the characters in a string, padding with spaces on the right, for a specified total length.
            </summary>
            <param name="s">The original string.</param>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <returns>Left-aligned string, padded on the right with spaces.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.PadRight(System.String,System.Int32,System.Char)">
            <summary>
            Left-aligns the characters in a string, padding on the right with a specified character, 
            for a specified total length.
            </summary>
            <param name="s">The original string.</param>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <param name="paddingChar">A padding character.</param>
            <returns>Left-aligned string, padded on the right with padding characters.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.TitleCase(System.String)">
            <summary>
            Converts the specified string to titlecase. 
            </summary>
            <param name="s">The string to convert.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Remove(System.String,System.Int32)">
            <summary>
            Deletes all the characters from a string beginning at a specified position.
            </summary>
            <param name="s">The original string.</param>
            <param name="startIndex">The position to begin deleting characters.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Remove(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes a specified number of characters from a string beginning at a specified position.
            </summary>
            <param name="s">The original string.</param>
            <param name="startIndex">The position to begin deleting characters.</param>
            <param name="count">The number of characters to delete.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Replace(System.String,System.String,System.String)">
            <summary>
            Replaces all occurrences of a specified string in the original string, with another specified string.
            </summary>
            <param name="s">The original string.</param>
            <param name="oldValue">A string to be replaced.</param>
            <param name="newValue">A string to replace all occurrences of oldValue.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Substring(System.String,System.Int32)">
            <summary>
            Retrieves a substring from the original string, starting at a specified character position.
            </summary>
            <param name="s">The original string.</param>
            <param name="startIndex">The starting character position of a substring.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Substring(System.String,System.Int32,System.Int32)">
            <summary>
            Retrieves a substring from the original string, starting at a specified character position, 
            with a specified length.
            </summary>
            <param name="s">The original string.</param>
            <param name="startIndex">The starting character position of a substring.</param>
            <param name="length">The number of characters in the substring.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Trim(System.String)">
            <summary>
            Removes all occurrences of white space characters from the beginning and end of the original string.
            </summary>
            <param name="s">The original string.</param>
            <returns>A new string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.UpperCase(System.String)">
            <summary>
            Converts a specified string to uppercase.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>A string in uppercase.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddDays(System.DateTime,System.Double)">
            <summary>
            Adds the specified number of days to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of whole and fractional days.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddHours(System.DateTime,System.Double)">
            <summary>
            Adds the specified number of hours to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of whole and fractional hours.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddMinutes(System.DateTime,System.Double)">
            <summary>
            Adds the specified number of minutes to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of whole and fractional minutes.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddMonths(System.DateTime,System.Int32)">
            <summary>
            Adds the specified number of months to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of months.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddSeconds(System.DateTime,System.Double)">
            <summary>
            Adds the specified number of seconds to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of whole and fractional seconds.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.AddYears(System.DateTime,System.Int32)">
            <summary>
            Adds the specified number of years to the original date.
            </summary>
            <param name="date">The original date.</param>
            <param name="value">A number of years.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.DateDiff(System.DateTime,System.DateTime)">
            <summary>
            Subtracts the specified date and time from the original date.
            </summary>
            <param name="date1">The original date.</param>
            <param name="date2">The date and time to subtract.</param>
            <returns>A TimeSpan interval between two dates.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.DateSerial(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the DateTime.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <returns>A new DateTime value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Day(System.DateTime)">
            <summary>
            Gets the day of the month.
            </summary>
            <param name="date">The date value.</param>
            <returns>The day component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.DayOfWeek(System.DateTime)">
            <summary>
            Gets the localized name of the day of the week.
            </summary>
            <param name="date">The date value.</param>
            <returns>The name of the day of the week.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.DayOfYear(System.DateTime)">
            <summary>
            Gets the day of the year.
            </summary>
            <param name="date">The date value.</param>
            <returns>The day of the year.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.DaysInMonth(System.Int32,System.Int32)">
            <summary>
            Returns the number of days in the specified month and year.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <returns>The number of days in month for the specified year.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Hour(System.DateTime)">
            <summary>
            Gets the hour component of the date.
            </summary>
            <param name="date">The date.</param>
            <returns>The hour component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Minute(System.DateTime)">
            <summary>
            Gets the minute component of the date.
            </summary>
            <param name="date">The date.</param>
            <returns>The minute component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Month(System.DateTime)">
            <summary>
            Gets the month component of the date.
            </summary>
            <param name="date">The date.</param>
            <returns>The month component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.MonthName(System.Int32)">
            <summary>
            Gets the localized month name.
            </summary>
            <param name="month">The month number.</param>
            <returns>The month name.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Second(System.DateTime)">
            <summary>
            Gets the seconds component of the date.
            </summary>
            <param name="date">The date.</param>
            <returns>The seconds component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.WeekOfYear(System.DateTime)">
            <summary>
            Gets the week of the year.
            </summary>
            <param name="date">The date value.</param>
            <returns>The week of the year.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Year(System.DateTime)">
            <summary>
            Gets the year component of the date.
            </summary>
            <param name="date">The date.</param>
            <returns>The year component.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Format(System.String,System.Object[])">
            <summary>
            Replaces the format item in a specified String with the text equivalent of the value of a 
            corresponding Object instance in a specified array. 
            </summary>
            <param name="format">A String containing zero or more format items.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
            <returns>A copy of format in which the format items have been replaced by the String equivalent of the corresponding instances of Object in args.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatCurrency(System.Object)">
            <summary>
            Returns a string formatted as a currency value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatCurrency(System.Object,System.Int32)">
            <summary>
            Returns a string formatted as a currency value with specified number of decimal digits.
            </summary>
            <param name="value">The value to format.</param>
            <param name="decimalDigits">Number of decimal digits.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatDateTime(System.DateTime)">
            <summary>
            Returns a string formatted as a date/time value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatDateTime(System.DateTime,System.String)">
            <summary>
            Returns a string formatted as a date/time value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="format">The format specifier, one of the 
            "Long Date", "Short Date", "Long Time", "Short Time" values.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatNumber(System.Object)">
            <summary>
            Returns a string formatted as a numeric value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatNumber(System.Object,System.Int32)">
            <summary>
            Returns a string formatted as a numeric value with specified number of decimal digits.
            </summary>
            <param name="value">The value to format.</param>
            <param name="decimalDigits">Number of decimal digits.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatPercent(System.Object)">
            <summary>
            Returns a string formatted as a percent value.
            </summary>
            <param name="value">The value to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.FormatPercent(System.Object,System.Int32)">
            <summary>
            Returns a string formatted as a percent value with specified number of decimal digits.
            </summary>
            <param name="value">The value to format.</param>
            <param name="decimalDigits">Number of decimal digits.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToRoman(System.Object)">
            <summary>
            Converts a numeric value to Roman string representation.
            </summary>
            <param name="value">Integer value in range 0-3998.</param>
            <returns>The string in Roman form.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWords(System.Object)">
            <summary>
            Converts a currency value to an english (US) string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWords(System.Object,System.String)">
            <summary>
            Converts a currency value to an english (US) string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWords(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to an english (US) string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEnGb(System.Object)">
            <summary>
            Converts a currency value to an english (GB) string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEnGb(System.Object,System.String)">
            <summary>
            Converts a currency value to an english (GB) string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEnGb(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to an english (GB) string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEs(System.Object)">
            <summary>
            Converts a currency value to a spanish string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEs(System.Object,System.String)">
            <summary>
            Converts a currency value to a spanish string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsEs(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a spanish string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsRu(System.Object)">
            <summary>
            Converts a currency value to a russian string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsRu(System.Object,System.String)">
            <summary>
            Converts a currency value to a russian string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsRu(System.Object,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Converts a numeric value to a russian string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="male">True if the name is of male gender.</param>
            <param name="one">The name in singular form, for example "страница".</param>
            <param name="two">The name in plural form, for example "страницы".</param>
            <param name="many">The name in plural form, for example "страниц".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsDe(System.Object)">
            <summary>
            Converts a currency value to a german string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsDe(System.Object,System.String)">
            <summary>
            Converts a currency value to a german string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsDe(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a german string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsFr(System.Object)">
            <summary>
            Converts a currency value to a french string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsFr(System.Object,System.String)">
            <summary>
            Converts a currency value to a french string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsFr(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a french string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsNl(System.Object)">
            <summary>
            Converts a currency value to a dutch string representation of that value.
            </summary>
            <param name="value">The currency value to convert.</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsNl(System.Object,System.String)">
            <summary>
            Converts a currency value to a dutch string representation of that value, 
            using the specified currency.
            </summary>
            <param name="value">The currency value to convert.</param>
            <param name="currencyName">The 3-digit ISO name of the currency, for example "EUR".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.ToWordsNl(System.Object,System.String,System.String)">
            <summary>
            Converts a numeric value to a dutch string representation of that value.
            </summary>
            <param name="value">The numeric value to convert.</param>
            <param name="one">The name in singular form, for example "page".</param>
            <param name="many">The name in plural form, for example "pages".</param>
            <returns>The string representation of the specified value.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Choose(System.Double,System.Object[])">
            <summary>
            Selects and returns a value from a list of arguments.
            </summary>
            <param name="index">A value between 1 and the number of elements passed in the "choice" argument.</param>
            <param name="choice">Object parameter array.</param>
            <returns>One of the values in the "choice" argument.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.IIf(System.Boolean,System.Object,System.Object)">
            <summary>
            Returns one of two objects, depending on the evaluation of an expression.
            </summary>
            <param name="expression">The expression you want to evaluate.</param>
            <param name="truePart">Returned if Expression evaluates to True.</param>
            <param name="falsePart">Returned if Expression evaluates to False.</param>
            <returns>Either truePart os falsePart.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.Switch(System.Object[])">
            <summary>
            Evaluates a list of expressions and returns a value corresponding to the first 
            expression in the list that is True.
            </summary>
            <param name="expressions">Parameter array consists of paired expressions and values.</param>
            <returns>The value corresponding to an expression which returns true.</returns>
        </member>
        <member name="M:FastReport.Functions.StdFunctions.IsNull(FastReport.Report,System.String)">
            <summary>
            Checks if the specified object is null.
            </summary>
            <param name="thisReport">The report instance.</param>
            <param name="name">Either a name of DB column, or a parameter name, or a total name to check.</param>
            <returns><b>true</b> if the object's value is null.</returns>
        </member>
        <member name="T:FastReport.GroupFooterBand">
            <summary>
            Represents a group footer band.
            </summary>
        </member>
        <member name="T:FastReport.SortOrder">
            <summary>
            Specifies a sort order.
            </summary>
            <remarks>
            This enumeration is used in the group header and in the "Matrix" object.
            </remarks>
        </member>
        <member name="F:FastReport.SortOrder.None">
            <summary>
            Specifies no sort (natural order).
            </summary>
        </member>
        <member name="F:FastReport.SortOrder.Ascending">
            <summary>
            Specifies an ascending sort order.
            </summary>
        </member>
        <member name="F:FastReport.SortOrder.Descending">
            <summary>
            Specifies a descending sort order.
            </summary>
        </member>
        <member name="T:FastReport.HighlightCondition">
            <summary>
            Represents a single highlight condition used by the <see cref="P:FastReport.TextObject.Highlight"/> property
            of the <see cref="T:FastReport.TextObject"/>.
            </summary>
        </member>
        <member name="P:FastReport.HighlightCondition.Expression">
            <summary>
            Gets or sets a highlight expression.
            </summary>
            <remarks>
            This property can contain any valid boolean expression. If value of this expression is <b>true</b>,
            the fill and font settings will be applied to the <b>TextObject</b>.
            </remarks>
        </member>
        <member name="P:FastReport.HighlightCondition.Visible">
            <summary>
            Gets or sets the visibility flag.
            </summary>
            <remarks>
            If this property is set to <b>false</b>, the Text object will be hidden if the
            condition is met.
            </remarks>
        </member>
        <member name="M:FastReport.HighlightCondition.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HighlightCondition.Assign(FastReport.StyleBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HighlightCondition.Clone">
            <summary>
            Creates exact copy of this condition.
            </summary>
            <returns>A copy of this condition.</returns>
        </member>
        <member name="M:FastReport.HighlightCondition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HighlightCondition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.HighlightCondition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.HighlightCondition"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.HyperlinkKind">
            <summary>
            Specifies the hyperlink type.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.URL">
            <summary>
            Specifies the hyperlink to external URL such as "http://www.fast-report.com", "mailto:"
            or any other system command.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.PageNumber">
            <summary>
            Specifies hyperlink to a given page number.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.Bookmark">
            <summary>
            Specifies hyperlink to a bookmark.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.DetailReport">
            <summary>
            Specifies hyperlink to external report. This report will be run when you follow the hyperlink.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.DetailPage">
            <summary>
            Specifies hyperlink to this report's page. The page will be run when you follow the hyperlink.
            </summary>
        </member>
        <member name="F:FastReport.HyperlinkKind.Custom">
            <summary>
            Specifies a custom hyperlink. No actions performed when you click it, you should handle it
            in the object's Click event handler.
            </summary>
        </member>
        <member name="T:FastReport.Hyperlink">
            <summary>
            This class contains a hyperlink settings.
            </summary>
        </member>
        <member name="P:FastReport.Hyperlink.Kind">
            <summary>
            Gets or sets the kind of hyperlink.
            </summary>
            <remarks>
            <para>Use the <b>Kind</b> property to define hyperlink's behavior. 
            The hyperlink may be used to navigate to the external url, the page number, 
            the bookmark defined by other report object, the external report, the other page of this report, 
            and custom hyperlink.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.Expression">
            <summary>
            Gets or sets the expression which value will be used for navigation.
            </summary>
            <remarks>
            <para>Normally you should set the <b>Expression</b> property to
            any valid expression that will be calculated when this object is about to print.
            The value of an expression will be used for navigation.</para>
            <para>If you want to navigate to some fixed data (URL or page number, for example),
            use the <see cref="P:FastReport.Hyperlink.Value"/> property instead.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.Value">
            <summary>
            Gets or sets a value that will be used for navigation.
            </summary>
            <remarks>
            Use this property to specify the fixed data (such as URL, page number etc). If you want to
            navigate to some dynamically calculated value, use the <see cref="P:FastReport.Hyperlink.Expression"/> property instead.
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.OpenLinkInNewTab">
            <summary>
            Gets or sets a value that indicate should be links open in new tab or not.
            </summary>
            <remarks>
            It works for HTML-export only!
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.DetailReportName">
            <summary>
            Gets or sets an external report file name.
            </summary>
            <remarks>
            <para>Use this property if <see cref="P:FastReport.Hyperlink.Kind"/> is set to <b>DetailReport</b>. </para>
            <para>When you follow the hyperlink, this report will be loaded and run. 
            You also may specify the report's parameter in the <see cref="P:FastReport.Hyperlink.ReportParameter"/> property.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.DetailPageName">
            <summary>
            Gets or sets the name of this report's page.
            </summary>
            <remarks>
            <para>Use this property if <see cref="P:FastReport.Hyperlink.Kind"/> is set to <b>DetailPage</b>. </para>
            <para>When you follow the hyperlink, the specified page will be executed. It may contain the
            detailed report. You also may specify the report's parameter in the 
            <see cref="P:FastReport.Hyperlink.ReportParameter"/> property.</para>
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.ReportParameter">
            <summary>
            Gets or sets a parameter's name that will be set to hyperlink's value.
            </summary>
            <remarks>
            Use this property if <see cref="P:FastReport.Hyperlink.Kind"/> is set to <b>DetailReport</b> or <b>DetailPage</b>.
            <para>If you want to pass the hyperlink's value to the report's parameter, specify the
            parameter name in this property. This parameter will be set to the hyperlink's value 
            before running a report. It may be used to display detailed information about clicked item.</para>
            <para>It is also possible to pass multiple values to several parameters. If hyperlink's value
            contains separators (the separator string can be set in the <see cref="P:FastReport.Hyperlink.ValuesSeparator"/>
            property), it will be splitted to several values. That values will be passed to nested parameters
            of the <b>ReportParameter</b> (you should create nested parameters by youself). For example, you have
            the <b>ReportParameter</b> called "SelectedValue" which has two nested parameters: the first one is 
            "Employee" and the second is "Category". The hyperlink's value is "Andrew Fuller;Beverages". 
            It will be splitted to two values: "Andrew Fuller" and "Beverages". The first nested parameter 
            of the <b>ReportParameter</b> that is "Employee" in our case will be set to "Andrew Fuller";
            the second nested parameter ("Category") will be set to "Beverages".</para>
            <para>Note: when you create a parameter in the detailed report, don't forget to set 
            its <b>DataType</b> property. It is used to convert string values to actual data type.
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.Hyperlink.ValuesSeparator">
            <summary>
            Gets or sets a string that will be used as a separator to pass several values 
            to the external report parameters.
            </summary>
        </member>
        <member name="M:FastReport.Hyperlink.Assign(FastReport.Hyperlink)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="T:FastReport.IFRSerializable">
            <summary>
            Provides the serialize/deserialize functionality.
            </summary>
        </member>
        <member name="M:FastReport.IFRSerializable.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the object.
            </summary>
            <param name="writer">Writer object.</param>
        </member>
        <member name="M:FastReport.IFRSerializable.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the object.
            </summary>
            <param name="reader">Reader object.</param>
        </member>
        <member name="T:FastReport.IParent">
            <summary>
            Implement this interface if your object can contain list of child objects.
            </summary>
        </member>
        <member name="M:FastReport.IParent.CanContain(FastReport.Base)">
            <summary>
            Gets a value indicating that this object can contain the specified child object.
            </summary>
            <param name="child">Child object.</param>
            <returns><b>true</b> if this object can contain the specified child object; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.IParent.GetChildObjects(FastReport.ObjectCollection)">
            <summary>
            Gets a list of child objects.
            </summary>
            <param name="list">List to fill with values.</param>
        </member>
        <member name="M:FastReport.IParent.AddChild(FastReport.Base)">
            <summary>
            Adds a child object to this object's childs.
            </summary>
            <param name="child">Object to add.</param>
        </member>
        <member name="M:FastReport.IParent.RemoveChild(FastReport.Base)">
            <summary>
            Removes a specified object from this object's childs.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:FastReport.IParent.GetChildOrder(FastReport.Base)">
            <summary>
            Returns z-order of the specified child object.
            </summary>
            <param name="child">Child object.</param>
            <returns>Z-order of the specified object.</returns>
            <remarks>
            This method must return the index of a specified child object in the internal child list.
            </remarks>
        </member>
        <member name="M:FastReport.IParent.SetChildOrder(FastReport.Base,System.Int32)">
            <summary>
            Sets the z-order of the specified object.
            </summary>
            <param name="child">Child object.</param>
            <param name="order">New Z-order.</param>
            <remarks>
            This method must place the specified child object at the specified position in the internal child list.
            </remarks>
        </member>
        <member name="M:FastReport.IParent.UpdateLayout(System.Single,System.Single)">
            <summary>
            Updates the children layout when the size of this object is changed by dx, dy values.
            </summary>
            <param name="dx">X delta.</param>
            <param name="dy">Y delta.</param>
            <remarks>
            This method must update positions/sizes of child objects whose <b>Dock</b> or <b>Anchor</b> properties
            are set to non-default values.
            </remarks>
        </member>
        <member name="T:FastReport.ObjectCollection">
            <summary>
            Holds the list of objects of <see cref="T:FastReport.Base"/> type.
            </summary>
        </member>
        <member name="P:FastReport.ObjectCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.ObjectCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ObjectCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.ObjectCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ObjectCollection"/> class with specified owner.
            </summary>
        </member>
        <member name="T:FastReport.OverlayBand">
            <summary>
            Represents an overlay band.
            </summary>
        </member>
        <member name="P:FastReport.OverlayBand.StartNewPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.OverlayBand.PrintOnBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.OverlayBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.OverlayBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.PageCollection">
            <summary>
            Holds the list of objects of <see cref="T:FastReport.PageBase"/> type.
            </summary>
        </member>
        <member name="P:FastReport.PageCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.PageCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PageCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.PageCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PageCollection"/> class with specified owner.
            </summary>
        </member>
        <member name="T:FastReport.PageColumns">
            <summary>
            This class contains the page columns settings. 
            It is used in the <see cref="P:FastReport.ReportPage.Columns"/> property.
            </summary>
        </member>
        <member name="P:FastReport.PageColumns.Count">
            <summary>
            Gets or sets the number of columns.
            </summary>
            <remarks>
            Set this property to 0 or 1 if you don't want to use columns.
            </remarks>
        </member>
        <member name="P:FastReport.PageColumns.Width">
            <summary>
            Gets or sets the column width.
            </summary>
        </member>
        <member name="P:FastReport.PageColumns.Positions">
            <summary>
            Gets or sets a list of column starting positions.
            </summary>
            <remarks>
            Each value represents a column starting position measured in the millimeters.
            </remarks>
        </member>
        <member name="M:FastReport.PageColumns.Assign(FastReport.PageColumns)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="T:FastReport.PageFooterBand">
            <summary>
            Represents a page footer band.
            </summary>
        </member>
        <member name="P:FastReport.PageFooterBand.StartNewPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.PageFooterBand.PrintOnBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.PageFooterBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PageFooterBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.PageHeaderBand">
            <summary>
            Represents a page header band.
            </summary>
        </member>
        <member name="P:FastReport.PageHeaderBand.StartNewPage">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="P:FastReport.PageHeaderBand.PrintOnBottom">
            <summary>
            This property is not relevant to this class.
            </summary>
        </member>
        <member name="M:FastReport.PageHeaderBand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.PageHeaderBand"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.ImageAlign">
            <summary>
            Specifies the alignment of a image in the border.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.None">
            <summary>
            Specifies that image is not aligned in the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Top_Left">
            <summary>
            Specifies that image is aligned in the top-left of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Top_Center">
            <summary>
            Specifies that image is aligned in the top-center of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Top_Right">
            <summary>
            Specifies that image is aligned in the top-right of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Center_Left">
            <summary>
            Specifies that image is aligned in the center-left of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Center_Center">
            <summary>
            Specifies that image is aligned in the center-center of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Center_Right">
            <summary>
            Specifies that image is aligned in the center-right of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Bottom_Left">
            <summary>
            Specifies that image is aligned in the center-left of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Bottom_Center">
            <summary>
            Specifies that image is aligned in the center-center of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.ImageAlign.Bottom_Right">
            <summary>
            Specifies that image is aligned in the center-right of the layout rectangle.
            </summary>
        </member>
        <member name="T:FastReport.Language">
            <summary>
            Specifies the language of the report's script.
            </summary>
        </member>
        <member name="F:FastReport.Language.CSharp">
            <summary>
            The C# language.
            </summary>
        </member>
        <member name="F:FastReport.Language.Vb">
            <summary>
            The VisualBasic.Net language.
            </summary>
        </member>
        <member name="T:FastReport.TextQuality">
            <summary>
            Specifies the quality of text rendering.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.Default">
            <summary>
            The default text quality, depends on system settings.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.Regular">
            <summary>
            The regular quality.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.ClearType">
            <summary>
            The "ClearType" quality.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.AntiAlias">
            <summary>
            The AntiAlias quality. This mode may be used to produce the WYSIWYG text.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.SingleBPP">
            <summary>
            The "SingleBitPerPixel" quality.
            </summary>
        </member>
        <member name="F:FastReport.TextQuality.SingleBPPGridFit">
            <summary>
            The "SingleBitPerPixelGridFit" quality.
            </summary>
        </member>
        <member name="T:FastReport.ReportOperation">
            <summary>
            Specifies the report operation.
            </summary>
        </member>
        <member name="F:FastReport.ReportOperation.None">
            <summary>
            Specifies no operation.
            </summary>
        </member>
        <member name="F:FastReport.ReportOperation.Running">
            <summary>
            The report is running.
            </summary>
        </member>
        <member name="F:FastReport.ReportOperation.Printing">
            <summary>
            The report is printing.
            </summary>
        </member>
        <member name="F:FastReport.ReportOperation.Exporting">
            <summary>
            The report is exporting.
            </summary>
        </member>
        <member name="T:FastReport.PageRange">
            <summary>
            Specifies the page range to print/export.
            </summary>
        </member>
        <member name="F:FastReport.PageRange.All">
            <summary>
            Print all pages.
            </summary>
        </member>
        <member name="F:FastReport.PageRange.Current">
            <summary>
            Print current page.
            </summary>
        </member>
        <member name="F:FastReport.PageRange.PageNumbers">
            <summary>
            Print pages specified in the <b>PageNumbers</b> property of the <b>PrintSettings</b>.
            </summary>
        </member>
        <member name="T:FastReport.ShiftMode">
            <summary>
            The automatic shift mode.
            </summary>
        </member>
        <member name="F:FastReport.ShiftMode.Never">
            <summary>
            Do not shift the object.
            </summary>
        </member>
        <member name="F:FastReport.ShiftMode.Always">
            <summary>
            Shift the object up or down if any object above it shrinks or grows.
            </summary>
        </member>
        <member name="F:FastReport.ShiftMode.WhenOverlapped">
            <summary>
            Shift the object up or down if any object above it shrinks or grows. 
            Objects must have overlapped x-coordinates.
            </summary>
        </member>
        <member name="T:FastReport.PrintOn">
            <summary>
            Specifies where to print an object.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.None">
            <summary>
            Do not print the object.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.FirstPage">
            <summary>
            Print the object on the first page. If this flag is not set, the object will not
            be printed on the first page.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.LastPage">
            <summary>
            Print the object on the last page. If this flag is not set, the object will not
            be printed on the last page. You should set the report's double pass option to make
            it work correctly.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.OddPages">
            <summary>
            Print the object on odd pages only.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.EvenPages">
            <summary>
            Print the object on even pages only.
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.RepeatedBand">
            <summary>
            Print the object on band with "Repeat on Every Page" flag when that band is repeated. 
            </summary>
        </member>
        <member name="F:FastReport.PrintOn.SinglePage">
            <summary>
            Print the object if the report has single page only.
            </summary>
        </member>
        <member name="T:FastReport.StylePriority">
            <summary>
            Specifies the style properties to use when style is applied.
            </summary>
        </member>
        <member name="F:FastReport.StylePriority.UseFill">
            <summary>
            Use the fill property of the style.
            </summary>
        </member>
        <member name="F:FastReport.StylePriority.UseAll">
            <summary>
            Use all style properties.
            </summary>
        </member>
        <member name="T:FastReport.ReportComponentCollection">
            <summary>
            Holds the list of objects of <see cref="T:FastReport.ReportComponentBase"/> type.
            </summary>
        </member>
        <member name="P:FastReport.ReportComponentCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.ReportComponentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportComponentCollection"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.ReportComponentCollection.#ctor(FastReport.Base)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportComponentCollection"/> class with specified owner.
            </summary>
        </member>
        <member name="T:FastReport.CustomLoadEventArgs">
            <summary>
            Provides data for the <see cref="E:FastReport.Report.LoadBaseReport"/> event.
            </summary>
        </member>
        <member name="P:FastReport.CustomLoadEventArgs.FileName">
            <summary>
            Gets a name of the file to load the report from.
            </summary>
        </member>
        <member name="P:FastReport.CustomLoadEventArgs.Report">
            <summary>
            The reference to a report.
            </summary>
        </member>
        <member name="M:FastReport.CustomLoadEventArgs.#ctor(System.String,FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CustomLoadEventArgs"/> class using the specified
            file name and the report.
            </summary>
            <param name="fileName">The name of the file to load the report from.</param>
            <param name="report">The report.</param>
        </member>
        <member name="T:FastReport.CustomCalcEventArgs">
            <summary>
            Provides data for the <see cref="E:FastReport.Report.CustomCalc"/> event.
            </summary>
        </member>
        <member name="P:FastReport.CustomCalcEventArgs.Expression">
            <summary>
            Gets an expression.
            </summary>
        </member>
        <member name="P:FastReport.CustomCalcEventArgs.CalculatedObject">
            <summary>
            Gets or sets a object.
            </summary>
        </member>
        <member name="P:FastReport.CustomCalcEventArgs.Report">
            <summary>
            The reference to a report.
            </summary>
        </member>
        <member name="M:FastReport.CustomCalcEventArgs.#ctor(System.String,System.Object,FastReport.Report)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.CustomLoadEventArgs"/> class using the specified
            file name and the report.
            </summary>
            <param name="expression">The text of expression.</param>
            <param name="Object">The name of the file to load the report from.</param>
            <param name="report">The report.</param>
        </member>
        <member name="T:FastReport.CustomLoadEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:FastReport.Report.LoadBaseReport"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.CustomCalcEventHandler">
            <summary>
            Represents the method that will handle the event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.ProgressEventArgs">
            <summary>
            Provides data for the Progress event.
            </summary>
        </member>
        <member name="P:FastReport.ProgressEventArgs.Message">
            <summary>
            Gets a progress message.
            </summary>
        </member>
        <member name="P:FastReport.ProgressEventArgs.Progress">
            <summary>
            Gets the current page number.
            </summary>
        </member>
        <member name="P:FastReport.ProgressEventArgs.Total">
            <summary>
            Gets the number of total pages.
            </summary>
        </member>
        <member name="M:FastReport.ProgressEventArgs.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ProgressEventArgs"/> class using the specified
            message, page number and total number of pages.
            </summary>
            <param name="message">The progress message.</param>
            <param name="progress">Current page number.</param>
            <param name="total">Number of total pages.</param>
        </member>
        <member name="T:FastReport.ProgressEventHandler">
            <summary>
            Represents the method that will handle the Progress event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.DatabaseLoginEventArgs">
            <summary>
            Provides data for the DatabaseLogin event.
            </summary>
        </member>
        <member name="P:FastReport.DatabaseLoginEventArgs.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
        </member>
        <member name="P:FastReport.DatabaseLoginEventArgs.UserName">
            <summary>
            Gets or sets an user name.
            </summary>
        </member>
        <member name="P:FastReport.DatabaseLoginEventArgs.Password">
            <summary>
            Gets or sets a password.
            </summary>
        </member>
        <member name="M:FastReport.DatabaseLoginEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.DatabaseLoginEventArgs"/> class using the specified
            connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="T:FastReport.DatabaseLoginEventHandler">
            <summary>
            Represents the method that will handle the DatabaseLogin event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.AfterDatabaseLoginEventArgs">
            <summary>
            Provides data for the AfterDatabaseLogin event.
            </summary>
        </member>
        <member name="P:FastReport.AfterDatabaseLoginEventArgs.Connection">
            <summary>
            Gets the <b>DbConnection</b> object.
            </summary>
        </member>
        <member name="M:FastReport.AfterDatabaseLoginEventArgs.#ctor(System.Data.Common.DbConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.AfterDatabaseLoginEventArgs"/> class using 
            the specified connection.
            </summary>
            <param name="connection">The connection object.</param>
        </member>
        <member name="T:FastReport.AfterDatabaseLoginEventHandler">
            <summary>
            Represents the method that will handle the AfterDatabaseLogin event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.FilterPropertiesEventArgs">
            <summary>
            Provides data for the FilterProperties event.
            </summary>
        </member>
        <member name="P:FastReport.FilterPropertiesEventArgs.Property">
            <summary>
            Gets the property descriptor.
            </summary>
        </member>
        <member name="P:FastReport.FilterPropertiesEventArgs.Skip">
            <summary>
            Gets or sets a value that indicates whether this property should be skipped.
            </summary>
        </member>
        <member name="T:FastReport.FilterPropertiesEventHandler">
            <summary>
            Represents the method that will handle the FilterProperties event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.GetPropertyKindEventArgs">
            <summary>
            Provides data for the GetPropertyKind event.
            </summary>
        </member>
        <member name="P:FastReport.GetPropertyKindEventArgs.PropertyName">
            <summary>
            Gets the property name.
            </summary>
        </member>
        <member name="P:FastReport.GetPropertyKindEventArgs.PropertyType">
            <summary>
            Gets the property type.
            </summary>
        </member>
        <member name="P:FastReport.GetPropertyKindEventArgs.PropertyKind">
            <summary>
            Gets or sets the kind of property.
            </summary>
        </member>
        <member name="T:FastReport.GetPropertyKindEventHandler">
            <summary>
            Represents the method that will handle the GetPropertyKind event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.GetTypeInstanceEventArgs">
            <summary>
            Provides data for the GetTypeInstance event.
            </summary>
        </member>
        <member name="P:FastReport.GetTypeInstanceEventArgs.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:FastReport.GetTypeInstanceEventArgs.Instance">
            <summary>
            Gets or sets the instance of type.
            </summary>
        </member>
        <member name="T:FastReport.GetTypeInstanceEventHandler">
            <summary>
            Represents the method that will handle the GetPropertyKind event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:FastReport.ExportParametersEventArgs">
            <summary>
            Event arguments for custom Export parameters
            </summary>
        </member>
        <member name="F:FastReport.ExportParametersEventArgs.Export">
            <summary>
            Used to set custom export parameters
            </summary>
        </member>
        <member name="T:FastReport.SaveMode">
            <summary>
            Specifies the Save Mode of designed report.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.All">
            <summary>
            The saving allowed to all.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.Original">
            <summary>
            The saving in original place.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.User">
            <summary>
            The saving allowed to current user.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.Role">
            <summary>
            The saving allowed to current role/group.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.Security">
            <summary>
            The saving allowed with other security permissions.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.Deny">
            <summary>
            The saving not allowed.
            </summary>
        </member>
        <member name="F:FastReport.SaveMode.Custom">
            <summary>
            Custom saving rules.
            </summary>
        </member>
        <member name="T:FastReport.ReportInfo">
            <summary>
            This class represents the report information such as name, author, description etc.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Name">
            <summary>
            Gets or sets the name of a report.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Author">
            <summary>
            Gets or sets the author of a report.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Version">
            <summary>
            Gets or sets the report version.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Description">
            <summary>
            Gets or sets the report description.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Picture">
            <summary>
            Gets or sets the picture associated with a report.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Created">
            <summary>
            Gets or sets the report creation date and time.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Modified">
            <summary>
            Gets or sets a value indicating that report was modified in the designer.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.SavePreviewPicture">
            <summary>
            Gets or sets a value that determines whether to fill the <see cref="P:FastReport.ReportInfo.Picture"/> property
            automatically.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.PreviewPictureRatio">
            <summary>
            Gets or sets the ratio that will be used when generating a preview picture.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.CreatorVersion">
            <summary>
            Gets the version of FastReport that was created this report file.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.Tag">
            <summary>
            Gets or sets the Tag string object for this report file.
            </summary>
        </member>
        <member name="P:FastReport.ReportInfo.SaveMode">
            <summary>
            Gets or sets SaveMode property.
            </summary>
        </member>
        <member name="M:FastReport.ReportInfo.Clear">
            <summary>
            Resets all properties to its default values.
            </summary>
        </member>
        <member name="M:FastReport.ReportInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.ReportInfo"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.DefaultPaperSize">
            <summary>
            Specifies the default paper size used when creating a new report.
            </summary>
        </member>
        <member name="F:FastReport.DefaultPaperSize.A4">
            <summary>
            A4 paper (210 x 297 mm).
            </summary>
        </member>
        <member name="F:FastReport.DefaultPaperSize.Letter">
            <summary>
            Letter paper (8.5 x 11 inches, 216 x 279 mm).
            </summary>
        </member>
        <member name="T:FastReport.ReportTitleBand">
            <summary>
            Represents a report title band.
            </summary>
        </member>
        <member name="T:FastReport.RichTextParser.RichDocument">
            <summary>
            Internal representation of RichText document
            </summary>
        </member>
        <member name="T:FastReport.RichTextParser.RTF_Run">
            <summary>
            This class represents a RTF run.
            </summary>
        </member>
        <member name="M:FastReport.RichTextParser.RTF_SequenceParser.InsertParagraph(FastReport.RichTextParser.RTF_Parser)">
            <summary>
            Insert paragraph into list of paragraphs
            </summary>
        </member>
        <member name="M:FastReport.RichTextParser.RTF_SequenceParser.InsertRow">
            <summary>
            Insert row into list of paragraphs
            </summary>
        </member>
        <member name="T:FastReport.RichTextParser.RTF_PageParser">
            <summary>
            This class represents a RTF properies.
            </summary>
        </member>
        <member name="T:FastReport.RichTextParser.RTF_DocumentParser">
            <summary>
            This class parses an entiry RTF document.
            </summary>
        </member>
        <member name="M:FastReport.RichTextParser.RTF_DocumentParser.Load(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichTextParser.RTF_DocumentParser.Load(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichTextParser.RTF_DocumentParser.Load(System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.RichTextParser.RTF_DocumentParser.GetRange(System.Int32,System.Int32)">
            <summary>
            Get RTF structure based on range of elements
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:FastReport.RichTextParser.RTF_DocumentParser.#ctor" -->
        <member name="T:FastReport.RichTextParser.RTF_DocumentSaver">
            <summary>
            Save RTF document to text stream
            </summary>
        </member>
        <member name="T:FastReport.RichTextParser.RTF_Header">
            <summary>
            This class represents a RTF document header.
            </summary>
            <remarks>
            Refer to RTF-1.7 spec for detail description
            </remarks>
        </member>
        <member name="M:FastReport.RichTextParser.RTF_Header.Parse(FastReport.RichTextParser.RTF_Parser)">
            <summary>
            Parser of RTF header.
            </summary>
            <remarks>
            Return false on finish of header
            </remarks>
        </member>
        <member name="T:FastReport.RichTextParser.RTF_Paragraph">
            <summary>
            This class represents a RTF text paragraph.
            </summary>
        </member>
        <member name="T:FastReport.RichTextParser.RTF_Parser">
            <summary>
            This class detect a RTF control sequences and text.
            </summary>
        </member>
        <member name="T:FastReport.RichTextParser.RTF_Column">
            <summary>
            This class represents a RTF column description.
            </summary>
            
        </member>
        <member name="M:FastReport.RichTextParser.RTF_Row.#ctor(FastReport.RichTextParser.RTF_SequenceParser)">
            <summary>
            Create RTF row
            </summary>
            <param name="parent_sequence"></param>
            
        </member>
        <member name="T:FastReport.RichTextParser.RTF_ToTextSaver">
            <summary>
            Save RTF document to plain text stream
            </summary>
        </member>
        <member name="T:FastReport.ShapeKind">
            <summary>
            Specifies a kind of the shape.
            </summary>
        </member>
        <member name="F:FastReport.ShapeKind.Rectangle">
            <summary>
            Specifies a rectangle shape.
            </summary>
        </member>
        <member name="F:FastReport.ShapeKind.RoundRectangle">
            <summary>
            Specifies a round rectangle shape.
            </summary>
        </member>
        <member name="F:FastReport.ShapeKind.Ellipse">
            <summary>
            Specifies an ellipse shape.
            </summary>
        </member>
        <member name="F:FastReport.ShapeKind.Triangle">
            <summary>
            Specifies a triangle shape.
            </summary>
        </member>
        <member name="F:FastReport.ShapeKind.Diamond">
            <summary>
            Specifies a diamond shape.
            </summary>
        </member>
        <member name="T:FastReport.Sort">
            <summary>
            Represents a sort condition used in the <see cref="P:FastReport.DataBand.Sort"/>.
            </summary>
        </member>
        <member name="P:FastReport.Sort.Expression">
            <summary>
            Gets or sets an expression used to sort data band rows.
            </summary>
            <remarks>
            This property can contain any valid expression.
            </remarks>
        </member>
        <member name="P:FastReport.Sort.Descending">
            <summary>
            Gets or sets a value indicating that sort must be performed in descending order.
            </summary>
        </member>
        <member name="M:FastReport.Sort.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the class.
            </summary>
            <param name="writer">Writer object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Sort.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the class.
            </summary>
            <param name="reader">Reader object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Sort.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Sort"/> class with default settings.
            </summary>
        </member>
        <member name="M:FastReport.Sort.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Sort"/> class with specified expression.
            </summary>
        </member>
        <member name="M:FastReport.Sort.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Sort"/> class with specified expression and sort order.
            </summary>
        </member>
        <member name="T:FastReport.SortCollection">
            <summary>
            Represents a collection of sort conditions used in the <see cref="P:FastReport.DataBand.Sort"/>.
            </summary>
        </member>
        <member name="P:FastReport.SortCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.SortCollection.AddRange(FastReport.Sort[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastReport.SortCollection.Add(FastReport.Sort)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.SortCollection.Insert(System.Int32,FastReport.Sort)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.SortCollection.Remove(FastReport.Sort)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.SortCollection.IndexOf(FastReport.Sort)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.SortCollection.Contains(FastReport.Sort)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.SortCollection.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SortCollection.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.SortCollection.Assign(FastReport.SortCollection)">
            <summary>
            Assigns values from another collection.
            </summary>
            <param name="source">Collection to assign from.</param>
        </member>
        <member name="T:FastReport.Style">
            <summary>
            Represents a style.
            </summary>
            <remarks>
            <para>
            Style class holds border, fill, text fill and font settings. It can be applied to any report object of
            <see cref="T:FastReport.ReportComponentBase"/> type.
            </para>
            <para>
            The <b>Report</b> object holds list of styles in its <see cref="P:FastReport.Report.Styles"/> property. Each style has
            unique name. To apply a style to the report component, set its <see cref="P:FastReport.ReportComponentBase.Style"/>
            property to the style name.
            </para>
            </remarks>
        </member>
        <member name="P:FastReport.Style.Name">
            <summary>
            Gets or sets a name of the style.
            </summary>
            <remarks>
            The name must be unique.
            </remarks>
        </member>
        <member name="M:FastReport.Style.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Style.Assign(FastReport.StyleBase)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.Style.Clone">
            <summary>
            Creates exact copy of this <b>Style</b>.
            </summary>
            <returns>Copy of this style.</returns>
        </member>
        <member name="M:FastReport.Style.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Style"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.StyleCollection">
            <summary>
            Represents a collection of styles used in the <see cref="P:FastReport.Report.Styles"/>.
            </summary>
        </member>
        <member name="P:FastReport.StyleCollection.Name">
            <summary>
            Gets or sets the name of the style.
            </summary>
        </member>
        <member name="P:FastReport.StyleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.AddRange(FastReport.Style[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastReport.StyleCollection.Add(FastReport.Style)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.Insert(System.Int32,FastReport.Style)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.StyleCollection.Remove(FastReport.Style)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.StyleCollection.IndexOf(FastReport.Style)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of a style with specified name.
            </summary>
            <param name="value">The name to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.Contains(FastReport.Style)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.Contains(System.String)">
            <summary>
            Determines whether a style with specified name is in the collection.
            </summary>
            <param name="value">The style name to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.Serialize(FastReport.Utils.FRWriter)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.StyleCollection.Deserialize(FastReport.Utils.FRReader)">
            <inheritdoc/>
        </member>
        <member name="M:FastReport.StyleCollection.Save(System.IO.Stream)">
            <summary>
            Saves the collection to a stream.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.StyleCollection.Save(System.String)">
            <summary>
            Saves the collection to a file.
            </summary>
            <param name="fileName">The name of the file.</param>
        </member>
        <member name="M:FastReport.StyleCollection.Load(System.IO.Stream)">
            <summary>
            Loads the collection from a stream.
            </summary>
            <param name="stream">Stream to load from.</param>
        </member>
        <member name="M:FastReport.StyleCollection.Load(System.String)">
            <summary>
            Loads the collection from a file.
            </summary>
            <param name="fileName">The name of the file.</param>
        </member>
        <member name="M:FastReport.StyleCollection.Clone">
            <summary>
            Creates exact copy of this collection.
            </summary>
            <returns>The copy of this collection.</returns>
        </member>
        <member name="M:FastReport.StyleCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.StyleCollection"/> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.StyleSheet">
            <summary>
            Represents a collection of the <see cref="T:FastReport.StyleCollection"/> objects.
            </summary>
        </member>
        <member name="P:FastReport.StyleSheet.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">Index of an element.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.AddRange(FastReport.StyleCollection[])">
            <summary>
            Adds the specified elements to the end of this collection.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastReport.StyleSheet.Add(FastReport.StyleCollection)">
            <summary>
            Adds an object to the end of this collection.
            </summary>
            <param name="value">Object to add.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.Insert(System.Int32,FastReport.StyleCollection)">
            <summary>
            Inserts an object into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:FastReport.StyleSheet.Remove(FastReport.StyleCollection)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">Object to remove.</param>
        </member>
        <member name="M:FastReport.StyleSheet.IndexOf(FastReport.StyleCollection)">
            <summary>
            Returns the zero-based index of the first occurrence of an object.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of a style collection with specified name.
            </summary>
            <param name="value">The style collection name to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; 
            otherwise, -1.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.Contains(FastReport.StyleCollection)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.Contains(System.String)">
            <summary>
            Determines whether a style collection with specified name is in the collection.
            </summary>
            <param name="value">The style collection name to locate in the collection.</param>
            <returns><b>true</b> if object is found in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.ToArray">
            <summary>
            Gets an array containing all collection items.
            </summary>
            <returns>An array containing all collection items.</returns>
        </member>
        <member name="M:FastReport.StyleSheet.Serialize(FastReport.Utils.FRWriter)">
            <summary>
            Serializes the collection.
            </summary>
            <param name="writer">Writer object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.StyleSheet.Deserialize(FastReport.Utils.FRReader)">
            <summary>
            Deserializes the collection.
            </summary>
            <param name="reader">Reader object.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.StyleSheet.Save(System.IO.Stream)">
            <summary>
            Saves the collection to a stream.
            </summary>
            <param name="stream">Stream to save to.</param>
        </member>
        <member name="M:FastReport.StyleSheet.Save(System.String)">
            <summary>
            Saves the collection to a file with specified name.
            </summary>
            <param name="fileName">File name to save to.</param>
        </member>
        <member name="M:FastReport.StyleSheet.Load(System.IO.Stream)">
            <summary>
            Loads the collection from a stream.
            </summary>
            <param name="stream">Stream to load from.</param>
        </member>
        <member name="M:FastReport.StyleSheet.Load(System.String)">
            <summary>
            Loads the collection from a file with specified name.
            </summary>
            <param name="fileName">Name of a file.</param>
        </member>
        <member name="T:FastReport.HorzAlign">
            <summary>
            Specifies the horizontal alignment of a text in the TextObject object.
            </summary>
        </member>
        <member name="F:FastReport.HorzAlign.Left">
            <summary>
            Specifies that text is aligned in the left of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.HorzAlign.Center">
            <summary>
            Specifies that text is aligned in the center of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.HorzAlign.Right">
            <summary>
            Specifies that text is aligned in the right of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.HorzAlign.Justify">
            <summary>
            Specifies that text is aligned in the left and right sides of the layout rectangle.
            </summary>
        </member>
        <member name="T:FastReport.VertAlign">
            <summary>
            Specifies the vertical alignment of a text in the TextObject object.
            </summary>
        </member>
        <member name="F:FastReport.VertAlign.Top">
            <summary>
            Specifies that text is aligned in the top of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.VertAlign.Center">
            <summary>
            Specifies that text is aligned in the center of the layout rectangle.
            </summary>
        </member>
        <member name="F:FastReport.VertAlign.Bottom">
            <summary>
            Specifies that text is aligned in the bottom of the layout rectangle.
            </summary>
        </member>
        <member name="T:FastReport.TextRenderType">
            <summary>
            The type of text renderer
            </summary>
        </member>
        <member name="F:FastReport.TextRenderType.Default">
            <summary>
            The default render
            </summary>
        </member>
        <member name="F:FastReport.TextRenderType.HtmlTags">
            <summary>
            Render with some html tags and stable logic
            </summary>
        </member>
        <member name="F:FastReport.TextRenderType.HtmlParagraph">
            <summary>
            Render with img tags, span etc. Experimental and unstable logic
            </summary>
        </member>
        <member name="T:FastReport.ParagraphFormat">
            <summary>
            The format of paragraph
            </summary>
        </member>
        <member name="P:FastReport.ParagraphFormat.FirstLineIndent">
            <summary>
            The first line on each paragraph, not effect if value less then  0
            </summary>
        </member>
        <member name="P:FastReport.ParagraphFormat.LineSpacing">
            <summary>
            The distance between lines, not effect if value less then 0
            </summary>
        </member>
        <member name="P:FastReport.ParagraphFormat.LineSpacingType">
            <summary>
            The spacing type for distance between line calculation
            </summary>
        </member>
        <member name="P:FastReport.ParagraphFormat.LineSpacingMultiple">
            <summary>
            The value for a multiplication line height for adding spacing
            </summary>
        </member>
        <member name="P:FastReport.ParagraphFormat.SkipFirstLineIndent">
            <summary>
            Skip the line indent in the first paragraph, for broken paragraphs
            </summary>
        </member>
        <member name="M:FastReport.ParagraphFormat.MultipleScale(System.Single)">
            <summary>
            clone with new scale;
            </summary>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="T:FastReport.LineSpacingType">
            <summary>
            The spacing type between lines
            </summary>
        </member>
        <member name="F:FastReport.LineSpacingType.Single">
            <summary>
            Single spacing, not effect from LineSpacing
            </summary>
        </member>
        <member name="F:FastReport.LineSpacingType.AtLeast">
            <summary>
            Minimal spacing in exactly size
            </summary>
        </member>
        <member name="F:FastReport.LineSpacingType.Exactly">
            <summary>
            The specific distance between the lines, for some exports, does not work if the distance value is too small.
            </summary>
        </member>
        <member name="F:FastReport.LineSpacingType.Multiple">
            <summary>
            The calculated distance between lines, for some exports, does not work if the distance value is too small.
            </summary>
        </member>
        <member name="T:FastReport.AutoShrinkMode">
            <summary>
            Specifies the behavior of the <b>AutoShrink</b> feature of <b>TextObject</b>.
            </summary>
        </member>
        <member name="F:FastReport.AutoShrinkMode.None">
            <summary>
            AutoShrink is disabled.
            </summary>
        </member>
        <member name="F:FastReport.AutoShrinkMode.FontSize">
            <summary>
            AutoShrink decreases the <b>Font.Size</b> property of the <b>TextObject</b>.
            </summary>
        </member>
        <member name="F:FastReport.AutoShrinkMode.FontWidth">
            <summary>
            AutoShrink decreases the <b>FontWidthRatio</b> property of the <b>TextObject</b>.
            </summary>
        </member>
        <member name="T:FastReport.Duplicates">
            <summary>
            Specifies how to display the duplicate values.
            </summary>
        </member>
        <member name="F:FastReport.Duplicates.Show">
            <summary>
            The <b>TextObject</b> can show duplicate values.
            </summary>
        </member>
        <member name="F:FastReport.Duplicates.Hide">
            <summary>
            The <b>TextObject</b> with duplicate value will be hidden.
            </summary>
        </member>
        <member name="F:FastReport.Duplicates.Clear">
            <summary>
            The <b>TextObject</b> with duplicate value will be shown but with no text.
            </summary>
        </member>
        <member name="F:FastReport.Duplicates.Merge">
            <summary>
            Several <b>TextObject</b> objects with the same value will be merged into one <b>TextObject</b> object.
            </summary>
        </member>
        <member name="T:FastReport.ProcessAt">
            <summary>
            Specifies how the report engine processes the text objects.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.Default">
            <summary>
            Specifies the default process mode. The text object is processed just-in-time.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.ReportFinished">
            <summary>
            Specifies that the text object must be processed when the entire report is finished. This mode
            can be used to print grand total value (which is normally calculated at the end of report) in the
            report title band.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.ReportPageFinished">
            <summary>
            Specifies that the text object must be processed when the entire report page is finished. This mode
            can be used if the report template consists of several report pages.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.PageFinished">
            <summary>
            Specifies that the text object must be processed when any report page is finished. This mode
            can be used to print the page total (which is normally calculated at the page footer) in the
            page header band.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.ColumnFinished">
            <summary>
            Specifies that the text object must be processed when the column is finished. This mode
            can be used to print the column total (which is normally calculated at the column footer) in the
            column header band.
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.DataFinished">
            <summary>
            Specifies that the text object must be processed when the data block is finished. This mode can be
            used to print a total value in the data header (which is normally available
            in the data footer only).
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.GroupFinished">
            <summary>
            Specifies that the text object must be processed when the group is finished. This mode can be
            used to print a total value in the group header (which is normally available
            in the group footer only).
            </summary>
        </member>
        <member name="F:FastReport.ProcessAt.Custom">
            <summary>
            Specifies that the text object is processed manually when you call the <b>Engine.ProcessObject</b> 
            method in the report script.
            </summary>
        </member>
        <member name="T:FastReport.TextOutline">
            <summary>
            Represents text outline.
            </summary>
        </member>
        <member name="P:FastReport.TextOutline.Enabled">
            <summary>
            Gets or sets a value indicating that outline is enabled.
            </summary>
        </member>
        <member name="P:FastReport.TextOutline.DrawBehind">
            <summary>
            Enable or disable draw the outline behind of text.
            </summary>
        </member>
        <member name="P:FastReport.TextOutline.Color">
            <summary>
            Gets or sets the outline color.
            </summary>
        </member>
        <member name="P:FastReport.TextOutline.Width">
            <summary>
            Gets or sets the outline width.
            </summary>
        </member>
        <member name="P:FastReport.TextOutline.Style">
            <summary>
            Specifies the style of an outline.
            </summary>
        </member>
        <member name="M:FastReport.TextOutline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.TextOutline"/> class.
            </summary>
        </member>
        <member name="M:FastReport.TextOutline.#ctor(System.Boolean,System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.TextOutline"/> class with specified parameters.
            </summary>
            <param name="enabled">True if outline enabled.</param>
            <param name="color">Outline color.</param>
            <param name="width">Outline width.</param>
            <param name="style">Outline style.</param>
            <param name="drawbehind">True if outline should be drawn behind text.</param>
        </member>
        <member name="M:FastReport.TextOutline.Assign(FastReport.TextOutline)">
            <summary>
            Copies the content of another TextOutline.
            </summary>
            <param name="src">The TextOutline instance to copy the contents from.</param>
        </member>
        <member name="M:FastReport.TextOutline.Clone">
            <summary>
            Creates the exact copy of this outline.
            </summary>
            <returns>Copy of this outline.</returns>
        </member>
        <member name="M:FastReport.TextOutline.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.TextOutline)">
            <summary>
            Serializes the TextOutline.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">TextOutline property name.</param>
            <param name="diff">Another TextOutline to compare with.</param>
        </member>
        <member name="T:FastReport.GraphicCache">
            <summary>
            Represents a cache of graphics objects such as pens, brushes, fonts and text formats.
            </summary>
            <remarks>
            Cache holds all used graphics objects. There is no need to dispose objects returned
            by GetXXX calls.
            </remarks>
            <example>This example demonstrates how to use graphic cache.
            <code>
            public void Draw(FRPaintEventArgs e)
            {
              Brush brush = e.Cache.GetBrush(BackColor);
              Pen pen = e.Cache.GetPen(BorderColor, 1, BorderStyle);
              e.Graphics.FillRectangle(brush, Bounds);
              e.Graphics.DrawRectangle(pen, Bounds);
            }
            </code>
            </example>
        </member>
        <member name="M:FastReport.GraphicCache.GetPen(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Gets a pen with specified settings.
            </summary>
            <param name="color">Color of a pen.</param>
            <param name="width">Width of a pen.</param>
            <param name="style">Dash style of a pen.</param>
            <returns>The <b>Pen</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.GetPen(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle,System.Drawing.Drawing2D.LineJoin)">
            <summary>
            Gets a pen with specified settings.
            </summary>
            <param name="color">Color of a pen.</param>
            <param name="width">Width of a pen.</param>
            <param name="style">Dash style of a pen.</param>
            <param name="lineJoin">Line join of a pen.</param>
            <returns>The <b>Pen</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.GetBrush(System.Drawing.Color)">
            <summary>
            Gets a brush with specified color.
            </summary>
            <param name="color">Color of a brush.</param>
            <returns>The <b>SolidBrush</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.GetFont(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            Gets a font with specified settings.
            </summary>
            <param name="name">Name of a font.</param>
            <param name="size">Size of a font.</param>
            <param name="style">Style of a font.</param>
            <returns>The <b>Font</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.GetStringFormat(System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Drawing.StringTrimming,System.Drawing.StringFormatFlags,System.Single,System.Single)">
            <summary>
            Gets a string format with specified settings.
            </summary>
            <param name="align">Text alignment information on the vertical plane.</param>
            <param name="lineAlign">Line alignment on the horizontal plane.</param>
            <param name="trimming"><b>StringTrimming</b> enumeration.</param>
            <param name="flags"><b>StringFormatFlags</b> enumeration that contains formatting information.</param>
            <param name="firstTab">The number of spaces between the beginning of a line of text and the first tab stop.</param>
            <param name="tabWidth">Distance between tab stops.</param>
            <returns>The <b>StringFormat</b> object.</returns>
        </member>
        <member name="M:FastReport.GraphicCache.Dispose">
            <summary>
            Disposes resources used by this object.
            </summary>
        </member>
        <member name="M:FastReport.GraphicCache.#ctor">
            <summary>
            Initializes a new instance of the <b>GraphicCache</b> class with default settings.
            </summary>
        </member>
        <member name="T:FastReport.Variant">
            <summary>
            A strongly typed object that readily casts an intrinsic
            object to the other intrinsic types when possible.
            </summary>
            <remarks>
            <para>The Variant class is an intrinsic object container structure
            inspired by Visual Basic 6.0's Variant. The key features
            of a Variant class include the ability to perform typecasts and
            arithmetic between types that are not normally considered compatible.
            For example, if a Variant class contains a string describing a
            number, such as "1.1", then floating point arithmetic can be
            performed on it.</para>
            <para>Variants are normally considered dangerous because they
            strip away the effectiveness of type safety, which is the
            reason why the Visual Basic 6.0 Variant was left out of
            Visual Basic .NET. However, this implementation restores the
            Variant structure, both as a proof of concept and as a
            restoration of the utility and positive merits of the Variant
            where it can be used responsibly.</para>
            </remarks>
        </member>
        <member name="M:FastReport.Variant.#ctor(System.Object)">
            <summary>
            Creates a strongly typed object that readily casts a primitive
            object to the other primitive types when possible.
            </summary>
        </member>
        <member name="P:FastReport.Variant.Value">
            <summary>
            The actual value being stored in its original <see cref="T:System.Type"/>,
            returned as an <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="P:FastReport.Variant.Type">
            <summary>
            The <see cref="T:System.Type"/> of the <see cref="P:FastReport.Variant.Value"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Variant.GetTypeCode">
            <summary>
            Returns the <see cref="T:System.TypeCode"/> for this instance.
            </summary>
            <returns>The enumerated constant that is the <see cref="T:System.TypeCode"/>
            of the class or value type that implements this interface.</returns>
        </member>
        <member name="P:FastReport.Variant.String">
            <summary>
            Returns the string equivalent of the <see cref="P:FastReport.Variant.Value"/> property.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToType(System.Type)">
            <summary>
            Attempts to convert or typecast to the specified type.
            </summary>
            <param name="type">The type to convert or cast to.</param>
            <returns>The object after typecasting.</returns>
        </member>
        <member name="M:FastReport.Variant.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Attempts to convert or typecast to the specified type.
            </summary>
            <param name="type">The type to convert or cast to.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider"/>
            interface implementation that supplies culture-specific formatting information.</param>
            <returns>The object after typecasting.</returns>
        </member>
        <member name="P:FastReport.Variant.ImplementsIConvertible">
            <summary>
            Returns true if the <see cref="P:FastReport.Variant.Value"/> property implements <see cref="T:System.IConvertible"/>
            </summary>
        </member>
        <member name="P:FastReport.Variant.IsNumeric">
            <summary>
            Returns true if the <see cref="P:FastReport.Variant.Value"/> property
            is a numeric intrinsic value.
            </summary>
        </member>
        <member name="P:FastReport.Variant.IsNumberable">
            <summary>
            Returns true if the <see cref="P:FastReport.Variant.Value"/> property
            is a numeric intrinsic value or else can be parsed into
            a numeric intrinsic value.
            </summary>
        </member>
        <member name="P:FastReport.Variant.IsDate">
            <summary>
            Returns true if the value is a date or can be parsed into a date.
            </summary>
        </member>
        <member name="P:FastReport.Variant.IsTimeSpan">
            <summary>
            Returns true if the value is a TimeSpan.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToBoolean">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Boolean"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent <see cref="T:System.Boolean"/> value.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToBoolean(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Boolean"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent <see cref="T:System.Boolean"/> value using the specified culture-specific
            formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToByte">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Byte"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 8-bit unsigned integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToByte(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Byte"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 8-bit unsigned integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToInt16">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Int16"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 16-bit signed integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToInt16(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Boolean"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent 16-bit signed integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToInt32">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Int32"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 32-bit signed integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToInt32(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Int32"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 32-bit signed integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToInt64">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Int64"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 64-bit signed integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToInt64(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Int64"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 64-bit signed integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToDouble">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Double"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent double-precision floating-point number.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToDouble(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Double"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent double-precision floating-point number using the
            specified culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToSingle">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Single"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent single-precision floating-point number.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToSingle(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Single"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent single-precision floating-point number using the
            specified culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToDecimal">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Decimal"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent Decimal number.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToDecimal(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Decimal"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent Decimal number using the specified culture-specific
            formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToSByte">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.SByte"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 8-bit signed integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToSByte(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.SByte"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 8-bit signed integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToUInt16">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt16"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 16-bit unsigned integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToUInt16(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt16"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 16-bit unsigned integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToUInt32">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt32"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 32-bit unsigned integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToUInt32(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt32"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 32-bit unsigned integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToUInt64">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt64"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 64-bit unsigned integer.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToUInt64(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.UInt64"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent 64-bit unsigned integer using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToDateTime">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.DateTime"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent DateTime.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToDateTime(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.DateTime"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent DateTime using the specified culture-specific
            formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToTimeSpan">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.TimeSpan"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent TimeSpan.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToTimeSpan(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.TimeSpan"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent TimeSpan using the specified culture-specific
            formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToDateTimeOffset">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.DateTimeOffset"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent DateTimeOffset.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToDateTimeOffset(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.DateTimeOffset"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance to
            an equivalent DateTimeOffset using the specified culture-specific
            formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.ToChar">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Char"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent Unicode character.
            </summary>
        </member>
        <member name="M:FastReport.Variant.ToChar(System.IFormatProvider)">
            <summary>
            If <see cref="P:FastReport.Variant.Value" /> is a <see cref="T:System.Char"/>, returns
            as-is. Otherwise, attempts to convert the value of this instance
            to an equivalent Unicode character using the specified
            culture-specific formatting information.
            </summary>
            <param name="formatProvider">The culture-specific formatting information.</param>
        </member>
        <member name="M:FastReport.Variant.op_Addition(FastReport.Variant,System.Object)">
            <summary>
            Addition operator.
            </summary>
            <remarks>
            If the value on the right is a <see cref="T:System.String"/>
            or a <see cref="T:System.Char"/>,
            the Variant is converted to a string and appended.
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_Subtraction(FastReport.Variant,System.Object)">
            <summary>
            Subtraction operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_UnaryNegation(FastReport.Variant)">
            <summary>
            Unary minus operator.
            </summary>
        </member>
        <member name="M:FastReport.Variant.op_GreaterThan(FastReport.Variant,System.Object)">
            <summary>
            Greater than operator.
            </summary>
        </member>
        <member name="M:FastReport.Variant.op_GreaterThanOrEqual(FastReport.Variant,System.Object)">
            <summary>
            Greater than or equal operator.
            </summary>
        </member>
        <member name="M:FastReport.Variant.op_LessThan(FastReport.Variant,System.Object)">
            <summary>
            Less than operator.
            </summary>
        </member>
        <member name="M:FastReport.Variant.op_LessThanOrEqual(FastReport.Variant,System.Object)">
            <summary>
            Less than or equal operator.
            </summary>
        </member>
        <member name="M:FastReport.Variant.op_Multiply(FastReport.Variant,System.Object)">
            <summary>
            Multiplication operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_Division(FastReport.Variant,System.Object)">
            <summary>
            Division operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_Modulus(FastReport.Variant,System.Object)">
            <summary>
            Modulus operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_BitwiseAnd(FastReport.Variant,System.Object)">
            <summary>
            Bitwise And operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_BitwiseOr(FastReport.Variant,System.Object)">
            <summary>
            Bitwise Or operator.
            </summary>
            <remarks>
            If the value on the right or the Variant
            is a <see cref="T:System.DateTime"/>, arithmetic
            is performed on the <see cref="P:System.DateTime.Ticks"/> property and the
            resulting value is set to the DateTime type.
            Otherwise, if the value on the right is a number, both
            the Variant and the value on the right are
            converted to a <see cref="T:System.Double"/>, the arithmetic
            is performed, and the resulting value is converted back to the
            original type that the Variant previously represented.
            If the type that the Variant previously represented
            cannot contain the resulting value--such as if the type is a
            <see cref="T:System.UInt32"/> and the value is <c>-12</c>--then the
            type will be converted to a type that can contain
            the value, such as <see cref="T:System.Int32"/>.
            </remarks>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>A new <see cref="T:FastReport.Variant"/> containing the resulting value.</returns>
        </member>
        <member name="M:FastReport.Variant.op_Inequality(FastReport.Variant,System.Object)">
            <summary>
            Inequality operator.
            </summary>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns>
            The opposite of ==
            </returns>
        </member>
        <member name="M:FastReport.Variant.op_Equality(FastReport.Variant,System.Object)">
            <summary>
            <para>Equality operator.</para>
            <para>First attempts to compare the left value after
            temporarily converting it to the type of the right value.
            If the conversion cannot occur, such as if the value is not an
            intrinsic value type, the comparison occurs at the <see cref="T:System.Object"/>
            level using <b>Object.Equals</b>.</para>
            </summary>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.op_Equality(FastReport.Variant,System.String)">
            <summary>
            <para>Equality operator.</para>
            </summary>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.op_Inequality(FastReport.Variant,System.String)">
            <summary>
            <para>Equality operator.</para>
            </summary>
            <param name="subjectVariant"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.ToString">
            <summary>
            Returns <see cref="P:FastReport.Variant.String"/> property unless the value on the right
            is null. If the value on the right is null, returns "".
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.ToString(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="P:FastReport.Variant.String"/>
            using the specified culture-specific formatting information.
            </summary>
            <param name="formatProvider"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.GetHashCode">
            <summary>
            See <see cref="M:System.Object.GetHashCode"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.Equals(System.Object)">
            <summary>
            See <see cref="M:System.Object.Equals(System.Object)"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FastReport.Variant.CBln(System.Object)">
            <summary>
            Converts an object to a boolean.
            For any type, if null, returns false.
            For Boolean: true/false.
            For String: "", "false", "0", etc. == false;
              "1", "true", etc. == true, else true.
            For numeric intrinsics: 0 == false, else true.
            For any other non-null object, returns true.
            </summary>
            <param name="bln">The string to be converted</param>
            <returns>The boolean value of this string.</returns>
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.String">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.String)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Char">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Char)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Byte">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Byte)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.SByte">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.SByte)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Int16">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Int16)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.UInt16">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.UInt16)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Int32">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Int32)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.UInt32">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.UInt32)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Int64">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Int64)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.UInt64">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.UInt64)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Single">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Single)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Double">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Double)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Decimal">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Decimal)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.Boolean">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.Boolean)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.DateTime">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.DateTime)~FastReport.Variant">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(FastReport.Variant)~System.TimeSpan">
            
        </member>
        <member name="M:FastReport.Variant.op_Implicit(System.TimeSpan)~FastReport.Variant">
            
        </member>
        <member name="T:FastReport.WatermarkImageSize">
            <summary>
            Specifies the watermark image size mode.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkImageSize.Normal">
            <summary>
            Specifies the normal (original) size.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkImageSize.Center">
            <summary>
            Specifies the centered image.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkImageSize.Stretch">
            <summary>
            Specifies the stretched image.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkImageSize.Zoom">
            <summary>
            Specifies the stretched image that keeps its aspect ratio.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkImageSize.Tile">
            <summary>
            Specifies the tiled image.
            </summary>
        </member>
        <member name="T:FastReport.WatermarkTextRotation">
            <summary>
            Specifies the watermark text rotation.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkTextRotation.Horizontal">
            <summary>
            Specifies a horizontal text.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkTextRotation.Vertical">
            <summary>
            Specifies a vertical text.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkTextRotation.ForwardDiagonal">
            <summary>
            Specifies a diagonal text.
            </summary>
        </member>
        <member name="F:FastReport.WatermarkTextRotation.BackwardDiagonal">
            <summary>
            Specifies a backward diagonal text.
            </summary>
        </member>
        <member name="T:FastReport.Watermark">
            <summary>
            Represents the report page watermark.
            </summary>
            <remarks>
            Watermark can draw text and/or image behind the page objects on in front of them. To enable
            watermark, set its <b>Enabled</b> property to <b>true</b>.
            </remarks>
        </member>
        <member name="P:FastReport.Watermark.Enabled">
            <summary>
            Gets or sets avalue indicating that watermark is enabled.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.Image">
            <summary>
            Gets or sets the watermark image.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.ImageSize">
            <summary>
            Gets or sets the watermark image size mode.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.ImageTransparency">
            <summary>
            Gets or sets an image transparency.
            </summary>
            <remarks>
            Valid values are 0..1. 1 means totally transparent image.
            </remarks>
        </member>
        <member name="P:FastReport.Watermark.Text">
            <summary>
            Gets or sets the watermark text.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.Font">
            <summary>
            Gets or sets a font of the watermark text.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.TextFill">
            <summary>
            Gets or sets a text fill.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.TextRotation">
            <summary>
            Gets or sets a text rotation.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.ShowTextOnTop">
            <summary>
            Gets or sets a value indicates that the text should be displayed on top of all page objects.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.ShowImageOnTop">
            <summary>
            Gets or sets a value indicates that the image should be displayed on top of all page objects.
            </summary>
        </member>
        <member name="P:FastReport.Watermark.PictureObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:FastReport.Watermark.DrawImage(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF,FastReport.Report,System.Boolean)">
            <summary>
            Draws watermark image.
            </summary>
            <param name="e"></param>
            <param name="displayRect"></param>
            <param name="report"></param>
            <param name="isPrinting"></param>
        </member>
        <member name="M:FastReport.Watermark.DrawText(FastReport.Utils.FRPaintEventArgs,System.Drawing.RectangleF,FastReport.Report,System.Boolean)">
            <summary>
            Draws watermark text.
            </summary>
            <param name="e"></param>
            <param name="displayRect"></param>
            <param name="report"></param>
            <param name="isPrinting"></param>
        </member>
        <member name="M:FastReport.Watermark.Serialize(FastReport.Utils.FRWriter,System.String,FastReport.Watermark)">
            <summary>
            Serializes the watermark.
            </summary>
            <param name="writer">Writer object.</param>
            <param name="prefix">The watermark property name.</param>
            <param name="c">Another Watermark object to compare with.</param>
            <remarks>
            This method is for internal use only.
            </remarks>
        </member>
        <member name="M:FastReport.Watermark.Dispose">
            <summary>
            Disposes resources used by the watermark.
            </summary>
        </member>
        <member name="M:FastReport.Watermark.Assign(FastReport.Watermark)">
            <summary>
            Assigns values from another source.
            </summary>
            <param name="source">Source to assign from.</param>
        </member>
        <member name="M:FastReport.Watermark.Clone">
            <summary>
            Creates exact copy of this <b>Watermark</b>.
            </summary>
            <returns>Copy of this watermark.</returns>
        </member>
        <member name="M:FastReport.Watermark.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FastReport.Watermark"/> class with default settings.
            </summary>
        </member>
        <member name="T:Svg.SvgCircle">
            <summary>
            An SVG element to render circles to the document.
            </summary>
        </member>
        <member name="P:Svg.SvgCircle.Center">
            <summary>
            Gets the center point of the circle.
            </summary>
            <value>The center.</value>
        </member>
        <member name="M:Svg.SvgCircle.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> representing this element.
            </summary>
        </member>
        <member name="M:Svg.SvgCircle.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the circle to the specified <see cref="!:Graphics"/> object.
            </summary>
            <param name="graphics">The graphics object.</param>
        </member>
        <member name="M:Svg.SvgCircle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgCircle"/> class.
            </summary>
        </member>
        <member name="T:Svg.SvgEllipse">
            <summary>
            Represents and SVG ellipse element.
            </summary>
        </member>
        <member name="M:Svg.SvgEllipse.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="M:Svg.SvgEllipse.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="!:Graphics"/> object.
            </summary>
            <param name="graphics">The <see cref="!:Graphics"/> object to render to.</param>
        </member>
        <member name="M:Svg.SvgEllipse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgEllipse"/> class.
            </summary>
        </member>
        <member name="T:Svg.SvgImage">
            <summary>
            Represents and SVG image
            </summary>
        </member>
        <member name="M:Svg.SvgImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgImage"/> class.
            </summary>
        </member>
        <member name="P:Svg.SvgImage.Location">
            <summary>
            Gets an <see cref="T:Svg.SvgPoint"/> representing the top left point of the rectangle.
            </summary>
        </member>
        <member name="P:Svg.SvgImage.AspectRatio">
            <summary>
            Gets or sets the aspect of the viewport.
            </summary>
            <value></value>
        </member>
        <member name="P:Svg.SvgImage.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:Svg.SvgImage.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
        </member>
        <member name="M:Svg.SvgImage.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:System.Drawing.Graphics"/> object.
            </summary>
        </member>
        <member name="T:Svg.SvgLine">
            <summary>
            Represents and SVG line element.
            </summary>
        </member>
        <member name="P:Svg.SvgLine.MarkerEnd">
            <summary>
            Gets or sets the marker (end cap) of the path.
            </summary>
        </member>
        <member name="P:Svg.SvgLine.MarkerMid">
            <summary>
            Gets or sets the marker (start cap) of the path.
            </summary>
        </member>
        <member name="P:Svg.SvgLine.MarkerStart">
            <summary>
            Gets or sets the marker (start cap) of the path.
            </summary>
        </member>
        <member name="M:Svg.SvgLine.RenderStroke(Svg.ISvgRenderer)">
            <summary>
            Renders the stroke of the <see cref="T:Svg.SvgVisualElement"/> to the specified <see cref="T:Svg.ISvgRenderer"/>
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="T:Svg.SvgPathBasedElement">
            <summary>
            Represents an element that is using a GraphicsPath as rendering base.
            </summary>
        </member>
        <member name="T:Svg.SvgPolygon">
            <summary>
            SvgPolygon defines a closed shape consisting of a set of connected straight line segments.
            </summary>
        </member>
        <member name="P:Svg.SvgPolygon.Points">
            <summary>
            The points that make up the SvgPolygon
            </summary>
        </member>
        <member name="P:Svg.SvgPolygon.MarkerEnd">
            <summary>
            Gets or sets the marker (end cap) of the path.
            </summary>
        </member>
        <member name="P:Svg.SvgPolygon.MarkerMid">
            <summary>
            Gets or sets the marker (start cap) of the path.
            </summary>
        </member>
        <member name="P:Svg.SvgPolygon.MarkerStart">
            <summary>
            Gets or sets the marker (start cap) of the path.
            </summary>
        </member>
        <member name="M:Svg.SvgPolygon.RenderStroke(Svg.ISvgRenderer)">
            <summary>
            Renders the stroke of the <see cref="T:Svg.SvgVisualElement"/> to the specified <see cref="T:Svg.ISvgRenderer"/>
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="T:Svg.SvgPolyline">
            <summary>
            SvgPolyline defines a set of connected straight line segments. Typically, <see cref="T:Svg.SvgPolyline"/> defines open shapes.
            </summary>
        </member>
        <member name="P:Svg.SvgPolyline.MarkerEnd">
            <summary>
            Gets or sets the marker (end cap) of the path.
            </summary>
        </member>
        <member name="P:Svg.SvgPolyline.MarkerMid">
            <summary>
            Gets or sets the marker (start cap) of the path.
            </summary>
        </member>
        <member name="P:Svg.SvgPolyline.MarkerStart">
            <summary>
            Gets or sets the marker (start cap) of the path.
            </summary>
        </member>
        <member name="M:Svg.SvgPolyline.RenderStroke(Svg.ISvgRenderer)">
            <summary>
            Renders the stroke of the <see cref="T:Svg.SvgVisualElement"/> to the specified <see cref="T:Svg.ISvgRenderer"/>
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="T:Svg.SvgRectangle">
            <summary>
            Represents an SVG rectangle that could also have rounded edges.
            </summary>
        </member>
        <member name="M:Svg.SvgRectangle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgRectangle"/> class.
            </summary>
        </member>
        <member name="P:Svg.SvgRectangle.Location">
            <summary>
            Gets an <see cref="T:Svg.SvgPoint"/> representing the top left point of the rectangle.
            </summary>
        </member>
        <member name="P:Svg.SvgRectangle.X">
            <summary>
            Gets or sets the position where the left point of the rectangle should start.
            </summary>
        </member>
        <member name="P:Svg.SvgRectangle.Y">
            <summary>
            Gets or sets the position where the top point of the rectangle should start.
            </summary>
        </member>
        <member name="P:Svg.SvgRectangle.Width">
            <summary>
            Gets or sets the width of the rectangle.
            </summary>
        </member>
        <member name="P:Svg.SvgRectangle.Height">
            <summary>
            Gets or sets the height of the rectangle.
            </summary>
        </member>
        <member name="P:Svg.SvgRectangle.CornerRadiusX">
            <summary>
            Gets or sets the X-radius of the rounded edges of this rectangle.
            </summary>
        </member>
        <member name="P:Svg.SvgRectangle.CornerRadiusY">
            <summary>
            Gets or sets the Y-radius of the rounded edges of this rectangle.
            </summary>
        </member>
        <member name="P:Svg.SvgRectangle.RequiresSmoothRendering">
            <summary>
            Gets or sets a value to determine if anti-aliasing should occur when the element is being rendered.
            </summary>
        </member>
        <member name="M:Svg.SvgRectangle.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
        </member>
        <member name="M:Svg.SvgRectangle.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:System.Drawing.Graphics"/> object.
            </summary>
        </member>
        <member name="T:Svg.SvgVisualElement">
            <summary>
            The class that all SVG elements should derive from when they are to be rendered.
            </summary>
        </member>
        <member name="M:Svg.SvgVisualElement.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
        </member>
        <member name="P:Svg.SvgVisualElement.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Svg.SvgVisualElement.Clip">
            <summary>
            Gets the associated <see cref="T:Svg.SvgClipPath"/> if one has been specified.
            </summary>
        </member>
        <member name="P:Svg.SvgVisualElement.ClipPath">
            <summary>
            Gets the associated <see cref="T:Svg.SvgClipPath"/> if one has been specified.
            </summary>
        </member>
        <member name="P:Svg.SvgVisualElement.ClipRule">
            <summary>
            Gets or sets the algorithm which is to be used to determine the clipping region.
            </summary>
        </member>
        <member name="P:Svg.SvgVisualElement.Filter">
            <summary>
            Gets the associated <see cref="T:Svg.SvgClipPath"/> if one has been specified.
            </summary>
        </member>
        <member name="P:Svg.SvgVisualElement.RequiresSmoothRendering">
            <summary>
            Gets or sets a value to determine if anti-aliasing should occur when the element is being rendered.
            </summary>
        </member>
        <member name="M:Svg.SvgVisualElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:SvgGraphicsElement"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgVisualElement.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:System.Drawing.Graphics"/> object.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:Svg.SvgVisualElement.RenderFill(Svg.ISvgRenderer)">
            <summary>
            Renders the fill of the <see cref="T:Svg.SvgVisualElement"/> to the specified <see cref="T:Svg.ISvgRenderer"/>
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:Svg.SvgVisualElement.RenderStroke(Svg.ISvgRenderer)">
            <summary>
            Renders the stroke of the <see cref="T:Svg.SvgVisualElement"/> to the specified <see cref="T:Svg.ISvgRenderer"/>
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:Svg.SvgVisualElement.SetClip(Svg.ISvgRenderer)">
            <summary>
            Sets the clipping region of the specified <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to have its clipping region set.</param>
        </member>
        <member name="M:Svg.SvgVisualElement.ResetClip(Svg.ISvgRenderer)">
            <summary>
            Resets the clipping region of the specified <see cref="T:Svg.ISvgRenderer"/> back to where it was before the <see cref="M:Svg.SvgVisualElement.SetClip(Svg.ISvgRenderer)"/> method was called.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to have its clipping region reset.</param>
        </member>
        <member name="M:Svg.SvgVisualElement.Svg#ISvgClipable#SetClip(Svg.ISvgRenderer)">
            <summary>
            Sets the clipping region of the specified <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to have its clipping region set.</param>
        </member>
        <member name="M:Svg.SvgVisualElement.Svg#ISvgClipable#ResetClip(Svg.ISvgRenderer)">
            <summary>
            Resets the clipping region of the specified <see cref="T:Svg.ISvgRenderer"/> back to where it was before the <see cref="M:Svg.SvgVisualElement.SetClip(Svg.ISvgRenderer)"/> method was called.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to have its clipping region reset.</param>
        </member>
        <member name="P:Svg.SvgVisualElement.Visible">
            <summary>
            Gets or sets a value to determine whether the element will be rendered.
            </summary>
        </member>
        <member name="P:Svg.SvgVisualElement.Display">
            <summary>
            Gets or sets a value to determine whether the element will be rendered.
            Needed to support SVG attribute display="none"
            </summary>
        </member>
        <member name="P:Svg.SvgVisualElement.EnableBackground">
            <summary>
            Gets or sets the fill <see cref="T:Svg.SvgPaintServer"/> of this element.
            </summary>
        </member>
        <member name="T:Svg.ISvgClipable">
            <summary>
            Defines the methods and properties that an <see cref="T:Svg.SvgElement"/> must implement to support clipping.
            </summary>
        </member>
        <member name="P:Svg.ISvgClipable.ClipPath">
            <summary>
            Gets or sets the ID of the associated <see cref="T:Svg.SvgClipPath"/> if one has been specified.
            </summary>
        </member>
        <member name="P:Svg.ISvgClipable.ClipRule">
            <summary>
            Specifies the rule used to define the clipping region when the element is within a <see cref="T:Svg.SvgClipPath"/>.
            </summary>
        </member>
        <member name="M:Svg.ISvgClipable.SetClip(Svg.ISvgRenderer)">
            <summary>
            Sets the clipping region of the specified <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to have its clipping region set.</param>
        </member>
        <member name="M:Svg.ISvgClipable.ResetClip(Svg.ISvgRenderer)">
            <summary>
            Resets the clipping region of the specified <see cref="T:Svg.ISvgRenderer"/> back to where it was before the <see cref="M:Svg.ISvgClipable.SetClip(Svg.ISvgRenderer)"/> method was called.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to have its clipping region reset.</param>
        </member>
        <member name="T:Svg.SvgClipPath">
            <summary>
            Defines a path that can be used by other <see cref="T:Svg.ISvgClipable"/> elements.
            </summary>
        </member>
        <member name="P:Svg.SvgClipPath.ClipPathUnits">
            <summary>
            Specifies the coordinate system for the clipping path.
            </summary>
        </member>
        <member name="M:Svg.SvgClipPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgClipPath"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgClipPath.GetClipRegion(Svg.SvgVisualElement)">
            <summary>
            Gets this <see cref="T:Svg.SvgClipPath"/>'s region to be used as a clipping region.
            </summary>
            <returns>A new <see cref="T:System.Drawing.Region"/> containing the <see cref="T:System.Drawing.Region"/> to be used for clipping.</returns>
        </member>
        <member name="M:Svg.SvgClipPath.CombinePaths(System.Drawing.Drawing2D.GraphicsPath,Svg.SvgElement)">
            <summary>
            
            </summary>
            <param name="region"></param>
            <param name="element"></param>
        </member>
        <member name="M:Svg.SvgClipPath.AddElement(Svg.SvgElement,System.Int32)">
            <summary>
            Called by the underlying <see cref="T:Svg.SvgElement"/> when an element has been added to the
            <see cref="!:Children"/> collection.
            </summary>
            <param name="child">The <see cref="T:Svg.SvgElement"/> that has been added.</param>
            <param name="index">An <see cref="T:System.Int32"/> representing the index where the element was added to the collection.</param>
        </member>
        <member name="M:Svg.SvgClipPath.RemoveElement(Svg.SvgElement)">
            <summary>
            Called by the underlying <see cref="T:Svg.SvgElement"/> when an element has been removed from the
            <see cref="P:Svg.SvgElement.Children"/> collection.
            </summary>
            <param name="child">The <see cref="T:Svg.SvgElement"/> that has been removed.</param>
        </member>
        <member name="M:Svg.SvgClipPath.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="T:Svg.SvgClipRule">
            <summary>
            Indicates the algorithm which is to be used to determine the clipping region.
            </summary>
            <remarks>
                <para>This rule determines the "insideness" of a point on the canvas by drawing a ray from 
                that point to infinity in any direction and then examining the places where a segment of the 
                shape crosses the ray.</para>
            </remarks>
        </member>
        <member name="F:Svg.SvgClipRule.NonZero">
            <summary>
            This rule determines the "insideness" of a point on the canvas by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray. Starting with a count of zero, add one each time a path segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left. After counting the crossings, if the result is zero then the point is outside  the path. Otherwise, it is inside.
            </summary>
        </member>
        <member name="F:Svg.SvgClipRule.EvenOdd">
            <summary>
            This rule determines the "insideness" of a point on the canvas by drawing a ray from that point to infinity in any direction and counting the number of path segments from the given shape that the ray crosses. If this number is odd, the point is inside; if even, the point is outside.
            </summary>
        </member>
        <member name="T:Svg.ISvgViewPort">
            <summary>
            Provides properties and methods to be implemented by view port elements.
            </summary>
        </member>
        <member name="P:Svg.ISvgViewPort.ViewBox">
            <summary>
            Gets or sets the viewport of the element.
            </summary>
        </member>
        <member name="T:Svg.SvgAspectRatio">
            <summary>
            Description of SvgAspectRatio.
            </summary>
        </member>
        <member name="T:Svg.DataTypes.SvgColourInterpolation">
            <summary>Specifies the color space for gradient interpolations, color animations and alpha compositing.</summary>
            <remarks>When a child element is blended into a background, the value of the ‘color-interpolation’ property on the child determines the type of blending, not the value of the ‘color-interpolation’ on the parent. For gradients which make use of the ‘xlink:href’ attribute to reference another gradient, the gradient uses the ‘color-interpolation’ property value from the gradient element which is directly referenced by the ‘fill’ or ‘stroke’ property. When animating colors, color interpolation is performed according to the value of the ‘color-interpolation’ property on the element being animated.</remarks>
        </member>
        <member name="F:Svg.DataTypes.SvgColourInterpolation.Auto">
            <summary>Indicates that the user agent can choose either the sRGB or linearRGB spaces for color interpolation. This option indicates that the author doesn't require that color interpolation occur in a particular color space.</summary>
        </member>
        <member name="F:Svg.DataTypes.SvgColourInterpolation.SRGB">
            <summary>Indicates that color interpolation should occur in the sRGB color space.</summary>
        </member>
        <member name="F:Svg.DataTypes.SvgColourInterpolation.LinearRGB">
            <summary>Indicates that color interpolation should occur in the linearized RGB color space as described above.</summary>
        </member>
        <member name="F:Svg.DataTypes.SvgColourInterpolation.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="T:Svg.DataTypes.SvgMarkerUnits">
            <summary>Defines the coordinate system for attributes ‘markerWidth’, ‘markerHeight’ and the contents of the ‘marker’.</summary>
        </member>
        <member name="F:Svg.DataTypes.SvgMarkerUnits.StrokeWidth">
            <summary>If markerUnits="strokeWidth", ‘markerWidth’, ‘markerHeight’ and the contents of the ‘marker’ represent values in a coordinate system which has a single unit equal the size in user units of the current stroke width (see the ‘stroke-width’ property) in place for the graphic object referencing the marker.</summary>
        </member>
        <member name="F:Svg.DataTypes.SvgMarkerUnits.UserSpaceOnUse">
            <summary>If markerUnits="userSpaceOnUse", ‘markerWidth’, ‘markerHeight’ and the contents of the ‘marker’ represent values in the current user coordinate system in place for the graphic object referencing the marker (i.e., the user coordinate system for the element referencing the ‘marker’ element via a ‘marker’, ‘marker-start’, ‘marker-mid’ or ‘marker-end’ property).</summary>
        </member>
        <member name="T:Svg.SvgCoordinateUnits">
            <summary>
            Defines the various coordinate units certain SVG elements may use.
            </summary>
        </member>
        <member name="F:Svg.SvgCoordinateUnits.ObjectBoundingBox">
            <summary>
            Indicates that the coordinate system of the owner element is to be used.
            </summary>
        </member>
        <member name="F:Svg.SvgCoordinateUnits.UserSpaceOnUse">
            <summary>
            Indicates that the coordinate system of the entire document is to be used.
            </summary>
        </member>
        <member name="T:Svg.SvgFontStyle">
            <summary>This is the descriptor for the style of a font and takes the same values as the 'font-style' property, except that a comma-separated list is permitted.</summary>
        </member>
        <member name="F:Svg.SvgFontStyle.All">
            <summary>Indicates that the font-face supplies all styles (normal, oblique and italic).</summary>
        </member>
        <member name="F:Svg.SvgFontStyle.Normal">
            <summary>Specifies a font that is classified as 'normal' in the UA's font database.</summary>
        </member>
        <member name="F:Svg.SvgFontStyle.Oblique">
            <summary>Specifies a font that is classified as 'oblique' in the UA's font database. Fonts with Oblique, Slanted, or Incline in their names will typically be labeled 'oblique' in the font database. A font that is labeled 'oblique' in the UA's font database may actually have been generated by electronically slanting a normal font.</summary>
        </member>
        <member name="F:Svg.SvgFontStyle.Italic">
            <summary>Specifies a font that is classified as 'italic' in the UA's font database, or, if that is not available, one labeled 'oblique'. Fonts with Italic, Cursive, or Kursiv in their names will typically be labeled 'italic'</summary>
        </member>
        <member name="T:Svg.SvgFontWeight">
            <summary>The weight of a face relative to others in the same font family.</summary>
        </member>
        <member name="F:Svg.SvgFontWeight.All">
            <summary>All font weights.</summary>
        </member>
        <member name="F:Svg.SvgFontWeight.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:Svg.SvgFontWeight.Normal">
            <summary>Same as <see cref="F:Svg.SvgFontWeight.W400"/>.</summary>
        </member>
        <member name="F:Svg.SvgFontWeight.Bold">
            <summary>Same as <see cref="F:Svg.SvgFontWeight.W700"/>.</summary>
        </member>
        <member name="F:Svg.SvgFontWeight.Bolder">
            <summary>One font weight darker than the parent element.</summary>
        </member>
        <member name="F:Svg.SvgFontWeight.Lighter">
            <summary>One font weight lighter than the parent element.</summary>
        </member>
        <member name="F:Svg.SvgFontWeight.W100">
            <summary></summary>
        </member>
        <member name="F:Svg.SvgFontWeight.W200">
            <summary></summary>
        </member>
        <member name="F:Svg.SvgFontWeight.W300">
            <summary></summary>
        </member>
        <member name="F:Svg.SvgFontWeight.W400">
            <summary>Same as <see cref="F:Svg.SvgFontWeight.Normal"/>.</summary>
        </member>
        <member name="F:Svg.SvgFontWeight.W500">
            <summary></summary>
        </member>
        <member name="F:Svg.SvgFontWeight.W600">
            <summary></summary>
        </member>
        <member name="F:Svg.SvgFontWeight.W700">
            <summary>Same as <see cref="F:Svg.SvgFontWeight.Bold"/>.</summary>
        </member>
        <member name="F:Svg.SvgFontWeight.W800">
            <summary></summary>
        </member>
        <member name="F:Svg.SvgFontWeight.W900">
            <summary></summary>
        </member>
        <member name="T:Svg.SvgOrient">
            <summary>
            Represents an orientation in an Scalable Vector Graphics document.
            </summary>
        </member>
        <member name="P:Svg.SvgOrient.Angle">
            <summary>
            Gets the value of the unit.
            </summary>
        </member>
        <member name="P:Svg.SvgOrient.IsAuto">
            <summary>
            Gets the value of the unit.
            </summary>
        </member>
        <member name="M:Svg.SvgOrient.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Svg.SvgOrient.op_Implicit(System.Single)~Svg.SvgOrient">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:Svg.SvgOrient"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Svg.SvgOverflow" -->
        <member name="F:Svg.SvgOverflow.Hidden">
            <summary>Overflow is not rendered.</summary>
        </member>
        <member name="F:Svg.SvgOverflow.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:Svg.SvgOverflow.Auto">
            <summary>The overflow is rendered - same as "visible".</summary>
        </member>
        <member name="F:Svg.SvgOverflow.Visible">
            <summary>Overflow is rendered.</summary>
        </member>
        <member name="F:Svg.SvgOverflow.Scroll">
            <summary>Overflow causes a scrollbar to appear (horizontal, vertical or both).</summary>
        </member>
        <member name="T:Svg.SvgPointCollection">
            <summary>
            Represents a list of <see cref="!:SvgUnits"/> used with the <see cref="T:Svg.SvgPolyline"/> and <see cref="T:Svg.SvgPolygon"/>.
            </summary>
        </member>
        <member name="T:Svg.SvgPointCollectionConverter">
            <summary>
            A class to convert string into <see cref="T:Svg.SvgUnitCollection"/> instances.
            </summary>
        </member>
        <member name="M:Svg.SvgPointCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Svg.SvgTextDecoration">
            <summary>This property describes decorations that are added to the text of an element. Conforming SVG Viewers are not required to support the blink value.</summary>
        </member>
        <member name="F:Svg.SvgTextDecoration.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:Svg.SvgTextDecoration.None">
            <summary>The text is not decorated</summary>
        </member>
        <member name="F:Svg.SvgTextDecoration.Underline">
            <summary>The text is underlined.</summary>
        </member>
        <member name="F:Svg.SvgTextDecoration.Overline">
            <summary>The text is overlined.</summary>
        </member>
        <member name="F:Svg.SvgTextDecoration.LineThrough">
            <summary>The text is struck through.</summary>
        </member>
        <member name="F:Svg.SvgTextDecoration.Blink">
            <summary>The text will blink.</summary>
        </member>
        <member name="T:Svg.SvgTextLengthAdjust">
            <summary>Indicates the type of adjustments which the user agent shall make to make the rendered length of the text match the value specified on the ‘textLength’ attribute.</summary>
            <remarks>
                <para>The user agent is required to achieve correct start and end positions for the text strings, but the locations of intermediate glyphs are not predictable because user agents might employ advanced algorithms to stretch or compress text strings in order to balance correct start and end positioning with optimal typography.</para>
                <para>Note that, for a text string that contains n characters, the adjustments to the advance values often occur only for n−1 characters (see description of attribute ‘textLength’), whereas stretching or compressing of the glyphs will be applied to all n characters.</para>
            </remarks>
        </member>
        <member name="F:Svg.SvgTextLengthAdjust.Spacing">
            <summary>Indicates that only the advance values are adjusted. The glyphs themselves are not stretched or compressed.</summary>
        </member>
        <member name="F:Svg.SvgTextLengthAdjust.SpacingAndGlyphs">
            <summary>Indicates that the advance values are adjusted and the glyphs themselves stretched or compressed in one axis (i.e., a direction parallel to the inline-progression-direction).</summary>
        </member>
        <member name="T:Svg.SvgTextPathMethod">
            <summary>Indicates the method by which text should be rendered along the path.</summary>
        </member>
        <member name="F:Svg.SvgTextPathMethod.Align">
            <summary>Indicates that the glyphs should be rendered using simple 2x3 transformations such that there is no stretching/warping of the glyphs. Typically, supplemental rotation, scaling and translation transformations are done for each glyph to be rendered. As a result, with align, fonts where the glyphs are designed to be connected (e.g., cursive fonts), the connections may not align properly when text is rendered along a path.</summary>
        </member>
        <member name="F:Svg.SvgTextPathMethod.Stretch">
            <summary>Indicates that the glyph outlines will be converted into paths, and then all end points and control points will be adjusted to be along the perpendicular vectors from the path, thereby stretching and possibly warping the glyphs. With this approach, connected glyphs, such as in cursive scripts, will maintain their connections.</summary>
        </member>
        <member name="T:Svg.SvgTextPathSpacing">
            <summary>Indicates how the user agent should determine the spacing between glyphs that are to be rendered along a path.</summary>
        </member>
        <member name="F:Svg.SvgTextPathSpacing.Exact">
            <summary>Indicates that the glyphs should be rendered exactly according to the spacing rules as specified in Text on a path layout rules.</summary>
        </member>
        <member name="F:Svg.SvgTextPathSpacing.Auto">
            <summary>Indicates that the user agent should use text-on-a-path layout algorithms to adjust the spacing between glyphs in order to achieve visually appealing results.</summary>
        </member>
        <member name="T:Svg.SvgUnit">
            <summary>
            Represents a unit in an Scalable Vector Graphics document.
            </summary>
        </member>
        <member name="F:Svg.SvgUnit.Empty">
            <summary>
            Gets and empty <see cref="T:Svg.SvgUnit"/>.
            </summary>
        </member>
        <member name="F:Svg.SvgUnit.None">
            <summary>
            Gets an <see cref="T:Svg.SvgUnit"/> with a value of none.
            </summary>
        </member>
        <member name="P:Svg.SvgUnit.IsEmpty">
            <summary>
            Gets a value to determine whether the unit is empty.
            </summary>
        </member>
        <member name="P:Svg.SvgUnit.IsNone">
            <summary>
            Gets whether this unit is none.
            </summary>
        </member>
        <member name="P:Svg.SvgUnit.Value">
            <summary>
            Gets the value of the unit.
            </summary>
        </member>
        <member name="P:Svg.SvgUnit.Type">
            <summary>
            Gets the <see cref="T:Svg.SvgUnitType"/> of unit.
            </summary>
        </member>
        <member name="M:Svg.SvgUnit.ToDeviceValue(Svg.ISvgRenderer,Svg.UnitRenderingType,Svg.SvgElement)">
            <summary>
            Converts the current unit to one that can be used at render time.
            </summary>
            <param name="boundable">The container element used as the basis for calculations</param>
            <returns>The representation of the current unit in a device value (usually pixels).</returns>
        </member>
        <member name="M:Svg.SvgUnit.ToPercentage">
            <summary>
            Converts the current unit to a percentage, if applicable.
            </summary>
            <returns>An <see cref="T:Svg.SvgUnit"/> of type <see cref="!:SvgUnitType.Perscentage"/>.</returns>
        </member>
        <member name="M:Svg.SvgUnit.op_Implicit(Svg.SvgUnit)~System.Single">
            <summary>
            Performs an implicit conversion from <see cref="T:Svg.SvgUnit"/> to <see cref="T:System.Single"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Svg.SvgUnit.op_Implicit(System.Single)~Svg.SvgUnit">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:Svg.SvgUnit"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Svg.SvgUnit.#ctor(Svg.SvgUnitType,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgUnit"/> struct.
            </summary>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Svg.SvgUnit.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgUnit"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:Svg.SvgUnitType">
            <summary>
            Defines the various types of unit an <see cref="T:Svg.SvgUnit"/> can be.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.None">
            <summary>
            Indicates that the unit holds no value.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.Pixel">
            <summary>
            Indicates that the unit is in pixels.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.Em">
            <summary>
            Indicates that the unit is equal to the pt size of the current font.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.Ex">
            <summary>
            Indicates that the unit is equal to the x-height of the current font.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.Percentage">
            <summary>
            Indicates that the unit is a percentage.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.User">
            <summary>
            Indicates that the unit has no unit identifier and is a value in the current user coordinate system.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.Inch">
            <summary>
            Indicates the the unit is in inches.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.Centimeter">
            <summary>
            Indicates that the unit is in centimeters.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.Millimeter">
            <summary>
            Indicates that the unit is in millimeters.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.Pica">
            <summary>
            Indicates that the unit is in picas.
            </summary>
        </member>
        <member name="F:Svg.SvgUnitType.Point">
            <summary>
            Indicates that the unit is in points, the smallest unit of measure, being a subdivision of the larger <see cref="F:Svg.SvgUnitType.Pica"/>. There are 12 points in the <see cref="F:Svg.SvgUnitType.Pica"/>.
            </summary>
        </member>
        <member name="T:Svg.SvgUnitCollection">
            <summary>
            Represents a list of <see cref="!:SvgUnits"/>.
            </summary>
        </member>
        <member name="T:Svg.SvgUnitCollectionConverter">
            <summary>
            A class to convert string into <see cref="T:Svg.SvgUnitCollection"/> instances.
            </summary>
        </member>
        <member name="M:Svg.SvgUnitCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Svg.SvgViewBox">
            <summary>
            It is often desirable to specify that a given set of graphics stretch to fit a particular container element. The viewBox attribute provides this capability.
            </summary>
        </member>
        <member name="P:Svg.SvgViewBox.MinX">
            <summary>
            Gets or sets the position where the viewport starts horizontally.
            </summary>
        </member>
        <member name="P:Svg.SvgViewBox.MinY">
            <summary>
            Gets or sets the position where the viewport starts vertically.
            </summary>
        </member>
        <member name="P:Svg.SvgViewBox.Width">
            <summary>
            Gets or sets the width of the viewport.
            </summary>
        </member>
        <member name="P:Svg.SvgViewBox.Height">
            <summary>
            Gets or sets the height of the viewport.
            </summary>
        </member>
        <member name="M:Svg.SvgViewBox.op_Implicit(Svg.SvgViewBox)~System.Drawing.RectangleF">
            <summary>
            Performs an implicit conversion from <see cref="T:Svg.SvgViewBox"/> to <see cref="T:System.Drawing.RectangleF"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Svg.SvgViewBox.op_Implicit(System.Drawing.RectangleF)~Svg.SvgViewBox">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Drawing.RectangleF"/> to <see cref="T:Svg.SvgViewBox"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Svg.SvgViewBox.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgViewBox"/> struct.
            </summary>
            <param name="minX">The min X.</param>
            <param name="minY">The min Y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Svg.SvgViewBoxConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Svg.SvgDefinitionList">
            <summary>
            Represents a list of re-usable SVG components.
            </summary>
        </member>
        <member name="M:Svg.SvgDefinitionList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgDefinitionList"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgDefinitionList.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="T:Svg.SvgDocumentMetadata">
            <summary>
            Represents a list of re-usable SVG components.
            </summary>
        </member>
        <member name="M:Svg.SvgDocumentMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgDocumentMetadata"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgDocumentMetadata.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="T:Svg.SvgFragment">
            <summary>
            An <see cref="T:Svg.SvgFragment"/> represents an SVG fragment that can be the root element or an embedded fragment of an SVG document.
            </summary>
        </member>
        <member name="F:Svg.SvgFragment.Namespace">
            <summary>
            Gets the SVG namespace string.
            </summary>
        </member>
        <member name="P:Svg.SvgFragment.X">
            <summary>
            Gets or sets the position where the left point of the svg should start.
            </summary>
        </member>
        <member name="P:Svg.SvgFragment.Y">
            <summary>
            Gets or sets the position where the top point of the svg should start.
            </summary>
        </member>
        <member name="P:Svg.SvgFragment.Width">
            <summary>
            Gets or sets the width of the fragment.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Svg.SvgFragment.Height">
            <summary>
            Gets or sets the height of the fragment.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Svg.SvgFragment.ViewBox">
            <summary>
            Gets or sets the viewport of the element.
            </summary>
            <value></value>
        </member>
        <member name="P:Svg.SvgFragment.AspectRatio">
            <summary>
            Gets or sets the aspect of the viewport.
            </summary>
            <value></value>
        </member>
        <member name="P:Svg.SvgFragment.FontSize">
            <summary>
            Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment.
            </summary>
        </member>
        <member name="P:Svg.SvgFragment.FontFamily">
            <summary>
            Indicates which font family is to be used to render the text.
            </summary>
        </member>
        <member name="M:Svg.SvgFragment.PushTransforms(Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="P:Svg.SvgFragment.Path">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="P:Svg.SvgFragment.Bounds">
            <summary>
            Gets the bounds of the svg element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:Svg.SvgFragment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgFragment"/> class.
            </summary>
        </member>
        <member name="T:Svg.SvgGroup">
            <summary>
            An element used to group SVG shapes.
            </summary>
        </member>
        <member name="M:Svg.SvgGroup.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="P:Svg.SvgGroup.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:Svg.SvgSwitch">
            <summary>
            The �switch� element evaluates the �requiredFeatures�, �requiredExtensions� and �systemLanguage� attributes on its direct child elements in order, and then processes and renders the first child for which these attributes evaluate to true
            </summary>
        </member>
        <member name="M:Svg.SvgSwitch.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="P:Svg.SvgSwitch.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:Svg.SvgSwitch.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:System.Drawing.Graphics"/> object.
            </summary>
            <param name="renderer">The <see cref="T:System.Drawing.Graphics"/> object to render to.</param>
        </member>
        <member name="T:Svg.Document_Structure.SvgSymbol">
            <summary>
            An element used to group SVG shapes.
            </summary>
        </member>
        <member name="P:Svg.Document_Structure.SvgSymbol.ViewBox">
            <summary>
            Gets or sets the viewport of the element.
            </summary>
            <value></value>
        </member>
        <member name="P:Svg.Document_Structure.SvgSymbol.AspectRatio">
            <summary>
            Gets or sets the aspect of the viewport.
            </summary>
            <value></value>
        </member>
        <member name="M:Svg.Document_Structure.SvgSymbol.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="!:GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="P:Svg.Document_Structure.SvgSymbol.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:Svg.Document_Structure.SvgSymbol.PushTransforms(Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="M:Svg.SvgUse.PushTransforms(Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="M:Svg.SvgUse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgUse"/> class.
            </summary>
        </member>
        <member name="T:Svg.SvgForeignObject">
            <summary>
            The �foreignObject� element allows for inclusion of a foreign namespace which has its graphical content drawn by a different user agent
            </summary>
        </member>
        <member name="M:Svg.SvgForeignObject.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="P:Svg.SvgForeignObject.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="T:Svg.FilterEffects.SvgColourMatrix">
            <summary>
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <member name="P:Svg.FilterEffects.SvgColourMatrix.Type">
            <summary>
            matrix | saturate | hueRotate | luminanceToAlpha
            Indicates the type of matrix operation. The keyword 'matrix' indicates that a full 5x4 matrix of values will be provided. The other keywords represent convenience shortcuts to allow commonly used color operations to be performed without specifying a complete matrix. If attribute �type� is not specified, then the effect is as if a value of matrix were specified.
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Svg.FilterEffects.SvgColourMatrix.Values" -->
        <member name="P:Svg.FilterEffects.SvgGaussianBlur.StdDeviation">
            <summary>
            Gets or sets the radius of the blur (only allows for one value - not the two specified in the SVG Spec)
            </summary>
        </member>
        <member name="T:Svg.FilterEffects.SvgOffset">
            <summary>
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <member name="P:Svg.FilterEffects.SvgOffset.Dx">
            <summary>
            The amount to offset the input graphic along the x-axis. The offset amount is expressed in the coordinate system established by attribute �primitiveUnits� on the �filter� element.
            If the attribute is not specified, then the effect is as if a value of 0 were specified.
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <member name="P:Svg.FilterEffects.SvgOffset.Dy">
            <summary>
            The amount to offset the input graphic along the y-axis. The offset amount is expressed in the coordinate system established by attribute �primitiveUnits� on the �filter� element.
            If the attribute is not specified, then the effect is as if a value of 0 were specified.
            Note: this is not used in calculations to bitmap - used only to allow for svg xml output
            </summary>
        </member>
        <member name="T:Svg.FilterEffects.SvgFilter">
            <summary>
            A filter effect consists of a series of graphics operations that are applied to a given source graphic to produce a modified graphical result.
            </summary>
        </member>
        <member name="P:Svg.FilterEffects.SvgFilter.X">
            <summary>
            Gets or sets the position where the left point of the filter.
            </summary>
        </member>
        <member name="P:Svg.FilterEffects.SvgFilter.Y">
            <summary>
            Gets or sets the position where the top point of the filter.
            </summary>
        </member>
        <member name="P:Svg.FilterEffects.SvgFilter.Width">
            <summary>
            Gets or sets the width of the resulting filter graphic.
            </summary>
        </member>
        <member name="P:Svg.FilterEffects.SvgFilter.Height">
            <summary>
            Gets or sets the height of the resulting filter graphic.
            </summary>
        </member>
        <member name="P:Svg.FilterEffects.SvgFilter.ColorInterpolationFilters">
            <summary>
            Gets or sets the color-interpolation-filters of the resulting filter graphic.
            NOT currently mapped through to bitmap
            </summary>
        </member>
        <member name="M:Svg.FilterEffects.SvgFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.FilterEffects.SvgFilter"/> class.
            </summary>
        </member>
        <member name="M:Svg.FilterEffects.SvgFilter.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:Svg.FilterEffects.SvgFilter.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Svg.NonSvgElement.Name">
            <summary>
            Publish the element name to be able to differentiate non-svg elements.
            </summary>
        </member>
        <member name="P:Svg.EnumBaseConverter`1.DefaultValue">
            <summary>If specified, upon conversion, the default value will result in 'null'.</summary>
        </member>
        <member name="M:Svg.EnumBaseConverter`1.#ctor">
            <summary>Creates a new instance.</summary>
        </member>
        <member name="M:Svg.EnumBaseConverter`1.#ctor(`0)">
            <summary>Creates a new instance.</summary>
            <param name="defaultValue">Specified the default value of the enum.</param>
        </member>
        <member name="M:Svg.EnumBaseConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Attempts to convert the provided value to <typeparamref name="T"/>.</summary>
        </member>
        <member name="M:Svg.EnumBaseConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Attempts to convert the value to the destination type.</summary>
        </member>
        <member name="T:Svg.ISvgStylable">
            <summary>
            Defines the methods and properties required for an SVG element to be styled.
            </summary>
        </member>
        <member name="T:Svg.SvgColourConverter">
            <summary>
            Converts string representations of colours into <see cref="T:System.Drawing.Color"/> objects.
            </summary>
        </member>
        <member name="M:Svg.SvgColourConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the converter's native type.
            </summary>
            <param name="context">A <see cref="T:System.ComponentModel.TypeDescriptor"/> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> that specifies the culture to represent the color.</param>
            <param name="value">The object to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> representing the converted value.
            </returns>
            <exception cref="T:System.ArgumentException">The conversion cannot be performed.</exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:Svg.SvgColourConverter.Hsl2Rgb(System.Double,System.Double,System.Double)">
            <summary>
            Converts HSL color (with HSL specified from 0 to 1) to RGB color.
            Taken from http://www.geekymonkey.com/Programming/CSharp/RGB2HSL_HSL2RGB.htm
            </summary>
            <param name="h"></param>
            <param name="sl"></param>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="F:Svg.SvgColourServer.NotSet">
            <summary>
            An unspecified <see cref="T:Svg.SvgPaintServer"/>.
            </summary>
        </member>
        <member name="F:Svg.SvgColourServer.Inherit">
            <summary>
            A <see cref="T:Svg.SvgPaintServer"/> that should inherit from its parent.
            </summary>
        </member>
        <member name="T:Svg.SvgDeferredPaintServer">
            <summary>
            A wrapper for a paint server which isn't defined currently in the parse process, but
            should be defined by the time the image needs to render.
            </summary>
        </member>
        <member name="T:Svg.SvgFallbackPaintServer">
            <summary>
            A wrapper for a paint server has a fallback if the primary server doesn't work.
            </summary>
        </member>
        <member name="T:Svg.SvgGradientServer">
            <summary>
            Provides the base class for all paint servers that wish to render a gradient.
            </summary>
        </member>
        <member name="M:Svg.SvgGradientServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgGradientServer"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgGradientServer.AddElement(Svg.SvgElement,System.Int32)">
            <summary>
            Called by the underlying <see cref="T:Svg.SvgElement"/> when an element has been added to the
            <see cref="!:Children"/> collection.
            </summary>
            <param name="child">The <see cref="T:Svg.SvgElement"/> that has been added.</param>
            <param name="index">An <see cref="T:System.Int32"/> representing the index where the element was added to the collection.</param>
        </member>
        <member name="M:Svg.SvgGradientServer.RemoveElement(Svg.SvgElement)">
            <summary>
            Called by the underlying <see cref="T:Svg.SvgElement"/> when an element has been removed from the
            <see cref="!:Children"/> collection.
            </summary>
            <param name="child">The <see cref="T:Svg.SvgElement"/> that has been removed.</param>
        </member>
        <member name="P:Svg.SvgGradientServer.Stops">
            <summary>
            Gets the ramp of colors to use on a gradient.
            </summary>
        </member>
        <member name="P:Svg.SvgGradientServer.SpreadMethod">
            <summary>
            Specifies what happens if the gradient starts or ends inside the bounds of the target rectangle.
            </summary>
        </member>
        <member name="P:Svg.SvgGradientServer.GradientUnits">
            <summary>
            Gets or sets the coordinate system of the gradient.
            </summary>
        </member>
        <member name="P:Svg.SvgGradientServer.InheritGradient">
            <summary>
            Gets or sets another gradient fill from which to inherit the stops from.
            </summary>
        </member>
        <member name="M:Svg.SvgGradientServer.GetColorBlend(Svg.ISvgRenderer,System.Single,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> representing the <see cref="T:Svg.SvgGradientServer"/>'s gradient stops.
            </summary>
            <param name="owner">The parent <see cref="T:Svg.SvgVisualElement"/>.</param>
            <param name="opacity">The opacity of the colour blend.</param>
        </member>
        <member name="T:Svg.SvgGradientSpreadMethod">
            <summary>Indicates what happens if the gradient starts or ends inside the bounds of the target rectangle.</summary>
            <remarks>
                <para>Possible values are: 'pad', which says to use the terminal colors of the gradient to fill the remainder of the target region, 'reflect', which says to reflect the gradient pattern start-to-end, end-to-start, start-to-end, etc. continuously until the target rectangle is filled, and repeat, which says to repeat the gradient pattern start-to-end, start-to-end, start-to-end, etc. continuously until the target region is filled.</para>
                <para>If the attribute is not specified, the effect is as if a value of 'pad' were specified.</para>
            </remarks>
        </member>
        <member name="F:Svg.SvgGradientSpreadMethod.Pad">
            <summary>Use the terminal colors of the gradient to fill the remainder of the target region.</summary>
        </member>
        <member name="F:Svg.SvgGradientSpreadMethod.Reflect">
            <summary>Reflect the gradient pattern start-to-end, end-to-start, start-to-end, etc. continuously until the target rectangle is filled.</summary>
        </member>
        <member name="F:Svg.SvgGradientSpreadMethod.Repeat">
            <summary>Repeat the gradient pattern start-to-end, start-to-end, start-to-end, etc. continuously until the target region is filled.</summary>
        </member>
        <member name="T:Svg.SvgGradientStop">
            <summary>
            Represents a colour stop in a gradient.
            </summary>
        </member>
        <member name="P:Svg.SvgGradientStop.Offset">
            <summary>
            Gets or sets the offset, i.e. where the stop begins from the beginning, of the gradient stop.
            </summary>
        </member>
        <member name="P:Svg.SvgGradientStop.StopColor">
            <summary>
            Gets or sets the colour of the gradient stop.
            </summary>
        </member>
        <member name="P:Svg.SvgGradientStop.Opacity">
            <summary>
            Gets or sets the opacity of the gradient stop (0-1).
            </summary>
        </member>
        <member name="M:Svg.SvgGradientStop.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgGradientStop"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgGradientStop.#ctor(Svg.SvgUnit,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgGradientStop"/> class.
            </summary>
            <param name="offset">The offset.</param>
            <param name="colour">The colour.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Svg.SvgLinearGradientServer.LineF.Intersection(Svg.SvgLinearGradientServer.LineF)" -->
        <member name="M:Svg.SvgMarker.RenderMarker(Svg.ISvgRenderer,Svg.SvgVisualElement,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Render this marker using the slope of the given line segment
            </summary>
            <param name="pRenderer"></param>
            <param name="pOwner"></param>
            <param name="pMarkerPoint1"></param>
            <param name="pMarkerPoint2"></param>
        </member>
        <member name="M:Svg.SvgMarker.RenderMarker(Svg.ISvgRenderer,Svg.SvgVisualElement,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Render this marker using the average of the slopes of the two given line segments
            </summary>
            <param name="pRenderer"></param>
            <param name="pOwner"></param>
            <param name="pMarkerPoint1"></param>
            <param name="pMarkerPoint2"></param>
            <param name="pMarkerPoint3"></param>
        </member>
        <member name="M:Svg.SvgMarker.RenderPart2(System.Single,Svg.ISvgRenderer,Svg.SvgVisualElement,System.Drawing.PointF)">
            <summary>
            Common code for rendering a marker once the orientation angle has been calculated
            </summary>
            <param name="fAngle"></param>
            <param name="pRenderer"></param>
            <param name="pOwner"></param>
            <param name="pMarkerPoint"></param>
        </member>
        <member name="M:Svg.SvgMarker.CreatePen(Svg.SvgVisualElement,Svg.ISvgRenderer)">
            <summary>
            Create a pen that can be used to render this marker
            </summary>
            <param name="pStroke"></param>
            <returns></returns>
        </member>
        <member name="M:Svg.SvgMarker.GetClone(Svg.SvgVisualElement)">
            <summary>
            Get a clone of the current path, scaled for the stroke width
            </summary>
            <returns></returns>
        </member>
        <member name="M:Svg.SvgMarker.AdjustForViewBoxWidth(System.Single)">
            <summary>
            Adjust the given value to account for the width of the viewbox in the viewport
            </summary>
            <param name="fWidth"></param>
            <returns></returns>
        </member>
        <member name="M:Svg.SvgMarker.AdjustForViewBoxHeight(System.Single)">
            <summary>
            Adjust the given value to account for the height of the viewbox in the viewport
            </summary>
            <param name="fWidth"></param>
            <returns></returns>
        </member>
        <member name="T:Svg.SvgPaintServer">
            <summary>
            Represents the base class for all paint servers that are intended to be used as a fill or stroke.
            </summary>
        </member>
        <member name="F:Svg.SvgPaintServer.None">
            <summary>
            An unspecified <see cref="T:Svg.SvgPaintServer"/>.
            </summary>
        </member>
        <member name="M:Svg.SvgPaintServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgPaintServer"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgPaintServer.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:Svg.SvgPaintServer.GetBrush(Svg.SvgVisualElement,Svg.ISvgRenderer,System.Single,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.Drawing.Brush"/> representing the current paint server.
            </summary>
            <param name="styleOwner">The owner <see cref="T:Svg.SvgVisualElement"/>.</param>
            <param name="opacity">The opacity of the brush.</param>
        </member>
        <member name="M:Svg.SvgPaintServer.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Svg.SvgPatternServer">
            <summary>
            A pattern is used to fill or stroke an object using a pre-defined graphic object which can be replicated ("tiled") at fixed intervals in x and y to cover the areas to be painted.
            </summary>
        </member>
        <member name="P:Svg.SvgPatternServer.ViewBox">
            <summary>
            Specifies a supplemental transformation which is applied on top of any 
            transformations necessary to create a new pattern coordinate system.
            </summary>
        </member>
        <member name="P:Svg.SvgPatternServer.AspectRatio">
            <summary>
            Gets or sets the aspect of the viewport.
            </summary>
            <value></value>
        </member>
        <member name="P:Svg.SvgPatternServer.Width">
            <summary>
            Gets or sets the width of the pattern.
            </summary>
        </member>
        <member name="P:Svg.SvgPatternServer.PatternUnits">
            <summary>
            Gets or sets the width of the pattern.
            </summary>
        </member>
        <member name="P:Svg.SvgPatternServer.PatternContentUnits">
            <summary>
            Gets or sets the width of the pattern.
            </summary>
        </member>
        <member name="P:Svg.SvgPatternServer.Height">
            <summary>
            Gets or sets the height of the pattern.
            </summary>
        </member>
        <member name="P:Svg.SvgPatternServer.X">
            <summary>
            Gets or sets the X-axis location of the pattern.
            </summary>
        </member>
        <member name="P:Svg.SvgPatternServer.Y">
            <summary>
            Gets or sets the Y-axis location of the pattern.
            </summary>
        </member>
        <member name="P:Svg.SvgPatternServer.InheritGradient">
            <summary>
            Gets or sets another gradient fill from which to inherit the stops from.
            </summary>
        </member>
        <member name="M:Svg.SvgPatternServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgPatternServer"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgPatternServer.GetBrush(Svg.SvgVisualElement,Svg.ISvgRenderer,System.Single,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.Drawing.Brush"/> representing the current paint server.
            </summary>
            <param name="renderingElement">The owner <see cref="T:Svg.SvgVisualElement"/>.</param>
            <param name="opacity">The opacity of the brush.</param>
        </member>
        <member name="M:Svg.SvgRadialGradientServer.CalcScale(System.Drawing.RectangleF,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Graphics)">
            <summary>
            Determine how much (approximately) the path must be scaled to contain the rectangle
            </summary>
            <param name="bounds">Bounds that the path must contain</param>
            <param name="path">Path of the gradient</param>
            <returns>Scale factor</returns>
            <remarks>
            This method continually transforms the rectangle (fewer points) until it is contained by the path
            and returns the result of the search.  The scale factor is set to a constant 95%
            </remarks>
        </member>
        <member name="T:Svg.SvgStrokeLineCap">
            <summary>Specifies the shape to be used at the end of open subpaths when they are stroked.</summary>
        </member>
        <member name="F:Svg.SvgStrokeLineCap.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:Svg.SvgStrokeLineCap.Butt">
            <summary>The ends of the subpaths are square but do not extend past the end of the subpath.</summary>
        </member>
        <member name="F:Svg.SvgStrokeLineCap.Round">
            <summary>The ends of the subpaths are rounded.</summary>
        </member>
        <member name="F:Svg.SvgStrokeLineCap.Square">
            <summary>The ends of the subpaths are square.</summary>
        </member>
        <member name="T:Svg.SvgStrokeLineJoin">
            <summary>Specifies the shape to be used at the corners of paths or basic shapes when they are stroked.</summary>
        </member>
        <member name="F:Svg.SvgStrokeLineJoin.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:Svg.SvgStrokeLineJoin.Miter">
            <summary>The corners of the paths are joined sharply.</summary>
        </member>
        <member name="F:Svg.SvgStrokeLineJoin.Round">
            <summary>The corners of the paths are rounded off.</summary>
        </member>
        <member name="F:Svg.SvgStrokeLineJoin.Bevel">
            <summary>The corners of the paths are "flattened".</summary>
        </member>
        <member name="T:Svg.SvgPath">
            <summary>
            Represents an SVG path element.
            </summary>
        </member>
        <member name="P:Svg.SvgPath.PathData">
            <summary>
            Gets or sets a <see cref="T:Svg.Pathing.SvgPathSegmentList"/> of path data.
            </summary>
        </member>
        <member name="P:Svg.SvgPath.PathLength">
            <summary>
            Gets or sets the length of the path.
            </summary>
        </member>
        <member name="P:Svg.SvgPath.MarkerEnd">
            <summary>
            Gets or sets the marker (end cap) of the path.
            </summary>
        </member>
        <member name="P:Svg.SvgPath.MarkerMid">
            <summary>
            Gets or sets the marker (start cap) of the path.
            </summary>
        </member>
        <member name="P:Svg.SvgPath.MarkerStart">
            <summary>
            Gets or sets the marker (start cap) of the path.
            </summary>
        </member>
        <member name="M:Svg.SvgPath.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
        </member>
        <member name="P:Svg.SvgPath.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:Svg.SvgPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgPath"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgPath.RenderStroke(Svg.ISvgRenderer)">
            <summary>
            Renders the stroke of the <see cref="T:Svg.SvgVisualElement"/> to the specified <see cref="T:Svg.ISvgRenderer"/>
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:Svg.SvgPathBuilder.Parse(System.String)">
            <summary>
            Parses the specified string into a collection of path segments.
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing path data.</param>
        </member>
        <member name="M:Svg.SvgPathBuilder.ToAbsolute(System.Single,System.Single,Svg.Pathing.SvgPathSegmentList,System.Boolean)">
            <summary>
            Creates point with absolute coorindates.
            </summary>
            <param name="x">Raw X-coordinate value.</param>
            <param name="y">Raw Y-coordinate value.</param>
            <param name="segments">Current path segments.</param>
            <param name="isRelativeBoth"><b>true</b> if <paramref name="x"/> and <paramref name="y"/> contains relative coordinate values, otherwise <b>false</b>.</param>
            <returns><see cref="T:System.Drawing.PointF"/> that contains absolute coordinates.</returns>
        </member>
        <member name="M:Svg.SvgPathBuilder.ToAbsolute(System.Single,System.Single,Svg.Pathing.SvgPathSegmentList,System.Boolean,System.Boolean)">
            <summary>
            Creates point with absolute coorindates.
            </summary>
            <param name="x">Raw X-coordinate value.</param>
            <param name="y">Raw Y-coordinate value.</param>
            <param name="segments">Current path segments.</param>
            <param name="isRelativeX"><b>true</b> if <paramref name="x"/> contains relative coordinate value, otherwise <b>false</b>.</param>
            <param name="isRelativeY"><b>true</b> if <paramref name="y"/> contains relative coordinate value, otherwise <b>false</b>.</param>
            <returns><see cref="T:System.Drawing.PointF"/> that contains absolute coordinates.</returns>
        </member>
        <member name="T:Svg.SvgRenderer">
            <summary>
            Convenience wrapper around a graphics object
            </summary>
        </member>
        <member name="M:Svg.SvgRenderer.#ctor(System.Drawing.Graphics)">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.ISvgRenderer"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgRenderer.FromImage(System.Drawing.Image)">
            <summary>
            Creates a new <see cref="T:Svg.ISvgRenderer"/> from the specified <see cref="T:System.Drawing.Image"/>.
            </summary>
            <param name="image"><see cref="T:System.Drawing.Image"/> from which to create the new <see cref="T:Svg.ISvgRenderer"/>.</param>
        </member>
        <member name="M:Svg.SvgRenderer.FromGraphics(System.Drawing.Graphics)">
            <summary>
            Creates a new <see cref="T:Svg.ISvgRenderer"/> from the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:System.Drawing.Graphics"/> to create the renderer from.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Svg.SvgShapeRendering" -->
        <member name="F:Svg.SvgShapeRendering.Inherit">
            <summary>
            Indicates that the SVG shape rendering properties from the parent will be used.
            </summary>
            <AnitAlias>Based of parent. If parents are also not set, then <see cref="F:Svg.SvgShapeRendering.Auto"/></AnitAlias>
        </member>
        <member name="F:Svg.SvgShapeRendering.Auto">
            <summary>
            Indicates that the user agent shall make appropriate tradeoffs to balance speed, crisp edges and geometric precision, but with geometric precision given more importance than speed and crisp edges.
            </summary>
            <AnitAlias>true</AnitAlias>
        </member>
        <member name="F:Svg.SvgShapeRendering.OptimizeSpeed">
            <summary>
            Indicates that the user agent shall emphasize rendering speed over geometric precision and crisp edges. This option will sometimes cause the user agent to turn off shape anti-aliasing.
            </summary>
            <AnitAlias>false</AnitAlias>
        </member>
        <member name="F:Svg.SvgShapeRendering.CrispEdges">
            <summary>
            Indicates that the user agent shall attempt to emphasize the contrast between clean edges of artwork over rendering speed and geometric precision. To achieve crisp edges, the user agent might turn off anti-aliasing for all lines and curves or possibly just for straight lines which are close to vertical or horizontal. Also, the user agent might adjust line positions and line widths to align edges with device pixels.
            </summary>
            <AnitAlias>false</AnitAlias>
        </member>
        <member name="F:Svg.SvgShapeRendering.GeometricPrecision">
            <summary>
            Indicates that the user agent shall emphasize geometric precision over speed and crisp edges.
            </summary>
            <AnitAlias>false</AnitAlias>
        </member>
        <member name="T:Svg.SvgTextRendering">
            <summary>
            The creator of SVG content might want to provide a hint about what tradeoffs to make as the browser renders text. The text-rendering attribute provides these hints.
            </summary>
            <references>https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-rendering</references>
            <remarks>Not Implemented yet.</remarks>
        </member>
        <member name="F:Svg.SvgTextRendering.Inherit">
            <summary>
            Indicates that the SVG shape rendering properties from the parent will be used.
            </summary>
        </member>
        <member name="F:Svg.SvgTextRendering.Auto">
            <summary>
            Indicates that the browser shall make appropriate tradeoffs to balance speed, legibility and geometric precision, but with legibility given more importance than speed and geometric precision.
            </summary>
        </member>
        <member name="F:Svg.SvgTextRendering.OptimizeSpeed">
            <summary>
            Indicates that the user agent shall emphasize rendering speed over legibility and geometric precision. This option will sometimes cause some browsers to turn off text anti-aliasing.
            </summary>
        </member>
        <member name="F:Svg.SvgTextRendering.OptimizeLegibility">
            <summary>
            Indicates that the browser shall emphasize legibility over rendering speed and geometric precision. The user agent will often choose whether to apply anti-aliasing techniques, built-in font hinting or both to produce the most legible text.
            </summary>
        </member>
        <member name="F:Svg.SvgTextRendering.GeometricPrecision">
            <summary>
            Indicates that the browser shall emphasize geometric precision over legibility and rendering speed. This option will usually cause the user agent to suspend the use of hinting so that glyph outlines are drawn with comparable geometric precision to the rendering of path data.
            </summary>
        </member>
        <member name="T:Svg.SvgImageRendering">
            <summary>
            The image-rendering attribute provides a hint to the browser about how to make speed vs. quality tradeoffs as it performs image processing.
            </summary>
            <references>https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/image-rendering</references>
            <remarks>Not Implemented yet.</remarks>
        </member>
        <member name="F:Svg.SvgImageRendering.Inherit">
            <summary>
            Indicates that the SVG shape rendering properties from the parent will be used.
            </summary>
        </member>
        <member name="F:Svg.SvgImageRendering.Auto">
            <summary>
            Indicates that the user agent shall make appropriate tradeoffs to balance speed and quality, but quality shall be given more importance than speed.
            </summary>
        </member>
        <member name="F:Svg.SvgImageRendering.OptimizeSpeed">
            <summary>
            Indicates that the user agent shall emphasize rendering speed over quality.
            </summary>
        </member>
        <member name="F:Svg.SvgImageRendering.OptimizeQuality">
            <summary>
            Indicates that the user agent shall emphasize quality over rendering speed.
            </summary>
        </member>
        <member name="T:Svg.SvgAttributeAttribute">
            <summary>
            Specifies the SVG attribute name of the associated property.
            </summary>
        </member>
        <member name="F:Svg.SvgAttributeAttribute.SvgNamespace">
            <summary>
            Gets a <see cref="T:System.String"/> containing the XLink namespace (http://www.w3.org/1999/xlink).
            </summary>
        </member>
        <member name="M:Svg.SvgAttributeAttribute.Match(System.Object)">
            <summary>
            When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.
            </summary>
            <param name="obj">An <see cref="T:System.Object"/> to compare with this instance of <see cref="T:System.Attribute"/>.</param>
            <returns>
            true if this instance equals <paramref name="obj"/>; otherwise, false.
            </returns>
        </member>
        <member name="P:Svg.SvgAttributeAttribute.NamespaceAndName">
            <summary>
            Gets the name of the SVG attribute.
            </summary>
        </member>
        <member name="P:Svg.SvgAttributeAttribute.Name">
            <summary>
            Gets the name of the SVG attribute.
            </summary>
        </member>
        <member name="P:Svg.SvgAttributeAttribute.NameSpace">
            <summary>
            Gets the namespace of the SVG attribute.
            </summary>
        </member>
        <member name="M:Svg.SvgAttributeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgAttributeAttribute"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgAttributeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgAttributeAttribute"/> class with the specified attribute name.
            </summary>
            <param name="name">The name of the SVG attribute.</param>
        </member>
        <member name="M:Svg.SvgAttributeAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgAttributeAttribute"/> class with the specified SVG attribute name and namespace.
            </summary>
            <param name="name">The name of the SVG attribute.</param>
            <param name="nameSpace">The namespace of the SVG attribute (e.g. http://www.w3.org/2000/svg).</param>
        </member>
        <member name="T:Svg.SvgAttributeCollection">
            <summary>
            A collection of Scalable Vector Attributes that can be inherited from the owner elements ancestors.
            </summary>
        </member>
        <member name="M:Svg.SvgAttributeCollection.#ctor(Svg.SvgElement)">
            <summary>
            Initialises a new instance of a <see cref="T:Svg.SvgAttributeCollection"/> with the given <see cref="T:Svg.SvgElement"/> as the owner.
            </summary>
            <param name="owner">The <see cref="T:Svg.SvgElement"/> owner of the collection.</param>
        </member>
        <member name="M:Svg.SvgAttributeCollection.GetAttribute``1(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <typeparam name="TAttributeType">The type of the attribute value.</typeparam>
            <param name="attributeName">A <see cref="T:System.String"/> containing the name of the attribute.</param>
            <returns>The attribute value if available; otherwise the default value of <typeparamref name="TAttributeType"/>.</returns>
        </member>
        <member name="M:Svg.SvgAttributeCollection.GetAttribute``1(System.String,``0)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <typeparam name="T">The type of the attribute value.</typeparam>
            <param name="attributeName">A <see cref="T:System.String"/> containing the name of the attribute.</param>
            <param name="defaultValue">The value to return if a value hasn't already been specified.</param>
            <returns>The attribute value if available; otherwise the default value of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Svg.SvgAttributeCollection.GetInheritedAttribute``1(System.String)">
            <summary>
            Gets the attribute with the specified name and inherits from ancestors if there is no attribute set.
            </summary>
            <typeparam name="TAttributeType">The type of the attribute value.</typeparam>
            <param name="attributeName">A <see cref="T:System.String"/> containing the name of the attribute.</param>
            <returns>The attribute value if available; otherwise the ancestors value for the same attribute; otherwise the default value of <typeparamref name="TAttributeType"/>.</returns>
        </member>
        <member name="P:Svg.SvgAttributeCollection.Item(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="attributeName">A <see cref="T:System.String"/> containing the attribute name.</param>
            <returns>The attribute value associated with the specified name; If there is no attribute the parent's value will be inherited.</returns>
        </member>
        <member name="E:Svg.SvgAttributeCollection.AttributeChanged">
            <summary>
            Fired when an Atrribute has changed
            </summary>
        </member>
        <member name="T:Svg.SvgCustomAttributeCollection">
            <summary>
            A collection of Custom Attributes
            </summary>
        </member>
        <member name="M:Svg.SvgCustomAttributeCollection.#ctor(Svg.SvgElement)">
            <summary>
            Initialises a new instance of a <see cref="T:Svg.SvgAttributeCollection"/> with the given <see cref="T:Svg.SvgElement"/> as the owner.
            </summary>
            <param name="owner">The <see cref="T:Svg.SvgElement"/> owner of the collection.</param>
        </member>
        <member name="P:Svg.SvgCustomAttributeCollection.Item(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="attributeName">A <see cref="T:System.String"/> containing the attribute name.</param>
            <returns>The attribute value associated with the specified name; If there is no attribute the parent's value will be inherited.</returns>
        </member>
        <member name="E:Svg.SvgCustomAttributeCollection.AttributeChanged">
            <summary>
            Fired when an Atrribute has changed
            </summary>
        </member>
        <member name="M:Svg.SvgContentNode.DeepCopy">
            <summary>
            Create a deep copy of this <see cref="T:Svg.ISvgNode"/>.
            </summary>
            <returns>A deep copy of this <see cref="T:Svg.ISvgNode"/></returns>
        </member>
        <member name="T:Svg.SvgDefaults">
            <summary>
            Holds a dictionary of the default values of the SVG specification 
            </summary>
        </member>
        <member name="M:Svg.SvgDefaults.IsDefault(System.String,System.String)">
            <summary>
            Checks whether the property value is the default value of the svg definition.
            </summary>
            <param name="attributeName">Name of the svg attribute</param>
            <param name="propertyValue">.NET value of the attribute</param>
        </member>
        <member name="T:Svg.SvgDocument">
            <summary>
            The class used to create and load SVG documents.
            </summary>
        </member>
        <member name="M:Svg.SvgDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgDocument"/> class.
            </summary>
        </member>
        <member name="P:Svg.SvgDocument.IdManager">
            <summary>
            Gets an <see cref="T:Svg.SvgElementIdManager"/> for this document.
            </summary>
        </member>
        <member name="M:Svg.SvgDocument.OverwriteIdManager(Svg.SvgElementIdManager)">
            <summary>
            Overwrites the current IdManager with a custom implementation. 
            Be careful with this: If elements have been inserted into the document before,
            you have to take care that the new IdManager also knows of them.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="P:Svg.SvgDocument.Ppi">
            <summary>
            Gets or sets the Pixels Per Inch of the rendered image.
            </summary>
        </member>
        <member name="P:Svg.SvgDocument.ExternalCSSHref">
            <summary>
            Gets or sets an external Cascading Style Sheet (CSS)
            </summary>
        </member>
        <member name="M:Svg.SvgDocument.GetElementById(System.String)">
            <summary>
            Retrieves the <see cref="T:Svg.SvgElement"/> with the specified ID.
            </summary>
            <param name="id">A <see cref="T:System.String"/> containing the ID of the element to find.</param>
            <returns>An <see cref="T:Svg.SvgElement"/> of one exists with the specified ID; otherwise false.</returns>
        </member>
        <member name="M:Svg.SvgDocument.GetElementById``1(System.String)">
            <summary>
            Retrieves the <see cref="T:Svg.SvgElement"/> with the specified ID.
            </summary>
            <param name="id">A <see cref="T:System.String"/> containing the ID of the element to find.</param>
            <returns>An <see cref="T:Svg.SvgElement"/> of one exists with the specified ID; otherwise false.</returns>
        </member>
        <member name="M:Svg.SvgDocument.Open(System.String)">
            <summary>
            Opens the document at the specified path and loads the SVG contents.
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the path of the file to open.</param>
            <returns>An <see cref="T:Svg.SvgDocument"/> with the contents loaded.</returns>
            <exception cref="T:System.IO.FileNotFoundException">The document at the specified <paramref name="path"/> cannot be found.</exception>
        </member>
        <member name="M:Svg.SvgDocument.Open``1(System.String)">
            <summary>
            Opens the document at the specified path and loads the SVG contents.
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the path of the file to open.</param>
            <returns>An <see cref="T:Svg.SvgDocument"/> with the contents loaded.</returns>
            <exception cref="T:System.IO.FileNotFoundException">The document at the specified <paramref name="path"/> cannot be found.</exception>
        </member>
        <member name="M:Svg.SvgDocument.Open``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Opens the document at the specified path and loads the SVG contents.
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the path of the file to open.</param>
            <param name="entities">A dictionary of custom entity definitions to be used when resolving XML entities within the document.</param>
            <returns>An <see cref="T:Svg.SvgDocument"/> with the contents loaded.</returns>
            <exception cref="T:System.IO.FileNotFoundException">The document at the specified <paramref name="path"/> cannot be found.</exception>
        </member>
        <member name="M:Svg.SvgDocument.Open``1(System.IO.Stream)">
            <summary>
            Attempts to open an SVG document from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> containing the SVG document to open.</param>
        </member>
        <member name="M:Svg.SvgDocument.FromSvg``1(System.String)">
            <summary>
            Attempts to create an SVG document from the specified string data.
            </summary>
            <param name="svg">The SVG data.</param>
        </member>
        <member name="M:Svg.SvgDocument.Open``1(System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Opens an SVG document from the specified <see cref="T:System.IO.Stream"/> and adds the specified entities.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> containing the SVG document to open.</param>
            <param name="entities">Custom entity definitions.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> parameter cannot be <c>null</c>.</exception>
        </member>
        <member name="M:Svg.SvgDocument.Open(System.Xml.XmlDocument)">
            <summary>
            Opens an SVG document from the specified <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <param name="document">The <see cref="T:System.Xml.XmlDocument"/> containing the SVG document XML.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="document"/> parameter cannot be <c>null</c>.</exception>
        </member>
        <member name="M:Svg.SvgDocument.Draw(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgDocument"/> to the specified <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to render the document with.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="renderer"/> parameter cannot be <c>null</c>.</exception>
        </member>
        <member name="M:Svg.SvgDocument.Draw(System.Drawing.Graphics)">
            <summary>
            Renders the <see cref="T:Svg.SvgDocument"/> to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:System.Drawing.Graphics"/> to be rendered to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="graphics"/> parameter cannot be <c>null</c>.</exception>
        </member>
        <member name="M:Svg.SvgDocument.Draw">
            <summary>
            Renders the <see cref="T:Svg.SvgDocument"/> and returns the image as a <see cref="T:System.Drawing.Bitmap"/>.
            </summary>
            <returns>A <see cref="T:System.Drawing.Bitmap"/> containing the rendered document.</returns>
        </member>
        <member name="M:Svg.SvgDocument.Draw(System.Drawing.Bitmap)">
            <summary>
            Renders the <see cref="T:Svg.SvgDocument"/> into a given Bitmap <see cref="T:System.Drawing.Bitmap"/>.
            </summary>
        </member>
        <member name="M:Svg.SvgDocument.Draw(System.Int32,System.Int32)">
            <summary>
            Renders the <see cref="T:Svg.SvgDocument"/> in given size and returns the image as a <see cref="T:System.Drawing.Bitmap"/>.
            </summary>
            <returns>A <see cref="T:System.Drawing.Bitmap"/> containing the rendered document.</returns>
        </member>
        <member name="M:Svg.SvgDocument.RasterizeDimensions(System.Drawing.SizeF@,System.Int32,System.Int32)">
            <summary>
            If both or one of raster height and width is not given (0), calculate that missing value from original SVG size
            while keeping original SVG size ratio
            </summary>
            <param name="size"></param>
            <param name="rasterWidth"></param>
            <param name="rasterHeight"></param>
        </member>
        <member name="M:Svg.SvgDtdResolver.GetEntity(System.Uri,System.String,System.Type)">
            <summary>
            Maps a URI to an object containing the actual resource.
            </summary>
            <param name="absoluteUri">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)"/></param>
            <param name="role">The current implementation does not use this parameter when resolving URIs. This is provided for future extensibility purposes. For example, this can be mapped to the xlink:role and used as an implementation specific argument in other scenarios.</param>
            <param name="ofObjectToReturn">The type of object to return. The current implementation only returns System.IO.Stream objects.</param>
            <returns>
            A System.IO.Stream object or null if a type other than stream is specified.
            </returns>
            <exception cref="T:System.Xml.XmlException">
            	<paramref name="ofObjectToReturn"/> is neither null nor a Stream type. </exception>
            <exception cref="T:System.UriFormatException">The specified URI is not an absolute URI. </exception>
            <exception cref="T:System.NullReferenceException">
            	<paramref name="absoluteUri"/> is null. </exception>
            <exception cref="T:System.Exception">There is a runtime error (for example, an interrupted server connection). </exception>
        </member>
        <member name="T:Svg.SvgElement">
            <summary>
            The base class of which all SVG elements are derived from.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.ElementName">
            <summary>
            Gets the name of the element.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.Color">
            <summary>
            Gets or sets the color <see cref="T:Svg.SvgPaintServer"/> of this element which drives the currentColor property.
            </summary>
        </member>
        <member name="F:Svg.SvgElement._content">
            <summary>
            Gets or sets the content of the element.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.Events">
            <summary>
            Gets an <see cref="T:System.ComponentModel.EventHandlerList"/> of all events belonging to the element.
            </summary>
        </member>
        <member name="E:Svg.SvgElement.Load">
            <summary>
            Occurs when the element is loaded.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.Children">
            <summary>
            Gets a collection of all child <see cref="!:SvgElements"/>.
            </summary>
        </member>
        <member name="M:Svg.SvgElement.HasChildren">
            <summary>
            Gets a value to determine whether the element has children.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.Parent">
            <summary>
            Gets the parent <see cref="T:Svg.SvgElement"/>.
            </summary>
            <value>An <see cref="T:Svg.SvgElement"/> if one exists; otherwise null.</value>
        </member>
        <member name="P:Svg.SvgElement.OwnerDocument">
            <summary>
            Gets the owner <see cref="T:Svg.SvgDocument"/>.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.Attributes">
            <summary>
            Gets a collection of element attributes.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.CustomAttributes">
            <summary>
            Gets a collection of custom attributes
            </summary>
        </member>
        <member name="M:Svg.SvgElement.PushTransforms(Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="M:Svg.SvgElement.PopTransforms(Svg.ISvgRenderer)">
            <summary>
            Removes any previously applied transforms from the specified <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> that should have transforms removed.</param>
        </member>
        <member name="M:Svg.SvgElement.Svg#ISvgTransformable#PushTransforms(Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="M:Svg.SvgElement.Svg#ISvgTransformable#PopTransforms(Svg.ISvgRenderer)">
            <summary>
            Removes any previously applied transforms from the specified <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> that should have transforms removed.</param>
        </member>
        <member name="P:Svg.SvgElement.Transforms">
            <summary>
            Gets or sets the element transforms.
            </summary>
            <value>The transforms.</value>
        </member>
        <member name="P:Svg.SvgElement.ID">
            <summary>
            Gets or sets the ID of the element.
            </summary>
            <exception cref="T:Svg.SvgException">The ID is already used within the <see cref="T:Svg.SvgDocument"/>.</exception>
        </member>
        <member name="P:Svg.SvgElement.SpaceHandling">
            <summary>
            Gets or sets the space handling.
            </summary>
            <value>The space handling.</value>
        </member>
        <member name="M:Svg.SvgElement.ForceUniqueID(System.String)">
            <summary>
            Only used by the ID Manager
            </summary>
            <param name="newID"></param>
        </member>
        <member name="M:Svg.SvgElement.AddElement(Svg.SvgElement,System.Int32)">
            <summary>
            Called by the underlying <see cref="T:Svg.SvgElement"/> when an element has been added to the
            <see cref="P:Svg.SvgElement.Children"/> collection.
            </summary>
            <param name="child">The <see cref="T:Svg.SvgElement"/> that has been added.</param>
            <param name="index">An <see cref="T:System.Int32"/> representing the index where the element was added to the collection.</param>
        </member>
        <member name="E:Svg.SvgElement.ChildAdded">
            <summary>
            Fired when an Element was added to the children of this Element
            </summary>
        </member>
        <member name="M:Svg.SvgElement.OnElementAdded(Svg.SvgElement,System.Int32)">
            <summary>
            Calls the <see cref="M:Svg.SvgElement.AddElement(Svg.SvgElement,System.Int32)"/> method with the specified parameters.
            </summary>
            <param name="child">The <see cref="T:Svg.SvgElement"/> that has been added.</param>
            <param name="index">An <see cref="T:System.Int32"/> representing the index where the element was added to the collection.</param>
        </member>
        <member name="M:Svg.SvgElement.RemoveElement(Svg.SvgElement)">
            <summary>
            Called by the underlying <see cref="T:Svg.SvgElement"/> when an element has been removed from the
            <see cref="P:Svg.SvgElement.Children"/> collection.
            </summary>
            <param name="child">The <see cref="T:Svg.SvgElement"/> that has been removed.</param>
        </member>
        <member name="M:Svg.SvgElement.OnElementRemoved(Svg.SvgElement)">
            <summary>
            Calls the <see cref="M:Svg.SvgElement.RemoveElement(Svg.SvgElement)"/> method with the specified <see cref="T:Svg.SvgElement"/> as the parameter.
            </summary>
            <param name="child">The <see cref="T:Svg.SvgElement"/> that has been removed.</param>
        </member>
        <member name="M:Svg.SvgElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgElement"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgElement.RenderElement(Svg.ISvgRenderer)">
            <summary>
            Renders this element to the <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> that the element should use to render itself.</param>
        </member>
        <member name="M:Svg.SvgElement.ShouldWriteElement">
            <summary>Derrived classes may decide that the element should not be written. For example, the text element shouldn't be written if it's empty.</summary>
        </member>
        <member name="M:Svg.SvgElement.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:Svg.SvgElement.RenderChildren(Svg.ISvgRenderer)">
            <summary>
            Renders the children of this <see cref="T:Svg.SvgElement"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to render the child <see cref="T:Svg.SvgElement"/>s to.</param>
        </member>
        <member name="M:Svg.SvgElement.Svg#ISvgElement#Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:Svg.ISvgRenderer"/> object.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
        </member>
        <member name="M:Svg.SvgElement.AddPaths(Svg.SvgElement,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Recursive method to add up the paths of all children
            </summary>
            <param name="elem"></param>
            <param name="path"></param>
        </member>
        <member name="M:Svg.SvgElement.GetPaths(Svg.SvgElement,Svg.ISvgRenderer)">
            <summary>
            Recursive method to add up the paths of all children
            </summary>
            <param name="elem"></param>
            <param name="path"></param>
        </member>
        <member name="M:Svg.SvgElement.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="E:Svg.SvgElement.AttributeChanged">
            <summary>
            Fired when an Atrribute of this Element has changed
            </summary>
        </member>
        <member name="E:Svg.SvgElement.ContentChanged">
            <summary>
            Fired when an Atrribute of this Element has changed
            </summary>
        </member>
        <member name="P:Svg.SvgElement.IsPathDirty">
            <summary>
            Gets or sets a value indicating whether this element's <see cref="!:Path"/> is dirty.
            </summary>
            <value>
            	<c>true</c> if the path is dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Svg.SvgElement.InvalidateChildPaths">
            <summary>
            Force recreation of the paths for the element and it's children.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.Fill">
            <summary>
            Gets or sets the fill <see cref="T:Svg.SvgPaintServer"/> of this element.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.Stroke">
            <summary>
            Gets or sets the <see cref="T:Svg.SvgPaintServer"/> to be used when rendering a stroke around this element.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.FillOpacity">
            <summary>
            Gets or sets the opacity of this element's <see cref="P:Svg.SvgElement.Fill"/>.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.StrokeWidth">
            <summary>
            Gets or sets the width of the stroke (if the <see cref="P:Svg.SvgElement.Stroke"/> property has a valid value specified.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.StrokeOpacity">
            <summary>
            Gets or sets the opacity of the stroke, if the <see cref="P:Svg.SvgElement.Stroke"/> property has been specified. 1.0 is fully opaque; 0.0 is transparent.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.StopColor">
            <summary>
            Gets or sets the colour of the gradient stop.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.Opacity">
            <summary>
            Gets or sets the opacity of the element. 1.0 is fully opaque; 0.0 is transparent.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.ShapeRendering">
            <summary>
            Refers to the AnitAlias rendering of shapes.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.TextAnchor">
            <summary>
            Gets or sets the text anchor.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.BaselineShift">
            <summary>
            Specifies dominant-baseline positioning of text.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.FontFamily">
            <summary>
            Indicates which font family is to be used to render the text.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.FontSize">
            <summary>
            Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.FontStyle">
            <summary>
            Refers to the style of the font.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.FontVariant">
            <summary>
            Refers to the varient of the font.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.TextDecoration">
            <summary>
            Refers to the boldness of the font.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.FontWeight">
            <summary>
            Refers to the boldness of the font.
            </summary>
        </member>
        <member name="P:Svg.SvgElement.Font">
            <summary>
            Set all font information.
            </summary>
        </member>
        <member name="M:Svg.SvgElement.GetFont(Svg.ISvgRenderer)">
            <summary>
            Get the font information based on data stored with the text object or inherited from the parent.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Svg.AttributeEventArgs">
            <summary>
            Describes the Attribute which was set
            </summary>
        </member>
        <member name="T:Svg.ContentEventArgs">
            <summary>
            Content of this whas was set
            </summary>
        </member>
        <member name="T:Svg.ChildAddedEventArgs">
            <summary>
            Describes the Attribute which was set
            </summary>
        </member>
        <member name="T:Svg.MouseArg">
            <summary>
            Represents the state of the mouse at the moment the event occured.
            </summary>
        </member>
        <member name="F:Svg.MouseArg.Button">
            <summary>
            1 = left, 2 = middle, 3 = right
            </summary>
        </member>
        <member name="F:Svg.MouseArg.ClickCount">
            <summary>
            Amount of mouse clicks, e.g. 2 for double click
            </summary>
        </member>
        <member name="F:Svg.MouseArg.AltKey">
            <summary>
            Alt modifier key pressed
            </summary>
        </member>
        <member name="F:Svg.MouseArg.ShiftKey">
            <summary>
            Shift modifier key pressed
            </summary>
        </member>
        <member name="F:Svg.MouseArg.CtrlKey">
            <summary>
            Control modifier key pressed
            </summary>
        </member>
        <member name="T:Svg.StringArg">
            <summary>
            Represents a string argument
            </summary>
        </member>
        <member name="F:Svg.MouseScrollArg.AltKey">
            <summary>
            Alt modifier key pressed
            </summary>
        </member>
        <member name="F:Svg.MouseScrollArg.ShiftKey">
            <summary>
            Shift modifier key pressed
            </summary>
        </member>
        <member name="F:Svg.MouseScrollArg.CtrlKey">
            <summary>
            Control modifier key pressed
            </summary>
        </member>
        <member name="M:Svg.ISvgNode.DeepCopy">
            <summary>
            Create a deep copy of this <see cref="T:Svg.ISvgNode"/>.
            </summary>
            <returns>A deep copy of this <see cref="T:Svg.ISvgNode"/></returns>
        </member>
        <member name="T:Svg.ISvgDescriptiveElement">
            <summary>This interface mostly indicates that a node is not to be drawn when rendering the SVG.</summary>
        </member>
        <member name="T:Svg.SvgElementAttribute">
            <summary>
            Specifies the SVG name of an <see cref="T:Svg.SvgElement"/>.
            </summary>
        </member>
        <member name="P:Svg.SvgElementAttribute.ElementName">
            <summary>
            Gets the name of the SVG element.
            </summary>
        </member>
        <member name="M:Svg.SvgElementAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgElementAttribute"/> class with the specified element name;
            </summary>
            <param name="elementName">The name of the SVG element.</param>
        </member>
        <member name="T:Svg.SvgElementCollection">
            <summary>
            Represents a collection of <see cref="T:Svg.SvgElement"/>s.
            </summary>
        </member>
        <member name="M:Svg.SvgElementCollection.#ctor(Svg.SvgElement)">
            <summary>
            Initialises a new instance of an <see cref="T:Svg.SvgElementCollection"/> class.
            </summary>
            <param name="owner">The owner <see cref="T:Svg.SvgElement"/> of the collection.</param>
        </member>
        <member name="M:Svg.SvgElementCollection.IndexOf(Svg.SvgElement)">
            <summary>
            Returns the index of the specified <see cref="T:Svg.SvgElement"/> in the collection.
            </summary>
            <param name="item">The <see cref="T:Svg.SvgElement"/> to search for.</param>
            <returns>The index of the element if it is present; otherwise -1.</returns>
        </member>
        <member name="M:Svg.SvgElementCollection.Insert(System.Int32,Svg.SvgElement)">
            <summary>
            Inserts the given <see cref="T:Svg.SvgElement"/> to the collection at the specified index.
            </summary>
            <param name="index">The index that the <paramref name="item"/> should be added at.</param>
            <param name="item">The <see cref="T:Svg.SvgElement"/> to be added.</param>
        </member>
        <member name="M:Svg.SvgElementCollection.FindSvgElementsOf``1">
            <summary>
            expensive recursive search for nodes of type T
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Svg.SvgElementCollection.FindSvgElementOf``1">
            <summary>
            expensive recursive search for first node of type T
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Svg.SvgElementFactory">
            <summary>
            Provides the methods required in order to parse and create <see cref="T:Svg.SvgElement"/> instances from XML.
            </summary>
        </member>
        <member name="P:Svg.SvgElementFactory.AvailableElements">
            <summary>
            Gets a list of available types that can be used when creating an <see cref="T:Svg.SvgElement"/>.
            </summary>
        </member>
        <member name="M:Svg.SvgElementFactory.CreateDocument``1(System.Xml.XmlReader)">
            <summary>
            Creates an <see cref="T:Svg.SvgDocument"/> from the current node in the specified <see cref="T:System.Xml.XmlTextReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlTextReader"/> containing the node to parse into an <see cref="T:Svg.SvgDocument"/>.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> parameter cannot be <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">The CreateDocument method can only be used to parse root &lt;svg&gt; elements.</exception>
        </member>
        <member name="M:Svg.SvgElementFactory.CreateElement(System.Xml.XmlReader,Svg.SvgDocument)">
            <summary>
            Creates an <see cref="T:Svg.SvgElement"/> from the current node in the specified <see cref="T:System.Xml.XmlTextReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlTextReader"/> containing the node to parse into a subclass of <see cref="T:Svg.SvgElement"/>.</param>
            <param name="document">The <see cref="T:Svg.SvgDocument"/> that the created element belongs to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> and <paramref name="document"/> parameters cannot be <c>null</c>.</exception>
        </member>
        <member name="T:Svg.SvgElementFactory.ElementInfo">
            <summary>
            Contains information about a type inheriting from <see cref="T:Svg.SvgElement"/>.
            </summary>
        </member>
        <member name="P:Svg.SvgElementFactory.ElementInfo.ElementName">
            <summary>
            Gets the SVG name of the <see cref="T:Svg.SvgElement"/>.
            </summary>
        </member>
        <member name="P:Svg.SvgElementFactory.ElementInfo.ElementType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the <see cref="T:Svg.SvgElement"/> subclass.
            </summary>
        </member>
        <member name="M:Svg.SvgElementFactory.ElementInfo.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgElementFactory.ElementInfo"/> struct.
            </summary>
            <param name="elementName">Name of the element.</param>
            <param name="elementType">Type of the element.</param>
        </member>
        <member name="M:Svg.SvgElementFactory.ElementInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgElementFactory.ElementInfo"/> class.
            </summary>
        </member>
        <member name="T:Svg.SvgElementIdManager">
            <summary>
            Provides methods to ensure element ID's are valid and unique.
            </summary>
        </member>
        <member name="M:Svg.SvgElementIdManager.GetElementById(System.String)">
            <summary>
            Retrieves the <see cref="T:Svg.SvgElement"/> with the specified ID.
            </summary>
            <param name="id">A <see cref="T:System.String"/> containing the ID of the element to find.</param>
            <returns>An <see cref="T:Svg.SvgElement"/> of one exists with the specified ID; otherwise false.</returns>
        </member>
        <member name="M:Svg.SvgElementIdManager.Add(Svg.SvgElement)">
            <summary>
            Adds the specified <see cref="T:Svg.SvgElement"/> for ID management.
            </summary>
            <param name="element">The <see cref="T:Svg.SvgElement"/> to be managed.</param>
        </member>
        <member name="M:Svg.SvgElementIdManager.AddAndForceUniqueID(Svg.SvgElement,Svg.SvgElement,System.Boolean,System.Action{Svg.SvgElement,System.String,System.String})">
            <summary>
            Adds the specified <see cref="T:Svg.SvgElement"/> for ID management. 
            And can auto fix the ID if it already exists or it starts with a number.
            </summary>
            <param name="element">The <see cref="T:Svg.SvgElement"/> to be managed.</param>
            <param name="autoForceUniqueID">Pass true here, if you want the ID to be fixed</param>
            <param name="logElementOldIDNewID">If not null, the action is called before the id is fixed</param>
            <returns>true, if ID was altered</returns>
        </member>
        <member name="M:Svg.SvgElementIdManager.Remove(Svg.SvgElement)">
            <summary>
            Removed the specified <see cref="T:Svg.SvgElement"/> from ID management.
            </summary>
            <param name="element">The <see cref="T:Svg.SvgElement"/> to be removed from ID management.</param>
        </member>
        <member name="M:Svg.SvgElementIdManager.EnsureValidId(System.String,System.Boolean)">
            <summary>
            Ensures that the specified ID is valid within the containing <see cref="T:Svg.SvgDocument"/>.
            </summary>
            <param name="id">A <see cref="T:System.String"/> containing the ID to validate.</param>
            <param name="autoForceUniqueID">Creates a new unique id <see cref="T:System.String"/>.</param>
            <exception cref="T:Svg.SvgException">
            <para>The ID cannot start with a digit.</para>
            <para>An element with the same ID already exists within the containing <see cref="T:Svg.SvgDocument"/>.</para>
            </exception>
        </member>
        <member name="M:Svg.SvgElementIdManager.#ctor(Svg.SvgDocument)">
            <summary>
            Initialises a new instance of an <see cref="T:Svg.SvgElementIdManager"/>.
            </summary>
            <param name="document">The <see cref="T:Svg.SvgDocument"/> containing the <see cref="T:Svg.SvgElement"/>s to manage.</param>
        </member>
        <member name="T:Svg.SvgExtentions">
            <summary>
            Svg helpers
            </summary>
        </member>
        <member name="P:Svg.SvgNodeReader.Value">
            <summary>
            Gets the text value of the current node.
            </summary>
            <value></value>
            <returns>The value returned depends on the <see cref="P:System.Xml.XmlTextReader.NodeType"/> of the node. The following table lists node types that have a value to return. All other node types return String.Empty.Node Type Value AttributeThe value of the attribute. CDATAThe content of the CDATA section. CommentThe content of the comment. DocumentTypeThe internal subset. ProcessingInstructionThe entire content, excluding the target. SignificantWhitespaceThe white space within an xml:space= 'preserve' scope. TextThe content of the text node. WhitespaceThe white space between markup. XmlDeclarationThe content of the declaration. </returns>
        </member>
        <member name="P:Svg.SvgNodeReader.LocalName">
            <summary>
            Gets the local name of the current node.
            </summary>
            <value></value>
            <returns>The name of the current node with the prefix removed. For example, LocalName is book for the element &lt;bk:book&gt;.For node types that do not have a name (like Text, Comment, and so on), this property returns String.Empty.</returns>
        </member>
        <member name="M:Svg.SvgNodeReader.MoveToNextAttribute">
            <summary>
            Moves to the next attribute.
            </summary>
            <returns>
            true if there is a next attribute; false if there are no more attributes.
            </returns>
        </member>
        <member name="M:Svg.SvgNodeReader.Read">
            <summary>
            Reads the next node from the stream.
            </summary>
            <returns>
            true if the next node was read successfully; false if there are no more nodes to read.
            </returns>
            <exception cref="T:System.Xml.XmlException">An error occurred while parsing the XML. </exception>
        </member>
        <member name="M:Svg.SvgNodeReader.ResolveEntity">
            <summary>
            Resolves the entity reference for EntityReference nodes.
            </summary>
        </member>
        <member name="P:Svg.SvgTextReader.Value">
            <summary>
            Gets the text value of the current node.
            </summary>
            <value></value>
            <returns>The value returned depends on the <see cref="P:System.Xml.XmlTextReader.NodeType"/> of the node. The following table lists node types that have a value to return. All other node types return String.Empty.Node Type Value AttributeThe value of the attribute. CDATAThe content of the CDATA section. CommentThe content of the comment. DocumentTypeThe internal subset. ProcessingInstructionThe entire content, excluding the target. SignificantWhitespaceThe white space within an xml:space= 'preserve' scope. TextThe content of the text node. WhitespaceThe white space between markup. XmlDeclarationThe content of the declaration. </returns>
        </member>
        <member name="P:Svg.SvgTextReader.LocalName">
            <summary>
            Gets the local name of the current node.
            </summary>
            <value></value>
            <returns>The name of the current node with the prefix removed. For example, LocalName is book for the element &lt;bk:book&gt;.For node types that do not have a name (like Text, Comment, and so on), this property returns String.Empty.</returns>
        </member>
        <member name="M:Svg.SvgTextReader.MoveToNextAttribute">
            <summary>
            Moves to the next attribute.
            </summary>
            <returns>
            true if there is a next attribute; false if there are no more attributes.
            </returns>
        </member>
        <member name="M:Svg.SvgTextReader.Read">
            <summary>
            Reads the next node from the stream.
            </summary>
            <returns>
            true if the next node was read successfully; false if there are no more nodes to read.
            </returns>
            <exception cref="T:System.Xml.XmlException">An error occurred while parsing the XML. </exception>
        </member>
        <member name="M:Svg.SvgTextReader.ResolveEntity">
            <summary>
            Resolves the entity reference for EntityReference nodes.
            </summary>
        </member>
        <member name="T:Svg.Text.FontFamily">
            <summary>
            http://stackoverflow.com/questions/3633000/net-enumerate-winforms-font-styles
            </summary>
        </member>
        <member name="M:Svg.PathStatistics.CubicBezierSegment.GaussianQuadrature(System.Func{System.Double,System.Double},System.Double,System.Double,System.Int32)">
            <summary>
            Evaluates the integral of the function over the integral using the specified number of points
            </summary>
            <param name="func"></param>
            <param name="a"></param>
            <param name="b"></param>
            <param name="points"></param>
        </member>
        <member name="M:Svg.PathStatistics.CubicBezierSegment.CubicBezierCurve(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Double)">
            <remarks>http://en.wikipedia.org/wiki/B%C3%A9zier_curve</remarks>
        </member>
        <member name="M:Svg.PathStatistics.CubicBezierSegment.CubicBezierDerivative(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Double)">
            <remarks>http://www.cs.mtu.edu/~shene/COURSES/cs3621/NOTES/spline/Bezier/bezier-der.html</remarks>
        </member>
        <member name="P:Svg.SvgFontFace.FontFamily">
            <summary>
            Indicates which font family is to be used to render the text.
            </summary>
        </member>
        <member name="P:Svg.SvgFontFace.FontSize">
            <summary>
            Refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment.
            </summary>
        </member>
        <member name="P:Svg.SvgFontFace.FontStyle">
            <summary>
            Refers to the style of the font.
            </summary>
        </member>
        <member name="P:Svg.SvgFontFace.FontVariant">
            <summary>
            Refers to the varient of the font.
            </summary>
        </member>
        <member name="P:Svg.SvgFontFace.FontWeight">
            <summary>
            Refers to the boldness of the font.
            </summary>
        </member>
        <member name="P:Svg.SvgGlyph.PathData">
            <summary>
            Gets or sets a <see cref="T:Svg.Pathing.SvgPathSegmentList"/> of path data.
            </summary>
        </member>
        <member name="M:Svg.SvgGlyph.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
        </member>
        <member name="M:Svg.SvgGlyph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgGlyph"/> class.
            </summary>
        </member>
        <member name="T:Svg.SvgText">
            <summary>
            The <see cref="T:Svg.SvgText"/> element defines a graphics element consisting of text.
            </summary>
        </member>
        <member name="M:Svg.SvgText.#ctor">
            <summary>
            Initializes the <see cref="T:Svg.SvgText"/> class.
            </summary>
        </member>
        <member name="M:Svg.SvgText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Svg.SvgText"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="T:Svg.SvgTextAnchor">
            <summary>
            Text anchor is used to align (start-, middle- or end-alignment) a string of text relative to a given point.
            </summary>
        </member>
        <member name="F:Svg.SvgTextAnchor.Inherit">
            <summary>The value is inherited from the parent element.</summary>
        </member>
        <member name="F:Svg.SvgTextAnchor.Start">
            <summary>
            The rendered characters are aligned such that the start of the text string is at the initial current text position.
            </summary>
        </member>
        <member name="F:Svg.SvgTextAnchor.Middle">
            <summary>
            The rendered characters are aligned such that the middle of the text string is at the current text position.
            </summary>
        </member>
        <member name="F:Svg.SvgTextAnchor.End">
            <summary>
            The rendered characters are aligned such that the end of the text string is at the initial current text position.
            </summary>
        </member>
        <member name="P:Svg.SvgTextBase.Text">
            <summary>
            Gets or sets the text to be rendered.
            </summary>
        </member>
        <member name="P:Svg.SvgTextBase.X">
            <summary>
            Gets or sets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Svg.SvgTextBase.Dx">
            <summary>
            Gets or sets the dX.
            </summary>
            <value>The dX.</value>
        </member>
        <member name="P:Svg.SvgTextBase.Y">
            <summary>
            Gets or sets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:Svg.SvgTextBase.Dy">
            <summary>
            Gets or sets the dY.
            </summary>
            <value>The dY.</value>
        </member>
        <member name="P:Svg.SvgTextBase.Rotate">
            <summary>
            Gets or sets the rotate.
            </summary>
            <value>The rotate.</value>
        </member>
        <member name="P:Svg.SvgTextBase.TextLength">
            <summary>
            The pre-calculated length of the text
            </summary>
        </member>
        <member name="P:Svg.SvgTextBase.LengthAdjust">
            <summary>
            Gets or sets the text anchor.
            </summary>
            <value>The text anchor.</value>
        </member>
        <member name="P:Svg.SvgTextBase.LetterSpacing">
            <summary>
            Specifies spacing behavior between text characters.
            </summary>
        </member>
        <member name="P:Svg.SvgTextBase.WordSpacing">
            <summary>
            Specifies spacing behavior between words.
            </summary>
        </member>
        <member name="P:Svg.SvgTextBase.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <remarks>
            <para>Unlike other <see cref="!:SvgGraphicsElement"/>s, <see cref="T:Svg.SvgText"/> has a default fill of black rather than transparent.</para>
            </remarks>
            <value>The fill.</value>
        </member>
        <member name="M:Svg.SvgTextBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Svg.SvgTextBase.Bounds">
            <summary>
            Gets the bounds of the element.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="M:Svg.SvgTextBase.Render(Svg.ISvgRenderer)">
            <summary>
            Renders the <see cref="T:Svg.SvgElement"/> and contents to the specified <see cref="T:System.Drawing.Graphics"/> object.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> object to render to.</param>
            <remarks>Necessary to make sure that any internal tspan elements get rendered as well</remarks>
        </member>
        <member name="M:Svg.SvgTextBase.Path(Svg.ISvgRenderer)">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for this element.
            </summary>
            <value></value>
        </member>
        <member name="M:Svg.SvgTextBase.SetPath(Svg.SvgTextBase.TextDrawingState,System.Boolean)">
            <summary>
            Sets the path on this element and all child elements.  Uses the state
            object to track the state of the drawing
            </summary>
            <param name="state">State of the drawing operation</param>
        </member>
        <member name="M:Svg.SvgTextBase.PrepareText(System.String)">
            <summary>
            Prepare the text according to the whitespace handling rules.  <see href="http://www.w3.org/TR/SVG/text.html">SVG Spec</see>.
            </summary>
            <param name="value">Text to be prepared</param>
            <returns>Prepared text</returns>
        </member>
        <member name="M:Svg.SvgTextBase.ShouldWriteElement">
            <summary>Empty text elements are not legal - only write this element if it has children.</summary>
        </member>
        <member name="T:Svg.SvgTextPath">
            <summary>
            The <see cref="T:Svg.SvgText"/> element defines a graphics element consisting of text.
            </summary>
        </member>
        <member name="T:Svg.ISvgTransformable">
            <summary>
            Represents and element that may be transformed.
            </summary>
        </member>
        <member name="P:Svg.ISvgTransformable.Transforms">
            <summary>
            Gets or sets an <see cref="T:Svg.Transforms.SvgTransformCollection"/> of element transforms.
            </summary>
        </member>
        <member name="M:Svg.ISvgTransformable.PushTransforms(Svg.ISvgRenderer)">
            <summary>
            Applies the required transforms to <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> to be transformed.</param>
        </member>
        <member name="M:Svg.ISvgTransformable.PopTransforms(Svg.ISvgRenderer)">
            <summary>
            Removes any previously applied transforms from the specified <see cref="T:Svg.ISvgRenderer"/>.
            </summary>
            <param name="renderer">The <see cref="T:Svg.ISvgRenderer"/> that should have transforms removed.</param>
        </member>
        <member name="T:Svg.Transforms.SvgMatrix">
            <summary>
            The class which applies custom transform to this Matrix (Required for projects created by the Inkscape).
            </summary>
        </member>
        <member name="T:Svg.Transforms.SvgShear">
            <summary>
            The class which applies the specified shear vector to this Matrix.
            </summary>
        </member>
        <member name="T:Svg.Transforms.SvgSkew">
            <summary>
            The class which applies the specified skew vector to this Matrix.
            </summary>
        </member>
        <member name="M:Svg.Transforms.SvgTransformCollection.GetMatrix">
            <summary>
            Multiplies all matrices
            </summary>
            <returns>The result of all transforms</returns>
        </member>
        <member name="E:Svg.Transforms.SvgTransformCollection.TransformChanged">
            <summary>
            Fired when an SvgTransform has changed
            </summary>
        </member>
        <member name="M:Svg.Transforms.SvgTransformConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:ExCSS.Model.Specification.IsNonPrintable(System.Char)">
            The maximum allowed codepoint (defined in Unicode).
        </member>
        <member name="M:ExCSS.HtmlColor.ToCss(System.Boolean)">
            <summary>
            Return the shortest form possible
            </summary>
        </member>
        <member name="T:ExCSS.TermList.TermSeparator">
            <summary>
            exposed enumeration for the adding of separators into term lists
            </summary>
        </member>
        <member name="T:Fizzler.HumanReadableSelectorGenerator">
            <summary>
            An <see cref="T:Fizzler.ISelectorGenerator"/> implementation that generates
            human-readable description of the selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.OnInit">
            <summary>
            Initializes the text.
            </summary>
        </member>
        <member name="P:Fizzler.HumanReadableSelectorGenerator.Text">
            <summary>
            Gets the generated human-readable description text.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.OnSelector">
            <summary>
            Generates human-readable for a selector in a group.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.OnClose">
            <summary>
            Concludes the text.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.Add(System.String)">
            <summary>
            Adds to the generated human-readable text.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.Type(Fizzler.NamespacePrefix,System.String)">
            <summary>
            Generates human-readable text of this type selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.Universal(Fizzler.NamespacePrefix)">
            <summary>
            Generates human-readable text of this universal selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.Id(System.String)">
            <summary>
            Generates human-readable text of this ID selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.Fizzler#ISelectorGenerator#Class(System.String)">
            <summary>
            Generates human-readable text of this class selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.AttributeExists(Fizzler.NamespacePrefix,System.String)">
            <summary>
            Generates human-readable text of this attribute selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.AttributeExact(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates human-readable text of this attribute selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.AttributeIncludes(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates human-readable text of this attribute selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.AttributeDashMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates human-readable text of this attribute selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.AttributePrefixMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates human-readable text of this attribute selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.AttributeSuffixMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates human-readable text of this attribute selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.AttributeSubstring(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates human-readable text of this attribute selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.FirstChild">
            <summary>
            Generates human-readable text of this pseudo-class selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.LastChild">
            <summary>
            Generates human-readable text of this pseudo-class selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.NthChild(System.Int32,System.Int32)">
            <summary>
            Generates human-readable text of this pseudo-class selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.OnlyChild">
            <summary>
            Generates human-readable text of this pseudo-class selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.Empty">
            <summary>
            Generates human-readable text of this pseudo-class selector.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.Child">
            <summary>
            Generates human-readable text of this combinator.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.Descendant">
            <summary>
            Generates human-readable text of this combinator.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.Adjacent">
            <summary>
            Generates human-readable text of this combinator.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.GeneralSibling">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which separates two sequences of simple selectors. The elements represented
            by the two sequences share the same parent in the document tree and the
            element represented by the first sequence precedes (not necessarily
            immediately) the element represented by the second one.
            </summary>
        </member>
        <member name="M:Fizzler.HumanReadableSelectorGenerator.NthLastChild(System.Int32,System.Int32)">
            <summary>
            Generates human-readable text of this combinator.
            </summary>
        </member>
        <member name="T:Fizzler.IElementOps`1">
            <summary>
            Represents a selectors implementation for an arbitrary document/node system.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.Type(Fizzler.NamespacePrefix,System.String)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#type-selectors">type selector</a>,
            which represents an instance of the element type in the document tree. 
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.Universal(Fizzler.NamespacePrefix)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#universal-selector">universal selector</a>,
            any single element in the document tree in any namespace 
            (including those without a namespace) if no default namespace 
            has been specified for selectors. 
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.Id(System.String)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#Id-selectors">ID selector</a>,
            which represents an element instance that has an identifier that 
            matches the identifier in the ID selector.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.Class(System.String)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#class-html">class selector</a>,
            which is an alternative <see cref="M:Fizzler.IElementOps`1.AttributeIncludes(Fizzler.NamespacePrefix,System.String,System.String)"/> when 
            representing the <c>class</c> attribute. 
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.AttributeExists(Fizzler.NamespacePrefix,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>
            whatever the values of the attribute.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.AttributeExact(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>
            and whose value is exactly <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.AttributeIncludes(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>
            and whose value is a whitespace-separated list of words, one of 
            which is exactly <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.AttributeDashMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>,
            its value either being exactly <paramref name="value"/> or beginning 
            with <paramref name="value"/> immediately followed by "-" (U+002D).
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.AttributePrefixMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the attribute <paramref name="name"/> 
            whose value begins with the prefix <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.AttributeSuffixMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the attribute <paramref name="name"/> 
            whose value ends with the suffix <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.AttributeSubstring(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the attribute <paramref name="name"/> 
            whose value contains at least one instance of the substring <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.FirstChild">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the first child of some other element.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.LastChild">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the last child of some other element.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.NthChild(System.Int32,System.Int32)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the N-th child of some other element.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.OnlyChild">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that has a parent element and whose parent 
            element has no other element children.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.Empty">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that has no children at all.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.Child">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which represents a childhood relationship between two elements.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.Descendant">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which represents a relationship between two elements where one element is an 
            arbitrary descendant of some ancestor element.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.Adjacent">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which represents elements that share the same parent in the document tree and 
            where the first element immediately precedes the second element.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.GeneralSibling">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which separates two sequences of simple selectors. The elements represented
            by the two sequences share the same parent in the document tree and the
            element represented by the first sequence precedes (not necessarily
            immediately) the element represented by the second one.
            </summary>
        </member>
        <member name="M:Fizzler.IElementOps`1.NthLastChild(System.Int32,System.Int32)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the N-th child from bottom up of some other element.
            </summary>
        </member>
        <member name="T:Fizzler.ISelectorGenerator">
            <summary>
            Represent an implementation that is responsible for generating
            an implementation for a selector.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.OnInit">
            <summary>
            Delimits the initialization of a generation.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.OnClose">
            <summary>
            Delimits the closing/conclusion of a generation.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.OnSelector">
            <summary>
            Delimits a selector generation in a group of selectors.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.Type(Fizzler.NamespacePrefix,System.String)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#type-selectors">type selector</a>,
            which represents an instance of the element type in the document tree. 
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.Universal(Fizzler.NamespacePrefix)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#universal-selector">universal selector</a>,
            any single element in the document tree in any namespace 
            (including those without a namespace) if no default namespace 
            has been specified for selectors. 
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.Id(System.String)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#Id-selectors">ID selector</a>,
            which represents an element instance that has an identifier that 
            matches the identifier in the ID selector.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.Class(System.String)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#class-html">class selector</a>,
            which is an alternative <see cref="M:Fizzler.ISelectorGenerator.AttributeIncludes(Fizzler.NamespacePrefix,System.String,System.String)"/> when 
            representing the <c>class</c> attribute. 
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.AttributeExists(Fizzler.NamespacePrefix,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>
            whatever the values of the attribute.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.AttributeExact(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>
            and whose value is exactly <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.AttributeIncludes(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>
            and whose value is a whitespace-separated list of words, one of 
            which is exactly <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.AttributeDashMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>,
            its value either being exactly <paramref name="value"/> or beginning 
            with <paramref name="value"/> immediately followed by "-" (U+002D).
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.AttributePrefixMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the attribute <paramref name="name"/> 
            whose value begins with the prefix <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.AttributeSuffixMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the attribute <paramref name="name"/> 
            whose value ends with the suffix <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.AttributeSubstring(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the attribute <paramref name="name"/> 
            whose value contains at least one instance of the substring <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.FirstChild">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the first child of some other element.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.LastChild">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the last child of some other element.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.NthChild(System.Int32,System.Int32)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the N-th child of some other element.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.OnlyChild">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that has a parent element and whose parent 
            element has no other element children.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.Empty">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that has no children at all.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.Child">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which represents a childhood relationship between two elements.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.Descendant">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which represents a relationship between two elements where one element is an 
            arbitrary descendant of some ancestor element.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.Adjacent">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which represents elements that share the same parent in the document tree and 
            where the first element immediately precedes the second element.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.GeneralSibling">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which separates two sequences of simple selectors. The elements represented
            by the two sequences share the same parent in the document tree and the
            element represented by the first sequence precedes (not necessarily
            immediately) the element represented by the second one.
            </summary>
        </member>
        <member name="M:Fizzler.ISelectorGenerator.NthLastChild(System.Int32,System.Int32)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the N-th child from bottom up of some other element.
            </summary>
        </member>
        <member name="T:Fizzler.NamespacePrefix">
            <summary>
            Represent a type or attribute name.
            </summary>
        </member>
        <member name="F:Fizzler.NamespacePrefix.None">
            <summary>
            Represents a name from either the default or any namespace 
            in a target document, depending on whether a default namespace is
            in effect or not.
            </summary>
        </member>
        <member name="F:Fizzler.NamespacePrefix.Empty">
            <summary>
            Represents an empty namespace.
            </summary>
        </member>
        <member name="F:Fizzler.NamespacePrefix.Any">
            <summary>
            Represents any namespace.
            </summary>
        </member>
        <member name="M:Fizzler.NamespacePrefix.#ctor(System.String)">
            <summary>
            Initializes an instance with a namespace prefix specification.
            </summary>
        </member>
        <member name="P:Fizzler.NamespacePrefix.Text">
            <summary>
            Gets the raw text value of this instance.
            </summary>
        </member>
        <member name="P:Fizzler.NamespacePrefix.IsNone">
            <summary>
            Indicates whether this instance represents a name
            from either the default or any namespace in a target
            document, depending on whether a default namespace is
            in effect or not.
            </summary>
        </member>
        <member name="P:Fizzler.NamespacePrefix.IsAny">
            <summary>
            Indicates whether this instance represents a name
            from any namespace (including one without one)
            in a target document.
            </summary>
        </member>
        <member name="P:Fizzler.NamespacePrefix.IsEmpty">
            <summary>
            Indicates whether this instance represents a name
            without a namespace in a target document.
            </summary>
        </member>
        <member name="P:Fizzler.NamespacePrefix.IsSpecific">
            <summary>
            Indicates whether this instance represents a name from a 
            specific namespace or not.
            </summary>
        </member>
        <member name="M:Fizzler.NamespacePrefix.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
        </member>
        <member name="M:Fizzler.NamespacePrefix.Equals(Fizzler.NamespacePrefix)">
            <summary>
            Indicates whether this instance and another are equal.
            </summary>
        </member>
        <member name="M:Fizzler.NamespacePrefix.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Fizzler.NamespacePrefix.ToString">
            <summary>
            Returns a string representation of this instance.
            </summary>
        </member>
        <member name="M:Fizzler.NamespacePrefix.Format(System.String)">
            <summary>
            Formats this namespace together with a name.
            </summary>
        </member>
        <member name="T:Fizzler.Parser">
            <summary>
            Semantic parser for CSS selector grammar.
            </summary>
        </member>
        <member name="M:Fizzler.Parser.Parse``1(System.String,``0)">
            <summary>
            Parses a CSS selector group and generates its implementation.
            </summary>
        </member>
        <member name="M:Fizzler.Parser.Parse``2(System.String,``0,System.Func{``0,``1})">
            <summary>
            Parses a CSS selector group and generates its implementation.
            </summary>
        </member>
        <member name="M:Fizzler.Parser.Parse``1(System.Collections.Generic.IEnumerable{Fizzler.Token},``0)">
            <summary>
            Parses a tokenized stream representing a CSS selector group and 
            generates its implementation.
            </summary>
        </member>
        <member name="M:Fizzler.Parser.Parse``2(System.Collections.Generic.IEnumerable{Fizzler.Token},``0,System.Func{``0,``1})">
            <summary>
            Parses a tokenized stream representing a CSS selector group and 
            generates its implementation.
            </summary>
        </member>
        <member name="T:Fizzler.Reader`1">
            <summary>
            Adds reading semantics to a base <see cref="T:System.Collections.Generic.IEnumerator`1"/> with the 
            option to un-read and insert new elements while consuming the source.
            </summary>
        </member>
        <member name="M:Fizzler.Reader`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initialize a new <see cref="T:Fizzler.Reader`1"/> with a base
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> object.
            </summary>
        </member>
        <member name="M:Fizzler.Reader`1.#ctor(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Initialize a new <see cref="T:Fizzler.Reader`1"/> with a base
            <see cref="T:System.Collections.Generic.IEnumerator`1"/> object.
            </summary>
        </member>
        <member name="P:Fizzler.Reader`1.HasMore">
            <summary>
            Indicates whether there is, at least, one value waiting to be read or not.
            </summary>
        </member>
        <member name="M:Fizzler.Reader`1.Unread(`0)">
            <summary>
            Pushes back a new value that will be returned on the next read.
            </summary>
        </member>
        <member name="M:Fizzler.Reader`1.Read">
            <summary>
            Reads and returns the next value.
            </summary>
        </member>
        <member name="M:Fizzler.Reader`1.Peek">
            <summary>
            Peeks the next value waiting to be read.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if there is no value waiting to be read.
            </exception>
        </member>
        <member name="M:Fizzler.Reader`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the remaining
            values to be read.
            </summary>
        </member>
        <member name="M:Fizzler.Reader`1.Close">
            <summary>
            Disposes the enumerator used to initialize this object
            if that enumerator supports <see cref="T:System.IDisposable"/>.
            </summary>
        </member>
        <member name="T:Fizzler.Selector`1">
            <summary>
            Represents a selector implementation over an arbitrary type of elements.
            </summary>
        </member>
        <member name="T:Fizzler.SelectorGenerator`1">
            <summary>
            A selector generator implementation for an arbitrary document/element system.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.#ctor(Fizzler.IElementOps{`0})">
            <summary>
            Initializes a new instance of this object with an instance
            of <see cref="T:Fizzler.IElementOps`1"/> and the default equality
            comparer that is used for determining if two elements are equal.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.#ctor(Fizzler.IElementOps{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of this object with an instance
            of <see cref="T:Fizzler.IElementOps`1"/> and an equality comparer
            used for determining if two elements are equal.
            </summary>
        </member>
        <member name="P:Fizzler.SelectorGenerator`1.Selector">
            <summary>
            Gets the selector implementation.
            </summary>
            <remarks>
            If the generation is not complete, this property returns the 
            last generated selector.
            </remarks>
        </member>
        <member name="P:Fizzler.SelectorGenerator`1.Ops">
            <summary>
            Gets the <see cref="T:Fizzler.IElementOps`1"/> instance that this object
            was initialized with.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.GetSelectors">
            <summary>
            Returns the collection of selector implementations representing 
            a group.
            </summary>
            <remarks>
            If the generation is not complete, this method return the 
            selectors generated so far in a group.
            </remarks>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.Add(Fizzler.Selector{`0})">
            <summary>
            Adds a generated selector.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.OnInit">
            <summary>
            Delimits the initialization of a generation.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.OnSelector">
            <summary>
            Delimits a selector generation in a group of selectors.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.OnClose">
            <summary>
            Delimits the closing/conclusion of a generation.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.Id(System.String)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#Id-selectors">ID selector</a>,
            which represents an element instance that has an identifier that 
            matches the identifier in the ID selector.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.Class(System.String)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#class-html">class selector</a>,
            which is an alternative <see cref="M:Fizzler.ISelectorGenerator.AttributeIncludes(Fizzler.NamespacePrefix,System.String,System.String)"/> when 
            representing the <c>class</c> attribute. 
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.Type(Fizzler.NamespacePrefix,System.String)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#type-selectors">type selector</a>,
            which represents an instance of the element type in the document tree. 
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.Universal(Fizzler.NamespacePrefix)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#universal-selector">universal selector</a>,
            any single element in the document tree in any namespace 
            (including those without a namespace) if no default namespace 
            has been specified for selectors. 
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.AttributeExists(Fizzler.NamespacePrefix,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>
            whatever the values of the attribute.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.AttributeExact(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>
            and whose value is exactly <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.AttributeIncludes(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>
            and whose value is a whitespace-separated list of words, one of 
            which is exactly <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.AttributeDashMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the given attribute <paramref name="name"/>,
            its value either being exactly <paramref name="value"/> or beginning 
            with <paramref name="value"/> immediately followed by "-" (U+002D).
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.AttributePrefixMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the attribute <paramref name="name"/> 
            whose value begins with the prefix <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.AttributeSuffixMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the attribute <paramref name="name"/> 
            whose value ends with the suffix <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.AttributeSubstring(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Generates an <a href="http://www.w3.org/TR/css3-selectors/#attribute-selectors">attribute selector</a>
            that represents an element with the attribute <paramref name="name"/> 
            whose value contains at least one instance of the substring <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.FirstChild">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the first child of some other element.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.LastChild">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the last child of some other element.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.NthChild(System.Int32,System.Int32)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the N-th child of some other element.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.OnlyChild">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that has a parent element and whose parent 
            element has no other element children.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.Empty">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that has no children at all.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.Child">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which represents a childhood relationship between two elements.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.Descendant">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which represents a relationship between two elements where one element is an 
            arbitrary descendant of some ancestor element.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.Adjacent">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which represents elements that share the same parent in the document tree and 
            where the first element immediately precedes the second element.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.GeneralSibling">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#combinators">combinator</a>,
            which separates two sequences of simple selectors. The elements represented
            by the two sequences share the same parent in the document tree and the
            element represented by the first sequence precedes (not necessarily
            immediately) the element represented by the second one.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGenerator`1.NthLastChild(System.Int32,System.Int32)">
            <summary>
            Generates a <a href="http://www.w3.org/TR/css3-selectors/#pseudo-classes">pseudo-class selector</a>,
            which represents an element that is the N-th child from bottom up of some other element.
            </summary>
        </member>
        <member name="T:Fizzler.SelectorGeneratorTee">
            <summary>
            An <see cref="T:Fizzler.ISelectorGenerator"/> implementation that delegates
            to two other <see cref="T:Fizzler.ISelectorGenerator"/> objects, which
            can be useful for doing work in a single pass.
            </summary>
        </member>
        <member name="P:Fizzler.SelectorGeneratorTee.Primary">
            <summary>
            Gets the first generator used to initialize this generator.
            </summary>
        </member>
        <member name="P:Fizzler.SelectorGeneratorTee.Secondary">
            <summary>
            Gets the second generator used to initialize this generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.#ctor(Fizzler.ISelectorGenerator,Fizzler.ISelectorGenerator)">
            <summary>
            Initializes a new instance of <see cref="T:Fizzler.SelectorGeneratorTee"/>
            with the two other <see cref="T:Fizzler.ISelectorGenerator"/> objects
            it delegates to.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.OnInit">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.OnClose">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.OnSelector">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.Type(Fizzler.NamespacePrefix,System.String)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.Universal(Fizzler.NamespacePrefix)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.Id(System.String)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.Class(System.String)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.AttributeExists(Fizzler.NamespacePrefix,System.String)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.AttributeExact(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.AttributeIncludes(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.AttributeDashMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.AttributePrefixMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.AttributeSuffixMatch(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.AttributeSubstring(Fizzler.NamespacePrefix,System.String,System.String)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.FirstChild">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.LastChild">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.NthChild(System.Int32,System.Int32)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.OnlyChild">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.Empty">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.Child">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.Descendant">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.Adjacent">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.GeneralSibling">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorGeneratorTee.NthLastChild(System.Int32,System.Int32)">
            <summary>
            Delegates to <see cref="P:Fizzler.SelectorGeneratorTee.Primary"/> then <see cref="P:Fizzler.SelectorGeneratorTee.Secondary"/> generator.
            </summary>
        </member>
        <member name="T:Fizzler.SelectorsCachingCompiler">
            <summary>
            Implementation for a selectors compiler that supports caching.
            </summary>
            <remarks>
            This class is primarily targeted for developers of selection
            over an arbitrary document model.
            </remarks>
        </member>
        <member name="M:Fizzler.SelectorsCachingCompiler.Create``1(System.Func{System.String,``0})">
            <summary>
            Creates a caching selectors compiler on top on an existing compiler.
            </summary>
        </member>
        <member name="M:Fizzler.SelectorsCachingCompiler.Create``1(System.Func{System.String,``0},System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            Creates a caching selectors compiler on top on an existing compiler.
            An addition parameter specified a dictionary to use as the cache.
            </summary>
            <remarks>
            If <paramref name="cache"/> is <c>null</c> then this method uses a
            the <see cref="T:System.Collections.Generic.Dictionary`2"/> implementation with an 
            ordinally case-insensitive selectors text comparer.
            </remarks>
        </member>
        <member name="T:Fizzler.Token">
            <summary>
            Represent a token and optionally any text associated with it.
            </summary>
        </member>
        <member name="P:Fizzler.Token.Kind">
            <summary>
            Gets the kind/type/class of the token.
            </summary>
        </member>
        <member name="P:Fizzler.Token.Text">
            <summary>
            Gets text, if any, associated with the token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Eoi">
            <summary>
            Creates an end-of-input token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Star">
            <summary>
            Creates a star token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Dot">
            <summary>
            Creates a dot token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Colon">
            <summary>
            Creates a colon token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Comma">
            <summary>
            Creates a comma token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.RightParenthesis">
            <summary>
            Creates a right parenthesis token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Equals">
            <summary>
            Creates an equals token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.LeftBracket">
            <summary>
            Creates a left bracket token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.RightBracket">
            <summary>
            Creates a right bracket token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Pipe">
            <summary>
            Creates a pipe (vertical line) token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Plus">
            <summary>
            Creates a plus token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Greater">
            <summary>
            Creates a greater token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Includes">
            <summary>
            Creates an includes token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.DashMatch">
            <summary>
            Creates a dash-match token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.PrefixMatch">
            <summary>
            Creates a prefix-match token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.SuffixMatch">
            <summary>
            Creates a suffix-match token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.SubstringMatch">
            <summary>
            Creates a substring-match token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Tilde">
            <summary>
            Creates a general sibling token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Ident(System.String)">
            <summary>
            Creates an identifier token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Integer(System.String)">
            <summary>
            Creates an integer token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Hash(System.String)">
            <summary>
            Creates a hash-name token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.WhiteSpace(System.String)">
            <summary>
            Creates a white-space token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.String(System.String)">
            <summary>
            Creates a string token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Function(System.String)">
            <summary>
            Creates a function token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Char(System.Char)">
            <summary>
            Creates an arbitrary character token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
        </member>
        <member name="M:Fizzler.Token.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Fizzler.Token.Equals(Fizzler.Token)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
        </member>
        <member name="M:Fizzler.Token.ToString">
            <summary>
            Gets a string representation of the token.
            </summary>
        </member>
        <member name="M:Fizzler.Token.op_Equality(Fizzler.Token,Fizzler.Token)">
            <summary>
            Performs a logical comparison of the two tokens to determine 
            whether they are equal. 
            </summary>
        </member>
        <member name="M:Fizzler.Token.op_Inequality(Fizzler.Token,Fizzler.Token)">
            <summary>
            Performs a logical comparison of the two tokens to determine 
            whether they are inequal. 
            </summary>
        </member>
        <member name="T:Fizzler.Tokener">
            <summary>
            Lexer for tokens in CSS selector grammar.
            </summary>
        </member>
        <member name="M:Fizzler.Tokener.Tokenize(System.IO.TextReader)">
            <summary>
            Parses tokens from a given text source.
            </summary>
        </member>
        <member name="M:Fizzler.Tokener.Tokenize(System.String)">
            <summary>
            Parses tokens from a given string.
            </summary>
        </member>
        <member name="T:Fizzler.TokenKind">
            <summary>
            Represents the classification of a token.
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.Eoi">
            <summary>
            Represents end of input/file/stream
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.Ident">
            <summary>
            Represents {ident}
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.Hash">
            <summary>
            Represents "#" {name}
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.Includes">
            <summary>
            Represents "~="
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.DashMatch">
            <summary>
            Represents "|="
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.PrefixMatch">
            <summary>
            Represents "^="
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.SuffixMatch">
            <summary>
            Represents "$="
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.SubstringMatch">
            <summary>
            Represents "*="
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.String">
            <summary>
            Represents {string}
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.Plus">
            <summary>
            Represents S* "+"
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.Greater">
            <summary>
            Represents S* ">"
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.WhiteSpace">
            <summary>
            Represents [ \t\r\n\f]+
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.Function">
            <summary>
            Represents {ident} ")"
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.Integer">
            <summary>
            Represents [0-9]+
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.Tilde">
            <summary>
            Represents S* "~"
            </summary>
        </member>
        <member name="F:Fizzler.TokenKind.Char">
            <summary>
            Represents an arbitrary character
            </summary>
        </member>
    </members>
</doc>
